This is Info file pm.info, produced by Makeinfo version 1.68 from the
input file bigpm.texi.


File: pm.info,  Node: FFI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FFI Menu
********

   This is the documentation for modules associated with the main module
FFI.

* Menu:

* FFI Itself: FFI. Perl Foreign Function Interface
* FFI/Library:: Perl Access to Dynamically Loaded Libraries


File: pm.info,  Node: Festival-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Festival Menu
*************

   This is the documentation for modules associated with the main module
Festival.

* Menu:

* Festival/Client:: Communicate with a Festival server


File: pm.info,  Node: File-menu,  Next: Module List,  Prev: Module List,  Up: Module List

File Menu
*********

   This is the documentation for modules associated with the main module
File.

* Menu:

* File/Archive:: Figure out what is in an archive file
* File/BSDGlob:: Perl extension for BSD glob routine
* File/Backup:: For making rotating backups of directories
* File/Basename:: split a pathname into pieces
* File/BasicFlock:: file locking with flock
* File/Binary:: Binary file reading module
* File/Cache:: Share data between processes via filesystem
* File/Cat:: Perl implementation of cat(1)
* File/CheckTree:: run many filetest checks on a tree
* File/Compare:: Compare files or filehandles
* File/Copy:: Copy files or filehandles
* File/CounterFile:: Persistent counter class
* File/Descriptions:: Perl extension for getting file descriptions
* File/DosGlob:: DOS like globbing and then some
* File/FDpasser:: Perl extension for blah blah blah
* File/Find:: traverse a file tree
* File/Flock:: file locking with flock
* File/FlockDir:: override perl flock() for network or portability purposes
* File/Glob:: Perl extension for BSD glob routine
* File/HomeDir:: get home directory for self or other users
* File/LckPwdF:: Lock and unlock the passwd and shadow files with lckpwdf and ulckpwdf
* File/Listing:: parse directory listing
* File/MMagic:: Guess file type
* File/MkTemp:: Make temporary filename from template
* File/MkTempO:: Make temporary filename from template
* File/MultiTail:: Tail multiple files for Unix systems
* File/NCopy:: Copy file, file               Copy file[s] | dir[s], dir
* File/Path:: create or remove directory trees
* File/PathConvert:: convert an absolute path to a relative path
* File/ReadBackwards:: Read a file backwards by lines.
* File/Remote:: Read/write/edit remote files transparently
* File/Remove:: Remove files and directories
* File/Slurp:: single call read & write file routines; read directories
* File/Sort:: Sort a file or merge sort multiple files
* File/Spec:: portably perform operations on file names
* File/Spec/Functions:: portably perform operations on file names
* File/Spec/Mac:: File::Spec for MacOS
* File/Spec/OS2:: methods for OS/2 file specs
* File/Spec/Unix:: methods used by File::Spec
* File/Spec/VMS:: methods for VMS file specs
* File/Spec/Win32:: methods for Win32 file specs
* File/Sync:: Perl access to fsync() and sync() function calls
* File/Tail:: Perl extension for reading from continously updated files
* File/Temp:: return name and handle of a temporary file safely
* File/chmod:: Implements symbolic and ls chmod modes
* File/lockf:: Perl module interface to the lockf system call
* File/stat:: by-name interface to Perl's built-in stat() functions


File: pm.info,  Node: FileHandle-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FileHandle Menu
***************

   This is the documentation for modules associated with the main module
FileHandle.

* Menu:

* FileHandle Itself: FileHandle. supply object methods for filehandles
* FileHandle/Multi:: Print to multiple filehandles with one output call


File: pm.info,  Node: FileSys-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FileSys Menu
************

   This is the documentation for modules associated with the main module
FileSys.

* Menu:

* FileSys/Ext2:: Interface to e2fs filesystem attributes


File: pm.info,  Node: Filesys-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Filesys Menu
************

   This is the documentation for modules associated with the main module
Filesys.

* Menu:

* Filesys/Df:: Perl extension for obtaining file system stats.
* Filesys/DiskFree:: perform the Unix command 'df' in a portable fashion
* Filesys/DiskSpace:: Perl df
* Filesys/Ext2:: Interface to e2fs filesystem attributes
* Filesys/SmbClient:: Perl extension for access Samba filesystem with libsmclient.so
* Filesys/SmbClientParser:: Perl client to reach Samba ressources
* Filesys/Statvfs:: Perl extension for statvfs().


File: pm.info,  Node: Filter-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Filter Menu
***********

   This is the documentation for modules associated with the main module
Filter.

* Menu:

* Filter/Handle:: Apply filters to output filehandles
* Filter/Simple:: Simplified source filtering
* Filter/Util/Call:: Perl Source Filter Utility Module
* Filter/Util/Exec:: exec source filter
* Filter/cpp:: cpp source filter
* Filter/decrypt:: template for a decrypt source filter
* Filter/exec:: exec source filter
* Filter/sh:: sh source filter
* Filter/tee:: tee source filter


File: pm.info,  Node: Finance-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Finance Menu
************

   This is the documentation for modules associated with the main module
Finance.

* Menu:

* Finance/Bank/Sporo:: Perl extension for *SporoPay* of Slovenska Sporitelna.
* Finance/Bank/TB:: Perl extension for *TatraPay* and *CardPay* of Tatrabanka and *EliotPay* of .eliot.
* Finance/Currency/Convert:: Convert currencies and fetch their exchange rates (with Finance::Quote)
* Finance/HSHrates:: Get current US Mortgage Rates from HSH
* Finance/Huntington/Statement:: Perl extension for parsing html bank statements from the Huntington Bank website.
* Finance/MoneyNetSymbolLookup:: Look up a stock symbol from MoneyNet
* Finance/Options/Calc:: Option analysis based on different option pricing models.
* Finance/Quote:: Get stock and mutual fund quotes from various exchanges
* Finance/Quote/ASX:: Obtain quotes from the Australian Stock Exchange.
* Finance/Quote/DWS:: Obtain quotes from DWS (Deutsche Bank Gruppe).
* Finance/Quote/Fidelity:: Obtain information from Fidelity Investments.
* Finance/Quote/Tiaacref:: Obtain quote from TIAA-CREF.
* Finance/Quote/Troweprice:: Obtain quotes from T. Rowe Price
* Finance/Quote/Trustnet:: Obtain unit trust prices from trustnet.co.uk
* Finance/Quote/VWD:: Obtain quotes from vwd Vereinigte Wirtschaftsdienste GmbH.
* Finance/Quote/Yahoo/Australia:: Fetch Australian stock quotes via Yahoo.
* Finance/Quote/Yahoo/Base:: Common functions for fetching Yahoo info.
* Finance/Quote/Yahoo/Europe:: Fetch quotes from Yahoo Europe
* Finance/Quote/Yahoo/USA:: Obtain information about stocks and funds in the USA and Canada.
* Finance/QuoteHist:: Perl module for fetching historical stock quotes.
* Finance/QuoteHist/FinancialWeb:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/Generic:: Base class for retrieving historical stock quotes.
* Finance/QuoteHist/MotleyFool:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/SiliconInvestor:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/Yahoo:: Site-specific subclass for retrieving historical stock quotes.
* Finance/YahooChart:: Get a chart from Yahoo! Finance
* Finance/YahooQuote:: Get a stock quote from Yahoo!


File: pm.info,  Node: Font-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Font Menu
*********

   This is the documentation for modules associated with the main module
Font.

* Menu:

* Font/AFM:: Interface to Adobe Font Metrics files
* Font/Fret:: Font REporting Tool
* Font/TFM:: read information from TeX font metric files


File: pm.info,  Node: FormMagick-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FormMagick Menu
***************

   This is the documentation for modules associated with the main module
FormMagick.

* Menu:

* FormMagick Itself: FormMagick. easily create CGI form-based applications
* FormMagick/FAQ:: Frequently asked questions about FormMagick
* FormMagick/L10N:: MISSING SHORT DESCRIPTION
* FormMagick/TagMaker:: Perl module that can create any HTML tags, as well as groups of or just parts of them, and complete html headers or footers.
* FormMagick/Validator:: MISSING SHORT DESCRIPTION


File: pm.info,  Node: Frontier-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Frontier Menu
*************

   This is the documentation for modules associated with the main module
Frontier.

* Menu:

* Frontier/Client:: issue Frontier XML RPC requests to a server
* Frontier/Daemon:: receive Frontier XML RPC requests
* Frontier/RPC2:: encode/decode RPC2 format XML


File: pm.info,  Node: Function-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Function Menu
*************

   This is the documentation for modules associated with the main module
Function.

* Menu:

* Function/Override:: Add callbacks to existing functions.


File: pm.info,  Node: Fwctl-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Fwctl Menu
**********

   This is the documentation for modules associated with the main module
Fwctl.

* Menu:

* Fwctl Itself: Fwctl. Perl module to configure the Linux kernel packet filtering firewall.
* Fwctl/AcctReport:: Generates reports from `fwctl dump-acct' command.
* Fwctl/Report:: Generates reports from fwctllog output.
* Fwctl/RuleSet:: Module to add sets of rules to the linux firewall.
* Fwctl/Services/all:: Fwctl module to handle any IP traffic.
* Fwctl/Services/dhcp:: Fwctl module to handle the dhcp protocol.
* Fwctl/Services/ftp:: Fwctl module to handle the FTP service.
* Fwctl/Services/http:: Fwctl module to handle HTTP protocol.
* Fwctl/Services/hylafax:: Fwctl module to handle the HylaFax protocol.
* Fwctl/Services/icmp_pkt:: Fwctl module to handle arbitrary ICMP packet.
* Fwctl/Services/ip_pkt:: Fwctl module to handle non UDP/TCP/ICMP packets.
* Fwctl/Services/ipsec:: Fwctl module to handle the IPSec protocol.
* Fwctl/Services/lpd:: Fwctl module to handle the Berkeley Line Printer 		       protocol.
* Fwctl/Services/name_service:: Fwctl module to handle the DNS protocol.
* Fwctl/Services/netbios:: Fwctl module to handle NetBIOS traffic.
* Fwctl/Services/ntp:: Fwctl module to handle the NTP protocol.
* Fwctl/Services/pcanywhere:: Fwctl module to handle the PC Anywhere protocol.
* Fwctl/Services/ping:: Fwctl module to handle the ping service.
* Fwctl/Services/portmap:: Fwctl module to handle the portmapper service.
* Fwctl/Services/pptp:: Fwctl module to handle the PPTP service.
* Fwctl/Services/redirect:: Fwctl module to handle ICMP redirect messages.
* Fwctl/Services/rsh:: Fwctl module to handle the rsh protocol.
* Fwctl/Services/snmp:: Fwctl module to handle the snmp protocol.
* Fwctl/Services/syslog:: Fwctl module to handle syslog UDP traffic.
* Fwctl/Services/tcp_service:: Fwctl module to handle simple TCP client/server communication.
* Fwctl/Services/tftp:: Fwctl module to handle tftp protocol.
* Fwctl/Services/timed:: Fwctl module to handle any IP traffic.
* Fwctl/Services/traceroute:: Fwctl module to handle traceroute service.
* Fwctl/Services/traffic_control:: Fwctl module to handle the necessary  ICMP traffic.
* Fwctl/Services/udp_pkt:: Fwctl module to hande unidirectional UDP packets.
* Fwctl/Services/udp_service:: Fwctl module to handle bidirectional UDP traffic.


File: pm.info,  Node: GD-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GD Menu
*******

   This is the documentation for modules associated with the main module
GD.

* Menu:

* GD Itself: GD. Interface to Gd Graphics Library
* GD/Barcode:: Create barcode image with GD
* GD/Barcode/COOP2of5:: Create COOP2of5 barcode image with GD
* GD/Barcode/Code39:: Create Code39 barcode image with GD
* GD/Barcode/EAN13:: Create EAN13(JAN13) barcode image with GD
* GD/Barcode/EAN8:: Create EAN8(JAN8) barcode image with GD
* GD/Barcode/IATA2of5:: Create IATA2of5 barcode image with GD
* GD/Barcode/ITF:: Create ITF(Interleaved2of5) barcode image with GD
* GD/Barcode/Industrial2of5:: Create Industrial2of5 barcode image with GD
* GD/Barcode/Matrix2of5:: Create Matrix2of5 barcode image with GD
* GD/Barcode/NW7:: Create NW7 barcode image with GD
* GD/Barcode/UPCA:: Create UPC-A barcode image with GD
* GD/Barcode/UPCE:: Create UPC-E barcode image with GD
* GD/Graph:: Graph Plotting Module for Perl 5
* GD/Graph/Data:: Data set encapsulation for GD::Graph
* GD/Graph/Error:: Error handling for GD::Graph classes
* GD/Graph/FAQ:: Frequently asked questions
* GD/Graph/Map:: generate HTML map text for GD::Graph diagramms.
* GD/Graph/colour:: Colour manipulation routines for use with GD::Graph
* GD/Graph3d:: Create 3D Graphs with GD and GD::Graph
* GD/Text:: Text utilities for use with GD
* GD/Text/Align:: Draw aligned strings
* GD/Text/Wrap:: Wrap strings in boxes


File: pm.info,  Node: GIFgraph-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GIFgraph Menu
*************

   This is the documentation for modules associated with the main module
GIFgraph.

* Menu:

* GIFgraph Itself: GIFgraph. Graph Plotting Module (deprecated)
* GIFgraph/EvenlySpaced:: spaces the data points evenly
* GIFgraph/Map:: generate HTML map text.
* GIFgraph/WithMap:: generates HTML map text while plotting graph
* GIFgraph/boxplot:: Box and Whisker Graph Module for Perl 5.
* GIFgraph/colour:: Colour manipulation routines for use with GIFgraph


File: pm.info,  Node: GNOME-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GNOME Menu
**********

   This is the documentation for modules associated with the main module
GNOME.

* Menu:

* GNOME/GNORBA:: Perl extension for using ORBit with GNOME


File: pm.info,  Node: GPS-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GPS Menu
********

   This is the documentation for modules associated with the main module
GPS.

* Menu:

* GPS/Garmin:: Perl interface to GPS equipment using the Garmin Protocol
* GPS/Garmin/Handler:: Handlers to Garmin data
* GPS/Serial:: Access to the Serial port for the GPS::* modules


File: pm.info,  Node: GSSAPI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GSSAPI Menu
***********

   This is the documentation for modules associated with the main module
GSSAPI.

* Menu:

* GSSAPI Itself: GSSAPI. Perl extension providing access to the GSSAPIv2 library
* GSSAPI/OID:: methods for handling GSSAPI OIDs and some constant OIDs
* GSSAPI/OID/Set:: methods for handling sets of GSSAPI OIDs, and some constant OID sets.
* GSSAPI/Status:: methods for handlings GSSAPI statuses


File: pm.info,  Node: Games-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Games Menu
**********

   This is the documentation for modules associated with the main module
Games.

* Menu:

* Games/Alak:: simple game-tree implementation of a gomoku-like game
* Games/Cards:: Perl module for writing and playing card games
* Games/Cards/Tk:: Package to write Tk ports for Games::Cards card games
* Games/Cards/Undo:: undoing/redoing moves in Games::Cards games
* Games/Chess:: represent chess positions and games
* Games/Chess/PGN:: Portable Game Notation for Chess
* Games/Chess/Referee:: work with chess positions and games, according to the rules of chess.
* Games/Dissociate:: a Dissociated Press algorithm and filter
* Games/Maze:: Create Mazes as Objects.
* Games/Maze/MazeD2:: Create maze objects.
* Games/Maze/MazeD3:: Create 3-D maze objects.
* Games/Maze/MazeXD2:: Create hexagon maze objects.
* Games/Maze/MazeXD3:: Create 3-D hexagon maze objects.
* Games/WordFind:: Class for generating Word Find type puzzles
* Games/WordGuess:: a class for creating word-guessing game
* Games/Worms:: alife simulator for Conway/Patterson/Beeler worms, etc.
* Games/Worms/Base:: base class for worms
* Games/Worms/Beeler:: class for Conway/Patterson/Beeler worms
* Games/Worms/Random:: random worms
* Games/Worms/Random2:: class for consistent random worms


File: pm.info,  Node: Gedcom-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Gedcom Menu
***********

   This is the documentation for modules associated with the main module
Gedcom.

* Menu:

* Gedcom Itself: Gedcom. a module to manipulate Gedcom genealogy files
* Gedcom/CGI:: Basic CGI routines for Gedcom.pm
* Gedcom/Event:: a module to manipulate Gedcom events
* Gedcom/Family:: a module to manipulate Gedcom families
* Gedcom/Grammar:: a module to manipulate Gedcom grammars
* Gedcom/Individual:: a module to manipulate Gedcom individuals
* Gedcom/Item:: a base class for Gedcom::Grammar and Gedcom::Record
* Gedcom/LifeLines:: functions for lines2perl
* Gedcom/Record:: a module to manipulate Gedcom records


File: pm.info,  Node: Geo-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Geo Menu
********

   This is the documentation for modules associated with the main module
Geo.

* Menu:

* Geo/GNUPlot:: Perl extension for plotting position tracks onto a world map.
* Geo/METAR:: Process aviation weather reports in the METAR format.
* Geo/StormTracker:: Perl bundle for working with national weather advisories
* Geo/StormTracker/Advisory:: The weather advisory object of the perl Storm-Tracker bundle.
* Geo/StormTracker/Data:: The weather event object of the perl Storm-Tracker bundle.
* Geo/StormTracker/Main:: Master method of the Storm-Tracker perl bundle for dealing with Weather Advisories.
* Geo/StormTracker/Parser:: Perl extension for Parsing Weather Advisories
* Geo/Storm_Tracker:: Perl bundle for working with national weather advisories
* Geo/Storm_Tracker/Advisory:: The weather advisory object of the perl Storm-Tracker bundle.
* Geo/Storm_Tracker/Data:: The weather event object of the perl Storm-Tracker bundle.
* Geo/Storm_Tracker/Main:: Master method of the Storm-Tracker perl bundle for dealing with Weather Advisories.
* Geo/Storm_Tracker/Parser:: Perl extension for Parsing Weather Advisories
* Geo/TigerLine:: TIGER/Line geographic data
* Geo/TigerLine/Record:: Superclass for all TIGER/Line record classes.
* Geo/TigerLine/Record/:: MISSING SHORT DESCRIPTION
* Geo/TigerLine/Record/1:: TIGER/Line 1998 Complete Chain Basic Data Record
* Geo/TigerLine/Record/2:: TIGER/Line 1998 Complete Chain Shape Coordinates
* Geo/TigerLine/Record/3:: TIGER/Line 1998 Complete Chain Geographic Entity Codes
* Geo/TigerLine/Record/4:: TIGER/Line 1998 Index to Alternative Feature Identifiers
* Geo/TigerLine/Record/5:: TIGER/Line 1998 Complete Chain Feature Identifiers
* Geo/TigerLine/Record/6:: TIGER/Line 1998 Additional Address Range and ZIP Code Data
* Geo/TigerLine/Record/7:: TIGER/Line 1998 Landmark  Features
* Geo/TigerLine/Record/8:: TIGER/Line 1998 Polygons Linked to Area Landmarks
* Geo/TigerLine/Record/9:: TIGER/Line 1998 Key Geographic Location Features
* Geo/TigerLine/Record/A:: TIGER/Line 1998 Polygon Geographic Entity Codes
* Geo/TigerLine/Record/Accessor:: Accessor generation for Geo::TigerLine::Record::*
* Geo/TigerLine/Record/C:: TIGER/Line 1998 Geographic Entity Names
* Geo/TigerLine/Record/H:: TIGER/Line 1998 TIGER/Line ID History
* Geo/TigerLine/Record/I:: TIGER/Line 1998 Link Between Complete Chains and Polygons
* Geo/TigerLine/Record/P:: TIGER/Line 1998 Polygon Internal Point
* Geo/TigerLine/Record/Parser:: Parsing superclass for TIGER/Line records.
* Geo/TigerLine/Record/R:: TIGER/Line 1998 TIGER/Line ID Record Number Range
* Geo/TigerLine/Record/S:: TIGER/Line 1998 Polygon Additional Geographic Entity Codes
* Geo/TigerLine/Record/Z:: TIGER/Line 1998 ZIP+4 Codes
* Geo/Walkabout/Chain:: An open path representing the shape of a line feature.
* Geo/Walkabout/Line:: A "line feature"
* Geo/Walkabout/Utils:: Utility functions for Geo::Walkabout.
* Geo/Weather:: Weather retrieval module
* Geo/WeatherNOAA:: Perl extension for interpreting the NOAA weather data


File: pm.info,  Node: Geography-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Geography Menu
**************

   This is the documentation for modules associated with the main module
Geography.

* Menu:

* Geography/Countries:: 2-letter, 3-letter, and numerical codes for countries.
* Geography/States:: Map states and provinces to their codes, and vica versa.
* Geography/USStates:: USA State Data


File: pm.info,  Node: Getargs-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Getargs Menu
************

   This is the documentation for modules associated with the main module
Getargs.

* Menu:

* Getargs/Long:: parse routine arguments


File: pm.info,  Node: Getopt-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Getopt Menu
***********

   This is the documentation for modules associated with the main module
Getopt.

* Menu:

* Getopt/ArgvFile:: interpolates script options from files into @ARGV or another array
* Getopt/Declare:: Declaratively Expressed Command-Line Arguments via Regular Expressions
* Getopt/EvaP:: evaluate Perl command line parameters.
* Getopt/ExPar:: Extended Parameters command line parser.
* Getopt/Long:: Extended processing of command line options
* Getopt/Mixed:: getopt processing with both long and short options
* Getopt/Reference_Parser:: MISSING SHORT DESCRIPTION
* Getopt/Regex:: handle command line options flexibly using regular expressions
* Getopt/Simple:: Provide a simple wrapper around Getopt::Long.
* Getopt/Std:: Process single-character switches with switch clustering
* Getopt/Tabular:: table-driven argument parsing for Perl 5
* Getopt/Tiny:: yet another command line argument parsing module
* Getopt/constant:: set constants from command line options


File: pm.info,  Node: Glade-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Glade Menu
**********

   This is the documentation for modules associated with the main module
Glade.

* Menu:

* Glade/PerlGenerate:: Generate Perl source from a Glade XML project file.


File: pm.info,  Node: GnuPG-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GnuPG Menu
**********

   This is the documentation for modules associated with the main module
GnuPG.

* Menu:

* GnuPG Itself: GnuPG. Perl module interface to the GNU Privacy Guard.
* GnuPG/Fingerprint:: GnuPG Fingerprint Objects
* GnuPG/Handles:: GnuPG handles bundle
* GnuPG/Interface:: Perl interface to GnuPG
* GnuPG/Key:: GnuPG Key Object
* GnuPG/Options:: GnuPG options embodiment
* GnuPG/PublicKey:: GnuPG Public Key Objects
* GnuPG/SecretKey:: GnuPG Secret Key Objects
* GnuPG/Signature:: GnuPG Key Signature Objects
* GnuPG/SubKey:: GnuPG Sub Key objects
* GnuPG/Tie:: Tied filehandle interface to encryption with the GNU Privacy Guard.
* GnuPG/UserId:: GnuPG User ID Objects


File: pm.info,  Node: Gnus-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Gnus Menu
*********

   This is the documentation for modules associated with the main module
Gnus.

* Menu:

* Gnus/Newsrc:: parse ~/.newsrc.eld files


File: pm.info,  Node: GoXML-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GoXML Menu
**********

   This is the documentation for modules associated with the main module
GoXML.

* Menu:

* GoXML/XQI:: Perl extension for the XML Query Interface at xqi.goxml.com.


File: pm.info,  Node: Graph-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Graph Menu
**********

   This is the documentation for modules associated with the main module
Graph.

* Menu:

* Graph Itself: Graph. graph operations
* Graph/BFS:: graph breadth-first search
* Graph/Base:: graph base class
* Graph/DFS:: graph depth-first search
* Graph/Directed:: directed graphs
* Graph/Edge:: a base class for graph edges
* Graph/Element:: a base class for all things graph
* Graph/HeapElem:: internal use only
* Graph/Kruskal:: Kruskal's Algorithm for Minimal Spanning Trees in Graphs
* Graph/Reader:: base class for Graph file format readers
* Graph/Reader/XML:: class for reading a Graph instance from XML
* Graph/Traversal:: graph traversal
* Graph/Undirected:: directed graphs
* Graph/Vertex:: a base class for graph vertices
* Graph/Writer:: base class for Graph file format writers
* Graph/Writer/Dot:: write out directed graph in Dot format
* Graph/Writer/VCG:: write out directed graph in VCG format
* Graph/Writer/XML:: write out directed graph as XML
* Graph/_element:: baseclass for all graph elements


File: pm.info,  Node: GraphViz-menu,  Next: Module List,  Prev: Module List,  Up: Module List

GraphViz Menu
*************

   This is the documentation for modules associated with the main module
GraphViz.

* Menu:

* GraphViz Itself: GraphViz. Interface to the GraphViz graphing tool
* GraphViz/DBI:: graph database tables and relations
* GraphViz/Data/Grapher:: Visualise data structures as a graph
* GraphViz/ISA:: Graphing @ISA hierarchies at run-time
* GraphViz/No:: subclass of GraphViz with no nodes
* GraphViz/Parse/RecDescent:: Visualise grammars
* GraphViz/Remote:: use graphviz without installing it
* GraphViz/Small:: subclass of GraphViz with small nodes
* GraphViz/XML:: Visualise XML as a tree


File: pm.info,  Node: Graphics-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Graphics Menu
*************

   This is the documentation for modules associated with the main module
Graphics.

* Menu:

* Graphics/ColorNames:: defines RGB values for common color names
* Graphics/ColorNames/HTML:: HTML color names and equivalent RGB values
* Graphics/ColorNames/Windows:: Windows color names and equivalent RGB values
* Graphics/ColorNames/X:: X-Windows color names and equivalent RGB values
* Graphics/Libplot:: Perl extension for libplot plotting library
* Graphics/Plotter:: Perl extension for C++ plotter library from GNU plotutils
* Graphics/Simple:: a simple , device-independent graphics API for Perl
* Graphics/Simple/Fig:: implement Graphics::Simple in Fig (e.g. xfig) files
* Graphics/Simple/GnomeCanvas:: implement Graphics::Simple using Gnome Canvas
* Graphics/Simple/PDLPlot:: Plot PDL data using Graphics::Simple
* Graphics/Simple/PostScript:: implement Graphics::Simple in PostScript files


File: pm.info,  Node: Gtk-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Gtk Menu
********

   This is the documentation for modules associated with the main module
Gtk.

* Menu:

* Gtk Itself: Gtk. Perl module for the Gimp Toolkit library
* Gtk/ColorSelectButton:: Choose a color
* Gtk/HandyCList:: A more Perl-friendly Columned List


File: pm.info,  Node: HP200LX-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HP200LX Menu
************

   This is the documentation for modules associated with the main module
HP200LX.

* Menu:

* HP200LX/DB:: Perl module to access HP-200 LX database files


File: pm.info,  Node: HPUX-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HPUX Menu
*********

   This is the documentation for modules associated with the main module
HPUX.

* Menu:

* HPUX/Ioscan:: Perl function to handle HPUX ioscan command


File: pm.info,  Node: HTML-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HTML Menu
*********

   This is the documentation for modules associated with the main module
HTML.

* Menu:

* HTML/ActiveLink:: dynamically activate HTML links based on URL
* HTML/AsSubs:: functions that construct a HTML syntax tree
* HTML/CalendarMonth:: Perl extension for generating and manipulating HTML calendar months
* HTML/CalendarMonthSimple:: Perl Module for Generating HTML Calendars
* HTML/Changes:: MISSING SHORT DESCRIPTION
* HTML/Clean:: Cleans up HTML code for web browsers, not humans
* HTML/DOMbo:: convert between XML::DOM and {XML/HTML}::Element trees
* HTML/DynamicTemplate:: HTML template class.
* HTML/EP:: a system for embedding Perl into HTML
* HTML/EP/CGIEncryptForm:: An EP interface to the CGI::EncryptForm module
* HTML/EP/EditTable:: An HTML::EP extension for editing a table via WWW
* HTML/EP/Explorer:: Web driven browsing of a filesystem
* HTML/EP/Glimpse:: A simple search engine using Glimpse
* HTML/EP/Session:: Session management for the HTML::EP package
* HTML/EP/Shop:: An E-Commerce solution, based on HTML::EP
* HTML/EasyTags:: Make proper HTML 4 tags/lists/parts
* HTML/Element:: Class for objects that represent HTML elements
* HTML/Element/traverse:: discussion of HTML::Element's traverse method
* HTML/ElementGlob:: Perl extension for managing HTML::Element based objects as a single object.
* HTML/ElementRaw:: Perl extension for HTML::Element(3).
* HTML/ElementSuper:: Perl extension for HTML::Element(3)
* HTML/ElementTable:: Perl extension for manipulating a table composed of HTML::Element style components.
* HTML/Embperl/Mail:: Sends results from Embperl via E-Mail
* HTML/Embperl/Session:: HTML::Embperl::Session
* HTML/EmbperlObject:: Extents HTML::Embperl for building whole website with reusable components and objects
* HTML/Entities:: Encode or decode strings with HTML entities
* HTML/Faq:: embed Perl code in your HTML docs
* HTML/Features:: MISSING SHORT DESCRIPTION
* HTML/FeaturesD:: MISSING SHORT DESCRIPTION
* HTML/FillInForm:: Populates HTML Forms with CGI data.
* HTML/Filter:: Filter HTML text through the parser
* HTML/Form:: Class that represents HTML forms
* HTML/FormHighlight:: Highlights fields in an HTML form.
* HTML/FormValidator:: Validates user input (usually from an HTML form) based on input profile.
* HTML/FormatNroff:: Format HTML as nroff man page
* HTML/FormatNroffSub:: Test package for testing subclassing of HTML::FormatNroff
* HTML/FormatPS:: Format HTML as postscript
* HTML/FormatTable:: base class for formatting HTML Tables
* HTML/FormatTableCell:: Format HTML Table
* HTML/FormatTableCellNroff:: Format HTML Table entry
* HTML/FormatTableNroff:: Format HTML Table as nroff
* HTML/FormatTableRow:: Format HTML Table row
* HTML/FormatTableRowNroff:: Format HTML Table row for nroff
* HTML/FormatText:: Format HTML as text
* HTML/Formatter:: Base class for HTML formatters
* HTML/FromText:: mark up text as HTML
* HTML/HeadParser:: Parse <HEAD> section of a HTML document
* HTML/INSTALL:: MISSING SHORT DESCRIPTION
* HTML/Intro:: MISSING SHORT DESCRIPTION
* HTML/IntroD:: MISSING SHORT DESCRIPTION
* HTML/LinkExtor:: Extract links from an HTML document
* HTML/LoL:: construct HTML from pleasing Perl data structures
* HTML/Mason:: High-performance, dynamic web site authoring system
* HTML/Mason/Admin:: Mason Administrator's Guide
* HTML/Mason/ApacheHandler:: Mason/mod_perl interface
* HTML/Mason/Commands:: Old Mason command reference
* HTML/Mason/Component:: Mason Component Class
* HTML/Mason/Components:: Former Developer's Guide
* HTML/Mason/Devel:: Mason Developer's Manual
* HTML/Mason/Interp:: Mason Component Interpreter
* HTML/Mason/MethodMaker:: Used to create simple get & get/set methods in other classes
* HTML/Mason/Parser:: Mason Component Parser
* HTML/Mason/Request:: Mason Request Class
* HTML/Mason/Tests:: Test harness for testing Mason
* HTML/Munger:: Module which simplifies the creation of web filters.
* HTML/NEWS:: MISSING SHORT DESCRIPTION
* HTML/Navigation:: generic HTML navigation structure class
* HTML/PageIndex:: Class to create HTML page index objects.
* HTML/Pager:: Perl module to handle CGI HTML paging of arbitary data
* HTML/Parse:: Deprecated, a wrapper around HTML::TreeBuilder
* HTML/Parser:: HTML parser class
* HTML/PrettyPrinter:: generate nice HTML files from HTML syntax trees
* HTML/QuickCheck:: a simple and fast HTML syntax checking package for perl 4 and perl 5
* HTML/RefMunger:: module to mangle HREF links within HTML files
* HTML/SimpleLinkExtor:: MISSING SHORT DESCRIPTION
* HTML/SimpleParse:: a bare-bones HTML parser
* HTML/StickyForms:: HTML form generation for CGI or mod_perl
* HTML/Stream:: HTML output stream class, and some markup utilities
* HTML/Subtext:: Perform text substitutions on an HTML template
* HTML/Summary:: module for generating a summary from a web page.
* HTML/Table:: produces HTML tables
* HTML/TableExtract:: Perl extension for extracting the text contained in tables within an HTML document.
* HTML/TableLayout:: Layout Manager for cgi-based web applications
* HTML/Tagset:: data tables useful in parsing HTML
* HTML/Template:: Perl module to use HTML Templates from CGI scripts
* HTML/Testing:: Test module to make test files simpler.
* HTML/TipsAndTricks:: MISSING SHORT DESCRIPTION
* HTML/TokeParser:: Alternative HTML::Parser interface
* HTML/Tree:: Tree - overview of HTML::TreeBuilder et al
* HTML/TreeBuilder:: Parser that builds a HTML syntax tree
* HTML/Validator:: HTML validation by using nsgmls
* HTML/WWWTheme:: Standard theme generation, including sidebars and navigation bars
* HTML/Widgets/DateEntry:: creates date entry widgets for HTML forms.
* HTML/Widgets/Menu:: Builds an HTML menu
* HTML/Widgets/Search:: Perl module for building searches returning HTML


File: pm.info,  Node: HTTP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HTTP Menu
*********

   This is the documentation for modules associated with the main module
HTTP.

* Menu:

* HTTP/BrowserDetect:: Determine the Web browser, version, and platform from an HTTP user agent string
* HTTP/Cookies:: Cookie storage and management
* HTTP/DAV:: A WebDAV client library for Perl5
* HTTP/DAV/Lock:: Represents a WebDAV Lock.
* HTTP/DAV/Resource:: Represents and interfaces with WebDAV Resources
* HTTP/Daemon:: a simple http server class
* HTTP/Date:: date conversion routines
* HTTP/File:: Routines to deal with HTML input type file.
* HTTP/Headers:: Class encapsulating HTTP Message headers
* HTTP/Headers/UserAgent:: Routine to detect web browser platform from User-Agent HTTP Header
* HTTP/Headers/Util:: Header value parsing utility functions
* HTTP/Lite:: Lightweight HTTP implementation
* HTTP/Message:: Class encapsulating HTTP messages
* HTTP/Monkeywrench:: Web testing application
* HTTP/Negotiate:: choose a variant of a document to serve (HTTP content negotiation)
* HTTP/Request:: Class encapsulating HTTP Requests
* HTTP/Request/Common:: Construct common HTTP::Request objects
* HTTP/Request/Form:: Construct HTTP::Request objects for form processing
* HTTP/Response:: Class encapsulating HTTP Responses
* HTTP/SimpleLinkChecker:: Check the HTTP response code for a link
* HTTP/Status:: HTTP Status code processing
* HTTP/WebTest:: Test remote URLs or local web files


File: pm.info,  Node: HTTPD-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HTTPD Menu
**********

   This is the documentation for modules associated with the main module
HTTPD.

* Menu:

* HTTPD/Authen:: HTTP server authentication class
* HTTPD/Bench/ApacheBench:: Perl API for Apache benchmarking and regression testing.
* HTTPD/GroupAdmin:: Management of HTTP server group databases
* HTTPD/Realm:: Database of HTTPD Security Realms
* HTTPD/RealmManager:: MISSING SHORT DESCRIPTION
* HTTPD/UserAdmin:: Management of HTTP server user databases


File: pm.info,  Node: Hardware-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Hardware Menu
*************

   This is the documentation for modules associated with the main module
Hardware.

* Menu:

* Hardware/Verilog/Parser:: A complete grammar for parsing Verilog code using perl
* Hardware/Vhdl/Parser:: A complete grammar for parsing VHDL code using perl


File: pm.info,  Node: Hash-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Hash Menu
*********

   This is the documentation for modules associated with the main module
Hash.

* Menu:

* Hash/Filler:: Programatically fill elements of a hash based in prerequisites
* Hash/NoVivify:: Perl extension for non-vivifying exists and defined functions


File: pm.info,  Node: Heap-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Heap Menu
*********

   This is the documentation for modules associated with the main module
Heap.

* Menu:

* Heap Itself: Heap. Perl extensions for keeping data partially sorted
* Heap/Binary:: a Perl extension for keeping data partially sorted
* Heap/Binomial:: a Perl extension for keeping data partially sorted
* Heap/Elem:: Perl extension for elements to be put in Heaps
* Heap/Elem/Num:: Perl extension for Numeric Heap Elements
* Heap/Elem/NumRev:: Perl extension for Reversed Numeric Heap Elements
* Heap/Elem/Ref:: Perl extension for Object Reference Heap Elements
* Heap/Elem/RefRev:: Perl extension for reversed Object Reverence Heap Elements
* Heap/Elem/Str:: Perl extension for String Heap Elements
* Heap/Elem/StrRev:: Perl extension for Reversed String Heap Elements
* Heap/Fibonacci:: a Perl extension for keeping data partially sorted


File: pm.info,  Node: Hook-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Hook Menu
*********

   This is the documentation for modules associated with the main module
Hook.

* Menu:

* Hook/WrapSub:: wrap subs with pre- and post-call hooks


File: pm.info,  Node: HtDig-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HtDig Menu
**********

   This is the documentation for modules associated with the main module
HtDig.

* Menu:

* HtDig/Config:: Perl extension for managing ht://Dig configuration files
* HtDig/Database:: Perl interface Ht://Dig docdb and config files
* HtDig/Site:: Perl extension for managing a single ht://Dig configuration


File: pm.info,  Node: HyperWave-menu,  Next: Module List,  Prev: Module List,  Up: Module List

HyperWave Menu
**************

   This is the documentation for modules associated with the main module
HyperWave.

* Menu:

* HyperWave/CSP:: Communicate with a HyperWave server


File: pm.info,  Node: I18N-menu,  Next: Module List,  Prev: Module List,  Up: Module List

I18N Menu
*********

   This is the documentation for modules associated with the main module
I18N.

* Menu:

* I18N/Charset:: IANA Character Set Registry names and Unicode::Map8 conversion scheme names
* I18N/Collate:: compare 8-bit scalar data according to the current locale
* I18N/LangTags:: functions for dealing with RFC1766-style language tags


File: pm.info,  Node: IETF-menu,  Next: Module List,  Prev: Module List,  Up: Module List

IETF Menu
*********

   This is the documentation for modules associated with the main module
IETF.

* Menu:

* IETF/ACE:: Perl extension for IETF IDN WG ACE character conversions


File: pm.info,  Node: IMAP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

IMAP Menu
*********

   This is the documentation for modules associated with the main module
IMAP.

* Menu:

* IMAP/Admin:: Perl module for basic IMAP server administration


File: pm.info,  Node: INSPEC-menu,  Next: Module List,  Prev: Module List,  Up: Module List

INSPEC Menu
***********

   This is the documentation for modules associated with the main module
INSPEC.

* Menu:

* INSPEC/BibTeX:: Perl extensions to convert INSPEC data from INSPEC::Retriever to BibTeX format
* INSPEC/Retriever:: Perl extensions to extract information from the INSPEC database provided by AXIOM


File: pm.info,  Node: IO-menu,  Next: Module List,  Prev: Module List,  Up: Module List

IO Menu
*******

   This is the documentation for modules associated with the main module
IO.

* Menu:

* IO Itself: IO. load various IO modules
* IO/AtomicFile:: write a file which is updated atomically
* IO/BLOB/Pg:: Emulate IO::File interface for PostgreSQL Large Objects
* IO/Cat:: Object-oriented Perl implementation of cat(1)
* IO/Default:: replace select() with $DEFOUT, $DEFERR, $DEFIN
* IO/Dir:: supply object methods for directory handles
* IO/File:: supply object methods for filehandles
* IO/File/Multi:: Print to multiple filehandles with one output call
* IO/Handle:: supply object methods for I/O handles
* IO/InnerFile:: define a file inside another file
* IO/Interface:: Perl extension for access to network card configuration information
* IO/Lines:: IO:: interface for reading/writing an array of lines
* IO/LockedFile:: supply object methods for locking files
* IO/Multiplex:: Object interface to multiplex-style server implementations.
* IO/Null:: class for null filehandles
* IO/Page:: Pipe STDOUT to a pager if STDOUT is a TTY
* IO/Pipe:: supply object methods for pipes
* IO/Poll:: Object interface to system poll call
* IO/Pty:: Pseudo TTY object class
* IO/Scalar:: IO:: interface for reading/writing a scalar
* IO/ScalarArray:: IO:: interface for reading/writing an array of scalars
* IO/Seekable:: supply seek based methods for I/O objects
* IO/Select:: OO interface to the select system call
* IO/SendFile:: Perl extension that implements the sendfile() interface.
* IO/Sockatmark:: Perl extension for TCP urgent data
* IO/Socket:: Object interface to socket communications
* IO/Socket/INET:: Object interface for AF_INET domain sockets
* IO/Socket/Multicast:: Send and receive multicast messages
* IO/Socket/SSL:: a SSL socket interface class
* IO/Socket/UNIX:: Object interface for AF_UNIX domain sockets
* IO/String:: Emulate IO::File interface for in-core strings
* IO/Stringy:: stringy - I/O on in-core objects like strings and arrays
* IO/Tee:: Multiplex output to multiple output handles
* IO/Wrap:: wrap raw filehandles in IO::Handle interface
* IO/WrapTie:: wrap tieable objects in IO::Handle interface
* IO/Zlib:: IO:: style interface to *Note Compress/Zlib: Compress/Zlib,


File: pm.info,  Node: IPC-menu,  Next: Module List,  Prev: Module List,  Up: Module List

IPC Menu
********

   This is the documentation for modules associated with the main module
IPC.

* Menu:

* IPC/Cache:: a perl module that implements an object storage space where data is persisted across process boundaries
* IPC/ChildSafe:: control a child process without blocking
* IPC/ClearTool:: run a bidirectional pipe to a cleartool process
* IPC/LDT:: implements a length based IPC protocol
* IPC/Locker:: Distributed lock handler
* IPC/Locker/Server:: Distributed lock handler server
* IPC/MM:: Perl interface to Ralf Engelschall's mm library
* IPC/Msg:: SysV Msg IPC object class
* IPC/Open2:: open a process for both reading and writing
* IPC/Open3:: open a process for reading, writing, and error handling
* IPC/Run:: Run subprocesses w/ piping, redirection, and pseudo-ttys
* IPC/Run/IO:: I/O channels for IPC::Run.
* IPC/Run/Timer:: Timer channels for IPC::Run.
* IPC/Semaphore:: SysV Semaphore IPC object class
* IPC/Session:: Drive interactive shell command sessions, local or remote (like 'expect')
* IPC/ShareLite:: Light-weight interface to shared memory
* IPC/Shareable:: share Perl variables between processes
* IPC/Shareable/SharedMem:: Object oriented interface to shared memory
* IPC/SharedCache:: a Perl module to manage a cache in SysV IPC shared memory.
* IPC/Signal:: Utility functions dealing with signals
* IPC/SysV:: SysV IPC constants
* IPC/XPA:: Interface to the XPA messaging system


File: pm.info,  Node: IPChains-menu,  Next: Module List,  Prev: Module List,  Up: Module List

IPChains Menu
*************

   This is the documentation for modules associated with the main module
IPChains.

* Menu:

* IPChains Itself: IPChains. Create and Manipulate ipchains via Perl
* IPChains/PortFW:: Perl module to manipulate portfw masquerading table.


File: pm.info,  Node: Ima-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Ima Menu
********

   This is the documentation for modules associated with the main module
Ima.

* Menu:

* Ima/DBI:: Database connection caching and organization


File: pm.info,  Node: Image-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Image Menu
**********

   This is the documentation for modules associated with the main module
Image.

* Menu:

* Image/Base:: base class for loading, manipulating and saving images.
* Image/DS9:: interface to the DS9 image display and analysis program
* Image/DeAnim:: create static GIF file from animated GIF
* Image/Grab:: Perl extension for Grabbing images off the Internet.
* Image/Info:: Extract meta information from image files
* Image/Info/ASCII:: ASCII support for Image::Info
* Image/Info/BMP:: Windows Device Indepdent Bitmap support for Image::Info
* Image/Info/SVG:: SVG support for Image::Info
* Image/Info/XBM:: XBM support for Image::Info
* Image/Info/XPM:: XPM support for Image::Info
* Image/Magick:: Perl extension for calling ImageMagick's libmagick routines
* Image/ParseGIF:: Parse a GIF image into its compenent parts.
* Image/README:: Perl module to easily grab images from the 'net.
* Image/Size:: read the dimensions of an image in several popular formats
* Image/Xbm:: Load, create, manipulate and save xbm image files.
* Image/Xpm:: Load, create, manipulate and save xpm image files.


File: pm.info,  Node: Imager-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Imager Menu
***********

   This is the documentation for modules associated with the main module
Imager.

* Menu:

* Imager Itself: Imager. Perl extension for Generating 24 bit Images
* Imager/Expr:: implements expression parsing and compilation for the  expression evaluation engine used by Imager::transform2()
* Imager/Regops:: generated information about the register based VM
* Imager/regmach:: documents the register virtual machine used by Imager::transform2().


File: pm.info,  Node: Inline-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Inline Menu
***********

   This is the documentation for modules associated with the main module
Inline.

* Menu:

* Inline Itself: Inline. Write Perl subroutines in other programming languages.
* Inline/C:: Write Perl Subroutines in C
* Inline/C-Cookbook:: A Cornucopia of Inline C Recipes
* Inline/CPP:: Write Perl subroutines and classes in C++.
* Inline/CPR:: C Perl Run. Embed Perl in C, ala Inline
* Inline/Python:: Write Perl subroutines and classes in Python.


File: pm.info,  Node: Jcode-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Jcode Menu
**********

   This is the documentation for modules associated with the main module
Jcode.

* Menu:

* Jcode Itself: Jcode. Japanese Charset Handler
* Jcode/Unicode:: Aux. routines for Jcode
* Jcode/Unicode/Constants:: UCS2-EUC conversion table
* Jcode/Unicode/NoXS:: Non-XS version of Jcode::Unicode


File: pm.info,  Node: Kite-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Kite Menu
*********

   This is the documentation for modules associated with the main module
Kite.

* Menu:

* Kite Itself: Kite. collection of modules useful in Kite design and construction.
* Kite/Base:: base class module implementing common functionality
* Kite/PScript/Defs:: useful PostScript definitions for kite layout et al
* Kite/Profile:: represent and manipulate a 2d profile
* Kite/XML/Node:: base class for XML parser nodes
* Kite/XML/Node/Kite:: XML nodes to represent kite markup
* Kite/XML/Parser:: XML parser for kite related markup
* Kite/XML2PS:: reads an XML curve definition file and generates PostScript


File: pm.info,  Node: LEGO-menu,  Next: Module List,  Prev: Module List,  Up: Module List

LEGO Menu
*********

   This is the documentation for modules associated with the main module
LEGO.

* Menu:

* LEGO/RCX:: RCX


File: pm.info,  Node: LISP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

LISP Menu
*********

   This is the documentation for modules associated with the main module
LISP.

* Menu:

* LISP Itself: LISP. Perl extension for blah blah blah
* LISP/Lambda:: Perl extension for implementing Lisp Lambda expressions
* LISP/List:: Perl extension for implementing linked lists as in Lisp


File: pm.info,  Node: LWP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

LWP Menu
********

   This is the documentation for modules associated with the main module
LWP.

* Menu:

* LWP Itself: LWP. Library for WWW access in Perl
* LWP/AuthenAgent:: a simple subclass of LWP::UserAgent to allow the user to type in username / password information if required for autentication.
* LWP/Conn:: event driven protocol module interface
* LWP/Conn/_Connect:: event driven connection establishment
* LWP/Debug:: debug routines for the libwww-perl library
* LWP/EventLoop:: Watch file descriptors and timers
* LWP/IO:: Low level I/O capability
* LWP/MainLoop:: Give access to an single instance of LWP::EventLoop
* LWP/MediaTypes:: guess media type for a file or a URL
* LWP/MemberMixin:: Member access mixin class
* LWP/Parallel:: Extension for LWP to allow parallel HTTP and FTP access
* LWP/Parallel/Protocol:: Base class for parallel LWP protocols
* LWP/Parallel/RobotUA:: A class for Parallel Web Robots
* LWP/Parallel/UserAgent:: A class for parallel User Agents
* LWP/ParallelUA:: Parallel LWP::UserAgent
* LWP/Protocol:: Base class for LWP protocols
* LWP/Protocol/bbs:: BBS/RPC support for LWP
* LWP/RobotPUA:: Parallel LWP::RobotUA
* LWP/RobotUA:: A class for Web Robots
* LWP/SecureSocket:: SSL TCP/IP socket interface
* LWP/Simple:: Procedural LWP interface
* LWP/Sink:: Something that receive data
* LWP/Socket:: TCP/IP socket interface
* LWP/TkIO:: Tk I/O routines for the LWP library
* LWP/UserAgent:: A WWW UserAgent class


File: pm.info,  Node: LaTeX-menu,  Next: Module List,  Prev: Module List,  Up: Module List

LaTeX Menu
**********

   This is the documentation for modules associated with the main module
LaTeX.

* Menu:

* LaTeX/Parser:: Perl extension to parse LaTeX files


File: pm.info,  Node: Language-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Language Menu
*************

   This is the documentation for modules associated with the main module
Language.

* Menu:

* Language/Basic:: Perl Module to interpret BASIC
* Language/Basic/Expression:: Package to handle string, numeric, and boolean expressions.
* Language/Basic/Function:: Package to handle user-defined and intrinsic Functions in BASIC.
* Language/Basic/Statement:: Package to handle parsing and implementing single BASIC statements.
* Language/Basic/Syntax:: Pod file describing syntax understood by Language::Basic module
* Language/Basic/Token:: Module to handle lexing BASIC statements.
* Language/Basic/Variable:: Module to handle parsing and implementing BASIC variables.
* Language/Functional:: a module which makes Perl slightly more functional
* Language/Mumps:: MISSING SHORT DESCRIPTION
* Language/XS:: Write XS code on the fly and load it dynamically.


