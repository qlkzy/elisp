This is Info file pm.info, produced by Makeinfo version 1.68 from the
input file bigpm.texi.


File: pm.info,  Node: SPOPS-menu,  Next: Module List,  Prev: Module List,  Up: Module List

SPOPS Menu
**********

   This is the documentation for modules associated with the main module
SPOPS.

* Menu:

* SPOPS Itself: SPOPS. Simple Perl Object Persistence with Security
* SPOPS/Configure:: read in configuration information for collections and create/configure
* SPOPS/Configure/DBI:: Define additional configuration methods
* SPOPS/Configure/Ruleset:: Install variables, subroutines and process inherited rulesets per class
* SPOPS/DBI:: Implement SPOPS class, serializing into a DBI database
* SPOPS/DBI/Keypool:: Retrieves ID field information from a pool
* SPOPS/DBI/MySQL:: MySQL-specific code for DBI collections
* SPOPS/DBI/RandomCode:: Creates a random code for the ID field
* SPOPS/DBI/Sybase:: Sybase-specific routines for the SPOPS::DBI
* SPOPS/Error:: Centralized error messages from all SPOPS objects.
* SPOPS/GDBM:: Store SPOPS objects in a GDBM database
* SPOPS/HashFile:: Implement as objects files containing perl hashrefs dumped to text
* SPOPS/Impl/SecurityObj:: Implement a security object and basic operations
* SPOPS/Impl/User:: Create and manipulate users.
* SPOPS/Key/DBI/Identity:: Retrieve IDENTITY values from a supported DBI database
* SPOPS/Key/DBI/Pool:: Retrieves ID field information from a pool
* SPOPS/Key/Random:: Creates a random alphanumeric code for the ID field
* SPOPS/SQLInterface:: Generic routines for DBI database interaction
* SPOPS/Secure:: Implement security across one or more classes of SPOPS objects
* SPOPS/Secure/Hierarchy:: Define hierarchical security
* SPOPS/Tie:: Simple class implementing tied hash with some goodies
* SPOPS/Tie/StrictField:: Enable field checking for SPOPS objects
* SPOPS/Utility:: Utility methods for SPOPS objects


File: pm.info,  Node: SQL-menu,  Next: Module List,  Prev: Module List,  Up: Module List

SQL Menu
********

   This is the documentation for modules associated with the main module
SQL.

* Menu:

* SQL/AnchoredWildcards:: add anchors ('^', '$') to SQL wildcards
* SQL/Eval:: Base for deriving evalution objects for SQL::Statement
* SQL/Schema:: Convert a data dictionary into SQL statements
* SQL/Schema/Constraint:: A constraint of a database table
* SQL/Schema/Function:: A function stored within the database
* SQL/Schema/Package:: A package stored within the database
* SQL/Schema/Package/Body:: A package's body stored within the database
* SQL/Schema/Procedure:: A procedure stored within the database
* SQL/Schema/Sequence:: An Oracle sequence
* SQL/Schema/Source:: A source stored within the database
* SQL/Schema/Table:: A database table
* SQL/Schema/Table/Column:: A column of a database table
* SQL/Schema/Trigger:: A database trigger
* SQL/Schema/View:: A database view
* SQL/Statement:: SQL parsing and processing engine


File: pm.info,  Node: SWISH-menu,  Next: Module List,  Prev: Module List,  Up: Module List

SWISH Menu
**********

   This is the documentation for modules associated with the main module
SWISH.

* Menu:

* SWISH Itself: SWISH. Perl interface to the SWISH-E search engine.
* SWISH/Fork:: Perl extension for accessing the SWISH-E search engine via a fork/exec.
* SWISH/Stemmer:: Perl extension for stemming words using a modified version of the  Stem routine from the SWISH search engine.  (http://sunsite.berkeley.edu/SWISH-E/)


File: pm.info,  Node: Safe-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Safe Menu
*********

   This is the documentation for modules associated with the main module
Safe.

* Menu:

* Safe Itself: Safe. Compile and execute code in restricted compartments
* Safe/Hole:: make a hole to the original main compartment in the Safe compartment


File: pm.info,  Node: Scalar-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Scalar Menu
***********

   This is the documentation for modules associated with the main module
Scalar.

* Menu:

* Scalar/Listify:: produces an array from a scalar value or array ref.
* Scalar/Util:: A selection of general-utility scalar subroutines


File: pm.info,  Node: Schedule-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Schedule Menu
*************

   This is the documentation for modules associated with the main module
Schedule.

* Menu:

* Schedule/At:: OS independent interface to the Unix 'at' command
* Schedule/Cron:: cron-like scheduler for Perl subroutines
* Schedule/Load:: Load distribution and status across multiple host machines
* Schedule/Load/Chooser:: Distributed load choosing daemon
* Schedule/Load/Hosts:: Return host loading information across a network
* Schedule/Load/Hosts/Host:: Return information about a host
* Schedule/Load/Hosts/Proc:: Return process information
* Schedule/Load/Reporter:: Distributed load reporting daemon
* Schedule/Load/Schedule:: Functions for choosing a host among many
* Schedule/Match:: Handles and detects clash between pattern-based schedules


File: pm.info,  Node: Search-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Search Menu
***********

   This is the documentation for modules associated with the main module
Search.

* Menu:

* Search/Binary:: generic binary search
* Search/Dict:: search for key in dictionary file
* Search/InvertedIndex:: A manager for inverted index maps
* Search/InvertedIndex/AutoLoader:: A manager for autoloading Search::InvertedIndex modules
* Search/InvertedIndex/DB/DB_File_SplitHash:: A Berkeley database interface object for Search::InvertedIndex
* Search/InvertedIndex/DB/Mysql:: A MySQL database interface object for Search::InvertedIndex
* Search/InvertedIndex/Query:: A query for an inverted index search.
* Search/InvertedIndex/Query/Leaf:: A query leaf item for an inverted index search.
* Search/InvertedIndex/Result:: A list of result entries from a inverted index search.
* Search/InvertedIndex/Update:: A container for a mass data update for a -group/-index.


File: pm.info,  Node: SecurID-menu,  Next: Module List,  Prev: Module List,  Up: Module List

SecurID Menu
************

   This is the documentation for modules associated with the main module
SecurID.

* Menu:

* SecurID/ACEdb:: Perl extension to use the ACE/Server Administration Toolkit API


File: pm.info,  Node: Secure-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Secure Menu
***********

   This is the documentation for modules associated with the main module
Secure.

* Menu:

* Secure/File:: A module to open or create files within suid/sgid files


File: pm.info,  Node: Semi-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Semi Menu
*********

   This is the documentation for modules associated with the main module
Semi.

* Menu:

* Semi/Semicolons:: writing perl code with the word 'Peterbilt' as statement terminator, rather than a semicolon.


File: pm.info,  Node: Server-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Server Menu
***********

   This is the documentation for modules associated with the main module
Server.

* Menu:

* Server/FastPL:: Add client-server behavior to scripts.
* Server/FastPL/Client:: A Client to the Server::FastPL::Server module.
* Server/FastPL/Server:: Eliminate the compile-time of big scripts


File: pm.info,  Node: Seshat-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Seshat Menu
***********

   This is the documentation for modules associated with the main module
Seshat.

* Menu:

* Seshat Itself: Seshat. Perl Extension for writing modules
* Seshat/Parallel:: Perl extension for Seshat


File: pm.info,  Node: Set-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Set Menu
********

   This is the documentation for modules associated with the main module
Set.

* Menu:

* Set/Bag:: bag (multiset) class
* Set/Crontab:: Expand crontab(5)-style integer lists
* Set/IntRange:: Sets of Integers
* Set/IntSpan:: Manages sets of integers
* Set/NestedGroups:: grouped data eg ACL's, city/state/country etc
* Set/NestedGroups/Member:: Set of nested groups
* Set/Object:: set of objects
* Set/Scalar:: basic set operations
* Set/Scalar/Base:: base class for Set::Scalar
* Set/Scalar/Null:: internal class for Set::Scalar
* Set/Scalar/Real:: internal class for Set::Scalar
* Set/Scalar/Universe:: universes for set members
* Set/Scalar/Valued:: valued sets
* Set/Scalar/ValuedUniverse:: universes for valued set members
* Set/Scalar/Virtual:: internal class for Set::Scalar
* Set/Window:: Manages an interval on the integer line


File: pm.info,  Node: Silly-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Silly Menu
**********

   This is the documentation for modules associated with the main module
Silly.

* Menu:

* Silly/StringMaths:: Perl extension for doing maths with strings
* Silly/Werder:: Meaningless gibberish generator


File: pm.info,  Node: Simran-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Simran Menu
***********

   This is the documentation for modules associated with the main module
Simran.

* Menu:

* Simran/DB/Session:: Database Session
* Simran/Error/Error:: Error Module
* Simran/Log/Log:: Log Module


File: pm.info,  Node: Sirc-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Sirc Menu
*********

   This is the documentation for modules associated with the main module
Sirc.

* Menu:

* Sirc/Chantrack:: Track information about the channels you're on
* Sirc/LimitMan:: simple channel limit management
* Sirc/Util:: Utility sirc functions


File: pm.info,  Node: Slay-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Slay Menu
*********

   This is the documentation for modules associated with the main module
Slay.

* Menu:

* Slay/Maker:: An perl make engine using perl code for rules
* Slay/MakerRule:: a class for making things with dependancies


File: pm.info,  Node: Socket-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Socket Menu
***********

   This is the documentation for modules associated with the main module
Socket.

* Menu:

* Socket Itself: Socket. load the C socket.h defines and structure manipulators
* Socket/PassAccessRights:: MISSING SHORT DESCRIPTION


File: pm.info,  Node: Solaris-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Solaris Menu
************

   This is the documentation for modules associated with the main module
Solaris.

* Menu:

* Solaris/Contents:: Read /var/sadm/install/contents file
* Solaris/InstallDB:: Manages Solaris package information
* Solaris/Package:: Perl module to obtain basic Solaris Package Info
* Solaris/Patchdiag:: Patchdiag class file


File: pm.info,  Node: Sort-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Sort Menu
*********

   This is the documentation for modules associated with the main module
Sort.

* Menu:

* Sort/ArbBiLex:: make sort functions for arbitrary sort orders
* Sort/Fields:: Sort lines containing delimited fields
* Sort/PolySort:: general rules-based sorting of lists
* Sort/Versions:: a perl 5 module for sorting of revision-like numbers


File: pm.info,  Node: Spectrum-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Spectrum Menu
*************

   This is the documentation for modules associated with the main module
Spectrum.

* Menu:

* Spectrum/CLI:: wrapper class for the Spectrum Command Line Interface


File: pm.info,  Node: Speech-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Speech Menu
***********

   This is the documentation for modules associated with the main module
Speech.

* Menu:

* Speech/Audio/FileWave:: Simple waveform abstraction for use with Audio::TTS
* Speech/Speech/Festival:: Communicate with a festival server process.
* Speech/Speech/Festival/Synthesiser:: Simple text-to-speech using festival.
* Speech/Speech/Synthesiser:: Generic speech syntheiser interface


File: pm.info,  Node: Spreadsheet-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Spreadsheet Menu
****************

   This is the documentation for modules associated with the main module
Spreadsheet.

* Menu:

* Spreadsheet/BIFFwriter:: Abstract base class for Excel workbooks and worksheets.
* Spreadsheet/Format:: Class for defining Excel formatting.
* Spreadsheet/OLEwriter:: Writes BIFF data into a OLE compound storage file.
* Spreadsheet/ParseExcel:: Get information from Excel file
* Spreadsheet/ParseExcel/Utility:: Utility function for Spreadsheet::ParseExcel
* Spreadsheet/Workbook:: A writer class for Excel Workbooks.
* Spreadsheet/Worksheet:: A writer class for Excel Worksheets.
* Spreadsheet/WriteExcel:: Write to a cross-platform Excel binary file.
* Spreadsheet/WriteExcel/BIFFwriter:: An abstract base class for Excel workbooks and worksheets.
* Spreadsheet/WriteExcel/Format:: A class for defining Excel formatting.
* Spreadsheet/WriteExcel/Formula:: A class for generating Excel formulas
* Spreadsheet/WriteExcel/OLEwriter:: A writer class to store BIFF data in a OLE compound storage file.
* Spreadsheet/WriteExcel/Workbook:: A writer class for Excel Workbooks.
* Spreadsheet/WriteExcel/Worksheet:: A writer class for Excel Worksheets.
* Spreadsheet/WriteExcel/examples/WorkbookBig:: A writer class for Excel Workbooks.


File: pm.info,  Node: Stat-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Stat Menu
*********

   This is the documentation for modules associated with the main module
Stat.

* Menu:

* Stat/lsMode:: format file modes like the `ls -l' command does


File: pm.info,  Node: Statistics-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Statistics Menu
***************

   This is the documentation for modules associated with the main module
Statistics.

* Menu:

* Statistics/Candidates:: Perl5 module for manipulating candidate features (help module for `Statistics::MaxEntropy')
* Statistics/Descriptive:: Module of basic descriptive statistical functions.
* Statistics/Distributions:: Perl module for calculating critical values of common statistical distributions
* Statistics/LTU:: An implementation of Linear Threshold Units
* Statistics/MaxEntropy:: Perl5 module for Maximum Entropy Modeling and Feature Induction
* Statistics/OLS:: perform ordinary least squares and associated statistics, v 0.07.
* Statistics/SparseVector:: Perl5 extension for manipulating sparse bitvectors


File: pm.info,  Node: StatsView-menu,  Next: Module List,  Prev: Module List,  Up: Module List

StatsView Menu
**************

   This is the documentation for modules associated with the main module
StatsView.

* Menu:

* StatsView/Graph:: Solaris performance data collection and graphing package


File: pm.info,  Node: Stone-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Stone Menu
**********

   This is the documentation for modules associated with the main module
Stone.

* Menu:

* Stone Itself: Stone. In-memory storage for hierarchical tag/value data structures
* Stone/Cursor:: Traverse tags and values of a Stone
* Stone/GB_Sequence:: Specialized Access to GenBank Records


File: pm.info,  Node: String-menu,  Next: Module List,  Prev: Module List,  Up: Module List

String Menu
***********

   This is the documentation for modules associated with the main module
String.

* Menu:

* String/Approx:: Perl extension for approximate matching (fuzzy matching)
* String/BitCount:: count number of "1" bits in string
* String/CRC:: Perl interface cyclic redundency check generation
* String/CRC32:: Perl interface for cyclic redundency check generation
* String/Checker:: An extensible string validation module (allowing commonly used checks on strings to be called more concisely and consistently).
* String/DiffLine:: find the character,line, and line position of the first difference
* String/Escape:: Registry of string functions, including backslash escapes
* String/Parity:: Parity (odd/even/mark/space) handling functions
* String/ParseWords:: Parse a string into logical words
* String/Pattern:: create / identify strings by pattern
* String/REPartition:: Generates a regex to partition a data set
* String/Random:: Perl module to generate random strings based on a pattern
* String/RexxParse:: Perl implementation of REXX parse command
* String/Scanf:: emulate the sscanf() of the C stdio library
* String/ShellQuote:: quote strings for passing through the shell
* String/Similarity:: calculate the similarity of two strings
* String/StringLib:: Perl extension for fast, commonly used, string operations
* String/Strip:: Perl extension for fast, commonly used, string operations


File: pm.info,  Node: Sub-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Sub Menu
********

   This is the documentation for modules associated with the main module
Sub.

* Menu:

* Sub/Versive:: Subroutine pre- and post-handlers


File: pm.info,  Node: Sybase-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Sybase Menu
***********

   This is the documentation for modules associated with the main module
Sybase.

* Menu:

* Sybase/Login:: A highly configurable Login widget for Sybperl and Perl/Tk
* Sybase/ObjectInfo:: Return Sybase Object information
* Sybase/Xfer:: transfer data between Sybase servers via bcp.


File: pm.info,  Node: Symbol-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Symbol Menu
***********

   This is the documentation for modules associated with the main module
Symbol.

* Menu:

* Symbol Itself: Symbol. manipulate Perl symbols and their names
* Symbol/Approx/Sub:: Perl module for calling subroutines by approximate names!


File: pm.info,  Node: Symphero-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Symphero Menu
*************

   This is the documentation for modules associated with the main module
Symphero.

* Menu:

* Symphero/Data:: low-level data manipulation modules for Symphero E-Commerce suite.
* Symphero/MultiValueDB:: 3D database storage
* Symphero/MultiValueHash:: 3D extension of Symphero::SimpleHash
* Symphero/SimpleHash:: Simple 2D hash manipulations
* Symphero/Utils:: Utility functions widely used by Symphero modules


File: pm.info,  Node: Sys-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Sys Menu
********

   This is the documentation for modules associated with the main module
Sys.

* Menu:

* Sys/CpuLoad:: a module to retrieve system load averages.
* Sys/HostIP:: Try really hard to get IP addr.
* Sys/Hostname:: Try every conceivable way to get hostname
* Sys/Lastlog:: Provide a moderately Object Oreiented Interface to lastlog                 files on some Unix-like systems.
* Sys/OutPut:: Perl module to help make output easier.
* Sys/Pushd:: change directory temporarily
* Sys/Signal:: Set signal handlers with restoration of existing C sighandler
* Sys/Syslog:: Perl interface to the UNIX syslog(3) calls
* Sys/UniqueID:: Get a guaranteed unique identifier.
* Sys/Utmp:: Object(ish) Interface to UTMP files.


File: pm.info,  Node: SyslogScan-menu,  Next: Module List,  Prev: Module List,  Up: Module List

SyslogScan Menu
***************

   This is the documentation for modules associated with the main module
SyslogScan.

* Menu:

* SyslogScan/ByGroup:: Organizes a Summary of mail statistics into Groups of related e-mail users
* SyslogScan/Delivery:: encapsulates a logged, successful delivery of mail from a sender to a list of recipients.
* SyslogScan/DeliveryIterator:: scans a syslog file for "deliveries", successful transfers of mail to mailboxes or to other machines.
* SyslogScan/SendmailLine:: Enhances basic SyslogEntry parsing by understanding sendmail to/from message syntax.
* SyslogScan/SendmailLineFrom:: encapsulates a 'From:' line in a syslog file
* SyslogScan/SendmailLineTo:: encapsulates a 'To:' line in a syslog file
* SyslogScan/SendmailUtil:: utilities for sendmail packages.
* SyslogScan/Summary:: encapsulates a tally of how many bytes people have sent and received through sendmail
* SyslogScan/SyslogEntry:: parses generic lines in syslog files.
* SyslogScan/Usage:: encapsulates the total volumes of mail broadcast, sent, and received through sendmail by a single user or group.
* SyslogScan/WhereIs:: return full path of syslog file where mail messages are logged


File: pm.info,  Node: Taco-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Taco Menu
*********

   This is the documentation for modules associated with the main module
Taco.

* Menu:

* Taco Itself: Taco. Dynamic web page system
* Taco/Arg:: Taco argument management
* Taco/Dispatcher:: Dispatches functionality in templates to modules
* Taco/Generic:: Generic Taco template functions
* Taco/LibLib:: keep Perl files fresh
* Taco/Module:: abstract base class for Taco modules
* Taco/ServiceRegistry:: Definitions of Taco services
* Taco/Template:: Taco templates


File: pm.info,  Node: Tcl-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Tcl Menu
********

   This is the documentation for modules associated with the main module
Tcl.

* Menu:

* Tcl Itself: Tcl. Tcl extension module for Perl
* Tcl/Tk:: Extension module for Perl giving access to Tk via the Tcl extension


File: pm.info,  Node: TeX-menu,  Next: Module List,  Prev: Module List,  Up: Module List

TeX Menu
********

   This is the documentation for modules associated with the main module
TeX.

* Menu:

* TeX/DVI:: write out TeX's DVI (DeVice Independent) file
* TeX/DVI/Parse:: parse TeX's DVI output file
* TeX/Hyphen:: hyphenate words using TeX's patterns


File: pm.info,  Node: Template-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Template Menu
*************

   This is the documentation for modules associated with the main module
Template.

* Menu:

* Template Itself: Template. a fast, flexible and extensible template processing system
* Template/Base:: base class module implementing common functionality
* Template/Cache:: object for loading, compiling and caching template documents
* Template/Config:: factory module for loading and instantiating other toolkit modules
* Template/Constants:: defines constants for the Template Toolkit
* Template/Context:: runtime context in which templates are processed
* Template/Document:: a compiled template document
* Template/Exception:: exception handling class for the Template Toolkit
* Template/Filters:: post-processing filters for template blocks
* Template/Iterator:: Base iterator class used by the FOREACH directive.
* Template/Parser:: LALR(1) parser for compiling template documents
* Template/Plugin:: base class for Template Toolkit plugins
* Template/Plugin/Autoformat:: interface to Text::Autoformat module
* Template/Plugin/CGI:: simple Template Plugin interface to CGI.pm module
* Template/Plugin/DBI:: Template Plugin interface to the DBI.pm module
* Template/Plugin/Datafile:: plugin to construct records from a simple data file
* Template/Plugin/Date:: generate formatted date strings
* Template/Plugin/Dumper:: simple Template Plugin interface to Data::Dumper
* Template/Plugin/Format:: simple Template Plugin interface to create formatting function
* Template/Plugin/Iterator:: plugin to create Template::Iterator objects
* Template/Plugin/Java:: Generate Java Classes from XML description files and templates.
* Template/Plugin/Java/Constants:: Constants for the Java Template plugin modules.
* Template/Plugin/Java/Utils:: Utility functions for Template::Plugin::Java.
* Template/Plugin/JavaSQL:: Help generate Java from database schemas.
* Template/Plugin/Table:: presents a data set as rows and columns
* Template/Plugin/URL:: constructs query URL's with parameters
* Template/Plugin/Wrap:: wrap text using the Text::Wrap module.
* Template/Plugin/XML/DOM:: simple Template Toolkit plugin interfacing to the XML::DOM module
* Template/Plugin/XML/RSS:: Template Toolkit plugin to the XML::RSS module
* Template/Plugin/XML/XPath:: Template Toolkit plugin to the XML::XPath module
* Template/Plugins:: provider module for loading and instantiating plugins
* Template/Provider:: repository for compiled templates, loaded from disk.
* Template/Service:: custom template processing service
* Template/Stash:: magical storage for template variables
* Template/Test:: module for automating test scripts for the Template Toolkit
* Template/Tutorial:: a tutorial on using and abusing the Perl Template Toolkit
* Template/Utils:: Various utility functions for the Template Tookit.


File: pm.info,  Node: Term-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Term Menu
*********

   This is the documentation for modules associated with the main module
Term.

* Menu:

* Term/ANSIColor:: Color screen output using ANSI escape sequences
* Term/ANSIScreen:: Terminal control using ANSI escape sequences.
* Term/Cap:: Perl termcap interface
* Term/Complete:: Perl word completion module
* Term/Gnuplot:: lowlevel graphics using gnuplot drawing routines.
* Term/GnuplotTerminals:: documentation of gnuplot output devices
* Term/ProgressBar:: Perl extension to display a progress bar
* Term/Prompt:: Perl extension for prompting a user for information
* Term/Query:: Table-driven query routine.
* Term/ReadKey:: A perl module for simple terminal control
* Term/ReadLine:: Perl interface to various readline packages. If no real package is found, substitutes stubs instead of basic functions.
* Term/ReadLine/Gnu:: Perl extension for the GNU Readline/History Library
* Term/ReadPassword:: Asking the user for a password
* Term/Size:: Perl extension for retrieving terminal size
* Term/TUI:: simple tool for building text-based user interfaces


File: pm.info,  Node: Test-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Test Menu
*********

   This is the documentation for modules associated with the main module
Test.

* Menu:

* Test Itself: Test. provides a simple framework for writing test scripts
* Test/Cmd:: Perl module for portable testing of commands and scripts
* Test/Harness:: run perl standard test scripts with statistics
* Test/Helper:: easy creation of test scripts
* Test/Unit:: Procedural style unit testing interface
* Test/Unit/Assert:: unit testing framework assertion class
* Test/Unit/Exception:: unit testing framework exception class
* Test/Unit/ExceptionError:: unit testing framework exception class
* Test/Unit/ExceptionFailure:: unit testing framework exception class
* Test/Unit/HarnessUnit:: unit testing framework helper class
* Test/Unit/InnerClass:: unit testing framework helper class
* Test/Unit/Test:: unit testing framework abstract base class
* Test/Unit/TestCase:: unit testing framework base class
* Test/Unit/TestFailure:: unit testing framework helper class
* Test/Unit/TestListener:: unit testing framework abstract base class
* Test/Unit/TestLoader:: unit testing framework helper class
* Test/Unit/TestResult:: unit testing framework helper class
* Test/Unit/TestRunner:: unit testing framework helper class
* Test/Unit/TestSuite:: unit testing framework base class
* Test/Unit/TkTestRunner:: unit testing framework helper class
* Test/Unit/Tutorial:: Tutorial on unit testing
* Test/Unit/UnitHarness:: unit testing framework helper class
* Test/Unit/tests/AllTests:: unit testing framework self tests


File: pm.info,  Node: Text-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Text Menu
*********

   This is the documentation for modules associated with the main module
Text.

* Menu:

* Text/Abbrev:: create an abbreviation table from a list
* Text/Annotated/Line:: strings with annotation about their origin
* Text/Annotated/Reader:: a filter for annotating lines coming from a file
* Text/Annotated/Writer:: filter for writing Text::Annotated lines
* Text/Autoformat:: Automatic and manual text wrapping and reformating formatting
* Text/Balanced:: Extract delimited text sequences from strings.
* Text/BasicTemplate:: Simple lexical text/html/etc template parser
* Text/Bastardize:: a corruptor of innocent text
* Text/Bind:: Bind Perl structures to text files
* Text/Boilerplate:: format a script's output without programming
* Text/CSV:: comma-separated values manipulation routines
* Text/CSV_XS:: comma-separated values manipulation routines
* Text/ConvertPlatform:: an object class for formatting text between  			different platforms.
* Text/Correct:: Module for implementing text wrapping
* Text/DelimMatch:: Perl extension to find regexp delimited strings with proper nesting
* Text/DoubleMetaphone:: Phonetic encoding of words.
* Text/EP3:: The Extensible Perl PreProcessor
* Text/EP3/Verilog:: Verilog extension for the EP3 preprocessor.
* Text/English:: Porter's stemming algorithm
* Text/FIGlet:: a perl module to provide FIGlet abilities, akin to banner
* Text/FillIn:: a class implementing a fill-in template
* Text/Filter:: base class for objects that can read and write text lines
* Text/Filter/Chain:: object for chaining Text::Filter objects and running them sequentially, feeding the output of each filter to the input of the  next one.
* Text/FixedLength:: Parse and create fixed length field records
* Text/FixedLength/Extra:: various niceties for Text::FixedLength lovers.
* Text/Flowchart:: ASCII Flowchart maker
* Text/Format:: Various subroutines to format text.
* Text/German:: German grundform reduction
* Text/Graphics:: A text graphics rendering toolkit
* Text/Header:: RFC 822/2068 header and `unheader' functions
* Text/Hyphenate:: Perl extension for blah blah blah
* Text/Iconv:: Perl interface to iconv() codeset conversion function
* Text/Ispell:: a module encapsulating access to the Ispell program.
* Text/LineEditor:: simple line  editor
* Text/MacroScript:: A macro pre-processor with embedded perl capability
* Text/Macros:: an object-oriented text macro engine
* Text/Merge:: v.0.33  General purpose text/data merging methods in Perl.
* Text/Merge/Lists:: v.0.30 Text/data merge with lists/table support
* Text/MetaText:: Perl extension implementing meta-language for processing  "template" text files.
* Text/MetaText/Directive:: MetaText Directive object class.
* Text/MetaText/Factory:: Factory class for instatiating Directive objects.
* Text/Metaphone:: A modern soundex.  Phonetic encoding of words.
* Text/Munge/Vowels:: removes vowels from words phrases
* Text/NWrap:: a simple text wrapping module
* Text/Number:: Overloaded class for printing numbers
* Text/PDF/AFont:: Embedding of Adobe PFB/PFA + AFM format fonts. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/API:: a wrapper api for the Text::PDF::* modules of Martin Hosken.
* Text/PDF/Array:: Corresponds to a PDF array. Inherits from `PDF::Objind' in this node
* Text/PDF/Bool:: A special form of `PDF::String' in this node which holds the strings *true* or false
* Text/PDF/Dict:: PDF Dictionaries and Streams. Inherits from `PDF::Objind' in this node
* Text/PDF/File:: Holds the trailers and cross-reference tables for a PDF file
* Text/PDF/Filter:: Ascii Hex encoding (very inefficient) for PDF streams. Inherits from *Note Text/PDF/Filter: Text/PDF/Filter,
* Text/PDF/Name:: Inherits from *Note Text/PDF/String: Text/PDF/String, and stores PDF names (things beginning with /)
* Text/PDF/Number:: Numbers in PDF. Inherits from *Note Text/PDF/String: Text/PDF/String,
* Text/PDF/Objind:: PDF indirect object reference. Also acts as an abstract superclass for all elements in a PDF file.
* Text/PDF/Page:: Represents a PDF page, inherits from *Note Text/PDF/Pages: Text/PDF/Pages,
* Text/PDF/Pages:: a PDF pages hierarchical element. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/SFont:: PDF Standard inbuilt font resource object. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/String:: PDF String type objects and superclass for simple objects that are basically stringlike (Number, Name, etc.)
* Text/PDF/TTFont:: Inherits from *Note Text/PDF/Dict: Text/PDF/Dict, and represents a TrueType font within a PDF file.
* Text/PDF/TTFont0:: Inherits from `PDF::Dict' in this node and represents a TrueType Type 0 font within a PDF file.
* Text/PDF/Utils:: Utility functions for PDF library
* Text/ParseWords:: parse text into an array of tokens or array of arrays
* Text/Query:: Query processing framework
* Text/Query/Advanced:: Match text against Boolean expression
* Text/Query/Build:: Base class for query builders
* Text/Query/BuildAdvancedString:: Builder for Text::Query::ParseAdvanced to build regexps
* Text/Query/BuildSimpleString:: Builder for Text::Query::ParseSimple to build regexps
* Text/Query/Optimize:: Base class for query parsers
* Text/Query/Parse:: Base class for query parsers
* Text/Query/ParseAdvanced:: Parse AltaVista advanced query syntax
* Text/Query/ParseSimple:: Parse AltaVista simple query syntax
* Text/Query/Simple:: Match text against simple query expression and return relevance value for ranking
* Text/Query/Solve:: Base class for query resolution
* Text/Query/SolveAdvancedString:: Apply query expression on strings
* Text/Query/SolveSimpleString:: Apply query expression on strings
* Text/Refer:: parse Unix "refer" files
* Text/Reflow:: Perl module for reflowing text files using Knuth's paragraphing algorithm.
* Text/Roman:: Converts roman algarism in integer numbers and the contrary, recognize algarisms.
* Text/ScriptTemplate:: Lightweight processor for full-featured template
* Text/Search:: Perl module to allow quick searching of directories for given text.
* Text/Sentence:: module for splitting text into sentences
* Text/Shoebox:: read and write SIL Shoebox Standard Format (.sf) files
* Text/SimpleTemplate:: Yet another module for template processing
* Text/Soundex:: Implementation of the Soundex Algorithm as Described by Knuth
* Text/Striphigh:: Perl extension to strip the high bit off of ISO-8859-1 text.
* Text/Structured:: Manipulate fixed-format pages
* Text/StructuredBase:: Structured text base class
* Text/Tabs:: expand and unexpand tabs per the unix expand(1) and unexpand(1)
* Text/TagTemplate:: 	Text::TagTemplate
* Text/Template:: Expand template text with embedded Perl
* Text/Thesaurus/ISO:: A class to handle ISO thesaurii
* Text/Tmpl:: Templating system perl library
* Text/TreeFile:: Reads a tree of text strings into a data structure
* Text/TreeFile/details:: precise usage specifications
* Text/TreeFile/internals:: implementation details
* Text/Trie:: MISSING SHORT DESCRIPTION
* Text/Unaccent:: Remove accents from a string
* Text/Vpp:: Perl extension for a versatile text pre-processor
* Text/Wrap:: line wrapping to form simple paragraphs
* Text/WrapProp:: proportional line wrapping to form simple paragraphs
* Text/Wrapper:: Simple word wrapping routine
* Text/libtmpl:: Templating system C library
* Text/template_extend:: how to extend the Text::Tmpl template library (with C or Perl).
* Text/template_syntax:: description of the syntax of a Text::Tmpl template.


File: pm.info,  Node: Thesaurus-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Thesaurus Menu
**************

   This is the documentation for modules associated with the main module
Thesaurus.

* Menu:

* Thesaurus Itself: Thesaurus. David Rolsky (grimes@waste.org)
* Thesaurus/DBI:: Subclass of Thesaurus that creates data structure in a database.
* Thesaurus/DBM:: Subclass of Thesaurus that ties data structure to DBM file.
* Thesaurus/File:: Subclass of Thesaurus that implements persistence using CSV format text files.


File: pm.info,  Node: Thread-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Thread Menu
***********

   This is the documentation for modules associated with the main module
Thread.

* Menu:

* Thread/Pool:: worker thread pools to run Perl code asynchronously


File: pm.info,  Node: Tie-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Tie Menu
********

   This is the documentation for modules associated with the main module
Tie.

* Menu:

* Tie/Array:: base class for tied arrays
* Tie/CArray:: Space-efficient, typed, external C Arrays (Alpha)
* Tie/CPHash:: Case preserving but case insensitive hash table
* Tie/Cache:: LRU Cache in Memory
* Tie/Cache/LRU:: A Least-Recently Used cache
* Tie/CacheHash:: Maintains sorted lists of top entries
* Tie/CharArray:: Access Perl scalars as arrays of characters
* Tie/Collection:: A trivial implementaion of Tie::Cache by using a tied handle of a hash for storage.
* Tie/Counter:: Have a counter in a scalar.
* Tie/Cycle:: Cycle through a list of values via a scalar.
* Tie/DBI:: Tie hashes to DBI relational databases
* Tie/DB_File/SplitHash:: A wrapper around the DB_File Berkeley database system
* Tie/DB_FileLock:: Locking access to Berkeley DB 1.x
* Tie/DB_Lock:: ties hashes to databases using shared and exclusive locks
* Tie/Dir:: class definition for reading directories via a tied hash
* Tie/Discovery:: Perl extension for `Discovery' hashes
* Tie/EncryptedHash:: Hashes (and objects based on hashes) with encrypting fields.
* Tie/FileLRUCache:: A lightweight but robust filesystem based persistent LRU cache
* Tie/FlipFlop:: Alternate between two values.
* Tie/Handle:: base class definitions for tied handles
* Tie/Hash:: base class definitions for tied hashes
* Tie/HashDefaults:: Let a hash have default values
* Tie/IntegerArray:: provides a tied array of packed integers of any bit length
* Tie/IxHash:: ordered associative arrays for Perl
* Tie/LDAP:: Tie LDAP database to Perl hash.
* Tie/LDAP/Entry:: Tie LDAP database entry to Perl hash.
* Tie/LLHash:: ordered hashes
* Tie/ListKeyedHash:: A system allowing the use of anonymous arrays as keys to a hash.
* Tie/Math:: Hashes which represent mathematical functions.
* Tie/MmapArray:: mmap a file as a tied array
* Tie/Multidim:: "tie"-like multidimensional data structures
* Tie/NetAddr/IP:: Implements a Hash where the key is a subnet
* Tie/NumRange:: Keeps a number within a range of values.
* Tie/OffsetArray:: Tie one array to another, with index offset
* Tie/PerFH:: creates scalars specific to a filehandle
* Tie/Persistent:: persistent data structures via tie
* Tie/Pick:: Randomly pick (and remove) an element from a set.
* Tie/RDBM:: Tie hashes to relational databases
* Tie/RangeHash:: Implements "range hashes" in Perl
* Tie/RefHash:: use references as hash keys
* Tie/RegexpHash:: Use regular expressions as hash keys
* Tie/STDERR:: Send output of your STDERR to a process or mail
* Tie/Scalar:: base class definitions for tied scalars
* Tie/Scalar/Timeout:: Scalar variables that time out
* Tie/SecureHash:: A tied hash that supports namespace-based encapsulation
* Tie/SentientHash:: Perl module implementing intelligent objects
* Tie/ShadowHash:: Merge multiple data sources into a hash
* Tie/SortHash:: Perl module to keep hashes in a sorted order
* Tie/SubstrHash:: Fixed-table-size, fixed-key-length hashing
* Tie/Syslog:: Perl extension for tie'ing a filehandle to Syslog
* Tie/TextDir:: interface to directory of files
* Tie/TieDict:: A Perl tie to a dictionary file
* Tie/Toggle:: False and true, alternately, ad infinitum.
* Tie/TransactHash:: Edit hash in transactions not changing order during trans.
* Tie/TwoLevelHash:: Tied interface to multi-dimensional (Two-Level) hash files
* Tie/VecArray:: An array interface to a bit vector.
* Tie/Watch:: place watchpoints on Perl variables.


File: pm.info,  Node: Time-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Time Menu
*********

   This is the documentation for modules associated with the main module
Time.

* Menu:

* Time/Avail:: A Perl module to calculate time availability.
* Time/Beat:: Module to convert from standard time to swatch 'beat' time.
* Time/CTime:: format times ala POSIX asctime
* Time/DaysInMonth:: simply report the number of days in a month
* Time/HiRes:: High resolution ualarm, usleep, and gettimeofday
* Time/JulianDay:: Julian calendar manipulations
* Time/Local:: efficiently compute time from local and GMT time
* Time/Object:: Object Oriented time objects
* Time/ParseDate:: date parsing both relative and absolute
* Time/Period:: A Perl module to deal with time periods.
* Time/Seconds:: a simple API to convert seconds to other date values
* Time/SoFar:: Perl module to calculate run time
* Time/Stopwatch:: Use tied scalars as timers
* Time/Storable:: Store times in a portable format
* Time/Timezone:: miscellaneous timezone manipulations routines
* Time/Unix:: Force time() to return seconds since UNIX epoch
* Time/Warp:: control over the flow of time
* Time/Zone:: miscellaneous timezone manipulations routines
* Time/gmtime:: by-name interface to Perl's built-in gmtime() function
* Time/localtime:: by-name interface to Perl's built-in localtime() function
* Time/tm:: internal object used by Time::gmtime and Time::localtime


File: pm.info,  Node: Tk-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Tk Menu
*******

   This is the documentation for modules associated with the main module
Tk.

* Menu:

* Tk Itself: Tk. a graphical user interface toolkit for Perl
* Tk/Adjuster:: Allow size of packed widgets to be adjusted by user
* Tk/After:: Execute a command after a time delay
* Tk/Animation:: Display sequence of Tk::Photo images
* Tk/Axis:: Canvas with Axes
* Tk/BLT/Table:: geometry manager
* Tk/Balloon:: pop up help balloons.
* Tk/Bitmap:: Images that display two colors
* Tk/BrowseEntry:: entry widget with popup choices.
* Tk/Button:: Create and manipulate Button widgets
* Tk/Canvas:: Create and manipulate Canvas widgets                      =for category  Tk Widget Classes
* Tk/CheckBox:: Another radio button style widget (with a check mark)
* Tk/Checkbutton:: Create and manipulate Checkbutton widgets
* Tk/Clipboard:: Manipulate Tk clipboard
* Tk/Clock:: Clock widget with analog and digital display
* Tk/Cloth:: An OO Tk Canvas
* Tk/CmdLine:: Process standard X11 command line options and set initial resources
* Tk/ColorEditor:: a general purpose Tk widget Color Editor
* Tk/ColourChooser:: Perl/Tk module providing a Colour selection dialogue box.
* Tk/Columns:: A multicolumn list widget with sortable & sizeable columns
* Tk/ComboEntry:: Drop down list entry widget
* Tk/Common:: private class used by Drag&Drop
* Tk/Compound:: Create multi-line compound images.
* Tk/ConfigSpecs:: Defining behaviour of 'configure' for composite widgets.
* Tk/ContextHelp:: context-sensitive help with perl/Tk
* Tk/CornerBox:: a geometry manager for scaling two subwidgets
* Tk/DItem:: Tix Display Items
* Tk/Date:: a date/time widget for perl/Tk
* Tk/DateEntry:: Drop down calendar widget for selecting dates.
* Tk/Derived:: Base class for widgets derived from others
* Tk/Dial:: an alternative to the scale widget
* Tk/Dialog:: Create modal dialog and wait for a response.
* Tk/DialogBox:: create and manipulate a dialog screen.
* Tk/DirTree:: Create and manipulate DirTree widgets
* Tk/DockFrame:: A multicolumn list widget with sortable & sizeable columns
* Tk/DragDrop/Common:: private class used by Drag&Drop
* Tk/DragDrop/SunConst:: Constants for Sun's Drag&Drop protocol
* Tk/DropSite:: Receive side of Drag & Drop abstraction
* Tk/Entry:: Create and manipulate Entry widgets
* Tk/Error:: Method invoked to process background errors
* Tk/EvenTk:: ToolKit for Events
* Tk/Eventloop:: ToolKit for Events
* Tk/FcyEntry:: Entry that reflects its state in the background color
* Tk/FileDialog:: A highly configurable File Dialog widget for Perl/Tk.
* Tk/FileEntry:: FileEntry widget with optional file selection box
* Tk/FileSelect:: a widget for choosing files
* Tk/FireButton:: Button that keeps invoking callback when pressed
* Tk/Font:: Create and inspect fonts.
* Tk/FontDialog:: a font dialog widget for perl/Tk
* Tk/Frame:: Create and manipulate Frame widgets
* Tk/Getopt:: User configuration window for Tk with interface to Getopt::Long
* Tk/Ghostscript:: Beginings of a lowlevel PostScript viewing widget
* Tk/HList:: Create and manipulate Tix Hierarchial List widgets
* Tk/HTML/IO:: Tk I/O routines for the LWP library
* Tk/HistEntry:: Entry widget with history capability
* Tk/IO:: high level interface to Tk's 'fileevent' mechanism
* Tk/IconCanvas:: Canvas with dragable icon management
* Tk/Image:: Create and manipulate images
* Tk/InputO:: Create and manipulate TIX InputO widgets
* Tk/Internals:: what is Perl Tk interface doing when you call Tk functions.
* Tk/Item:: Base class for Menu items
* Tk/JPEG:: JPEG loader for Tk::Photo
* Tk/LabFrame:: labeled frame.
* Tk/Label:: Create and manipulate Label widgets
* Tk/Listbox:: Create and manipulate Listbox widgets
* Tk/LockDisplay:: Create modal dialog and wait for a password response.
* Tk/MListbox:: Multicolumn Listbox.
* Tk/MainWindow:: Root widget of a widget tree
* Tk/Menu:: Create and manipulate Menu widgets
* Tk/MenuHash:: Ties a Tk::Menubutton widget to a hash object thingy
* Tk/Menubutton:: Create and manipulate Menubutton widgets
* Tk/Menustrip:: Another menubar with help menu support, etc
* Tk/MesgBox:: Perl/Tk module for message and button dialogue boxes.
* Tk/Message:: Create and manipulate Message widgets
* Tk/Month:: Calendar widget which shows one month at a time.
* Tk/More:: a 'more' or 'less' like text widget
* Tk/Multi/Any:: Do not use
* Tk/Multi/Canvas:: Tk composite widget with a scroll window and more
* Tk/Multi/Frame:: Tk composite widget with a scroll window and more
* Tk/Multi/Manager:: Tk composite widget managing Tk::Multi slaves
* Tk/Multi/Text:: Tk composite widget with a scroll window and more
* Tk/Multi/Toplevel:: Toplevel MultiManager
* Tk/Mwm:: Communicate with the Motif(tm) window manager.
* Tk/NoteBook:: display several windows in limited space with notebook metaphor.
* Tk/NumEntry:: A numeric Entry widget with inc. & dec. Buttons
* Tk/NumEntryPlain:: A numeric entry widget
* Tk/ObjEditor:: Tk composite widget Obj editor
* Tk/ObjEditorDialog:: Tk composite widget obj editor popup dialog
* Tk/ObjScanner:: Tk data scanner
* Tk/OlWm:: Interface to OpenLook properties of toplevel windows.
* Tk/Optionmenu:: Let the user select one of some predefined options values
* Tk/PNG:: PNG loader for Tk::Photo
* Tk/Pane:: A window panner
* Tk/Panel:: A collapsable frame with title.
* Tk/Parse:: Parse perl's pod files.
* Tk/Photo:: Full-color images
* Tk/Pixmap:: Create color images from XPM files.
* Tk/Pod:: POD browser toplevel widget
* Tk/Pod/Search:: Widget to access perlindex POD full text index
* Tk/Pod/Search_db:: dirty OO wrapper for `perlindex''s search functionality
* Tk/Pod/Text:: POD browser widget
* Tk/Pod_usage:: How to use the perl/Tk POD browser widget
* Tk/PopEntry:: An Entry widget with an automatic, configurable right-click menu built in, plus input masks.
* Tk/ProgressBar:: A graphical progress bar
* Tk/ProgressIndicator:: Another, simpler ProgressBar
* Tk/ROText:: 'readonly' perl/Tk Text widget
* Tk/ROTextANSIColor:: Read-only Tk::TextANSIColor
* Tk/Radiobutton:: Create and manipulate Radiobutton widgets
* Tk/Reindex:: change the base index of Text-like widgets
* Tk/RemoteFileSelect:: Browse directories with FTP.
* Tk/RotCanvas:: Canvas widget with arbitrary rotation support
* Tk/Scale:: Create and manipulate Scale widgets
* Tk/Scrollbar:: Create and manipulate Scrollbar widgets
* Tk/Scrolled:: Create a widget with attached scrollbar(s)
* Tk/SearchDialog:: Search Dialog Widget for Perl/Tk Text.
* Tk/SelFile:: a widget for choosing a file to read or write
* Tk/Shell:: Handlers for Tk::Workspace.pm shell clients.
* Tk/SlideShow:: a Tk Perl module for building slide-like presentations.
* Tk/SplitFrame:: a geometry manager for scaling two subwidgets
* Tk/StrfClock:: a X/TK digital clock widget based on strftime.
* Tk/Submethods:: add aliases for tk sub-commands
* Tk/SunConst:: Constants for Sun's Drag&Drop protocol
* Tk/TFrame:: A Titled Frame widget
* Tk/TList:: Create and manipulate Tix Tabular List widgets
* Tk/TM/Lib:: User interface for database applications. Tk::TM - Tk Transaction Manager - screen transactions with user.
* Tk/TM/Try:: Tk Transaction Manager Error processing functions. See Tk::TM::Lib for main descriptions and principles.
* Tk/TM/wApp:: Tk Transaction Manager Application Window. See Tk::TM::Lib for main descriptions and principles.
* Tk/TabFrame:: An alternative to the NoteBook widget : a tabbed geometry manager
* Tk/TabbedForm:: a form management arrangement using Tk::TabFrame
* Tk/Table:: Scrollable 2 dimensional table of Tk widgets
* Tk/TableEdit:: A simple flat-file DBMS editor using Tk::SplitFrame, Tk::TabbedForm, and Tk::Columns
* Tk/TableMatrix:: Create and manipulate tables
* Tk/Text:: Create and manipulate Text widgets
* Tk/Text/SuperText:: An improved text widget for perl/tk
* Tk/TextANSIColor:: Tk::Text widget with support for ANSI color escape codes
* Tk/TextUndo:: perl/tk text widget with bindings to undo changes.
* Tk/TiedListbox:: gang together Listboxes
* Tk/Tiler:: Scrollable frame with sub-widgets arranged into rows
* Tk/TixGrid:: Create and manipulate Tix Grid widgets
* Tk/TixWidget:: methods for Tix widgets
* Tk/Toplevel:: Create and manipulate Toplevel widgets
* Tk/Tree:: Create and manipulate Tree widgets
* Tk/TreeGraph:: Tk widget to draw a tree in a Canvas
* Tk/UserGuide:: Writing Tk applications in perl5.
* Tk/WaitBox:: An Object Oriented Wait Dialog for Perl/Tk, of the Please Wait variety.
* Tk/Widget:: Base class of all widgets
* Tk/WidgetDemo:: create a standard widget demonstration window.
* Tk/WinPhoto:: Load a Photo image from a window
* Tk/Wm:: Communicate with window manager
* Tk/Workspace:: Persistent, multi-purpose text processor.   (File browser, shell, editor) script.   Requires Perl/Tk; optionally Net::FTP.
* Tk/X:: Perl extension for Xlib constants.
* Tk/X11Font:: a class for finding X Fonts
* Tk/XFontSelect:: X11 Font Selection Dialog.
* Tk/XMLViewer:: Tk widget to display XML
* Tk/Xrm:: X Resource/Defaults/Options routines that obey the rules.
* Tk/after:: Execute a command after a time delay
* Tk/bind:: Arrange for X events to invoke callbacks
* Tk/bindtags:: Determine which bindings apply to a window, and order of evaluation
* Tk/callbacks:: Specifying code for Tk to call.
* Tk/chooseColor:: pops up a dialog box for the user to select a color.
* Tk/composite:: Defining a new composite widget class
* Tk/configspec:: Defining behaviour of 'configure' for composite widgets.
* Tk/demos/widget_lib/WidgetDemo:: create a standard widget demonstration window.
* Tk/event:: Miscellaneous event facilities: define virtual events and generate events
* Tk/exit:: End the application
* Tk/fileevent:: Execute a callback when a filehandle becomes readable or writable
* Tk/focus:: Manage the input focus
* Tk/form:: Geometry manager based on attachment rules
* Tk/getOpenFile:: pop up a dialog box for the user to select a file to open or save.
* Tk/grab:: Confine pointer and keyboard events to a window sub-tree
* Tk/grid:: Geometry manager that arranges widgets in a grid
* Tk/mega:: perl/Tk support to write widgets in perl
* Tk/messageBox:: pop up a message window and wait for user response.
* Tk/option:: Using the option database in Perl/Tk
* Tk/options:: Standard options supported by widgets and their manipulation
* Tk/overview:: An overview of an Object Oriented Tk8.0 extension for perl5
* Tk/pTk:: how to make your Tk source portable to other interpreted languages.
* Tk/pack:: Geometry manager that packs around edges of cavity
* Tk/palette:: Modify the Tk color palette
* Tk/place:: Geometry manager for fixed or rubber-sheet placement
* Tk/selection:: Manipulate the X selection
* Tk/send:: Execute a command in a different application
* Tk/tixWm:: Tix's addition to the standard TK wm command.
* Tk/tkvars:: Variables used or set by Tk
* Tk/widgets:: preload widget classes


