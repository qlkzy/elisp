This is Info file pm.info, produced by Makeinfo version 1.68 from the
input file bigpm.texi.


File: pm.info,  Node: Module List,  Next: (perl.info)Function Index,  Prev: (perl.info)Top,  Up: (perl.info)Top

Module List
***********

   This is it!  The top-level list of the over 4500 installed (documented)
modules on bitbucket, as of Mon Mar 26 15:39:27 PST 2001.

   Texinfo source for this file was generated by krishna running
pod2texi.pl.  This info file itself was created 26 March 2001.

* Menu:


* AI: AI-menu. AI modules menu
* AO:: A Perl servlet engine
* AOL: AOL-menu. AOL modules menu
* ASP: ASP-menu. ASP modules menu
* Ace: Ace-menu. Ace modules menu
* AddressBook: AddressBook-menu. AddressBook modules menu
* Affix: Affix-menu. Affix modules menu
* Agent: Agent-menu. Agent modules menu
* Algorithm: Algorithm-menu. Algorithm modules menu
* Alias:: declare symbolic aliases for perl data
* AltaVista: AltaVista-menu. AltaVista modules menu
* AnyDBM_File:: provide framework for multiple DBMs
* AnyLoader:: Automagically loads modules for fully qualified functions
* Ao:: Perl extension for ao cross-platform audio library
* Apache: Apache-menu. Apache modules menu
* App: App-menu. App modules menu
* AppConfig: AppConfig-menu. AppConfig modules menu
* AppleII: AppleII-menu. AppleII modules menu
* Archive: Archive-menu. Archive modules menu
* Argv:: Provide an O-O interface to an ARGV
* Array: Array-menu. Array modules menu
* AsciiDB: AsciiDB-menu. AsciiDB modules menu
* Astro: Astro-menu. Astro modules menu
* Async: Async-menu. Async modules menu
* AtExit:: perform exit processing for a program or object
* Audio: Audio-menu. Audio modules menu
* AudioCD: AudioCD-menu. AudioCD modules menu
* Authen: Authen-menu. Authen modules menu
* AuthenIMAP:: Authentication via an IMAP server
* AutoLoader:: load subroutines only on demand
* AutoSplit:: split a package for autoloading
* Aviation: Aviation-menu. Aviation modules menu
* Aw: Aw-menu. Aw modules menu
* AxKit: AxKit-menu. AxKit modules menu
* B: B-menu. B modules menu
* BIND: BIND-menu. BIND modules menu
* BSD: BSD-menu. BSD modules menu
* BTRIEVE: BTRIEVE-menu. BTRIEVE modules menu
* Barcode: Barcode-menu. Barcode modules menu
* BaseLib:: manipulate @INC dynamically for independent installation path
* Be: Be-menu. Be modules menu
* Befunge: Befunge-menu. Befunge modules menu
* Benchmark:: benchmark running times of Perl code
* BerkDB:: Perl extension for Berkeley DB version 2
* BerkeleyDB:: Perl extension for Berkeley DB version 2 or 3
* BikePower:: bicycle power-output calculator with command-line and Tk interface
* BingoX: BingoX-menu. BingoX modules menu
* Bio: Bio-menu. Bio modules menu
* Bit: Bit-menu. Bit modules menu
* Bleach:: For *really* clean programs
* BnP:: implements the automatic recovery mechanism of "Build'n'Play"
* Bone: Bone-menu. Bone modules menu
* Boulder: Boulder-menu. Boulder modules menu
* Bundle: Bundle-menu. Bundle modules menu
* Business: Business-menu. Business modules menu
* ByteCache:: byte-compile modules when needed
* ByteLoader:: load byte compiled perl code
* C: C-menu. C modules menu
* CArray:: External C Arrays for Perl (Alpha)
* CDB_File:: Perl extension for access to cdb databases
* CDDB:: a high-level interface to the Internet Compact Disc Database
* CDDB_get:: Read the CDDB entry for an audio CD in your drive
* CFITSIO:: All CFITSIO routines, with the exception of `fits_iterate_data()' and `fits_open_memfile()', are available in both long and short name forms (e.g., `fits_read_key' <=> `ffgky'), as well as all constants defined in the `fitsio.h' header file. This raises the possibility of your name space being invaded by nearly 1000 function and constant names.
* CGI: CGI-menu. CGI modules menu
* CGI3: CGI3-menu. CGI3 modules menu
* CGI_Lite:: Perl module to process and decode WWW forms and cookies.
* CIDR: CIDR-menu. CIDR modules menu
* CIPP: CIPP-menu. CIPP modules menu
* CIsam:: Perl Object Oriented extension for ISAM files
* CONFIG: CONFIG-menu. CONFIG modules menu
* CPAN: CPAN-menu. CPAN modules menu
* CSS: CSS-menu. CSS modules menu
* Cache: Cache-menu. Cache modules menu
* Calendar: Calendar-menu. Calendar modules menu
* Callback:: object interface for function callbacks
* Carp: Carp-menu. Carp modules menu
* CfgTie: CfgTie-menu. CfgTie modules menu
* Chart: Chart-menu. Chart modules menu
* Chatbot: Chatbot-menu. Chatbot modules menu
* Chemistry: Chemistry-menu. Chemistry modules menu
* Chess: Chess-menu. Chess modules menu
* Circa: Circa-menu. Circa modules menu
* Cisco: Cisco-menu. Cisco modules menu
* Class: Class-menu. Class modules menu
* ClearCase: ClearCase-menu. ClearCase modules menu
* Clone:: Perl extension for a recurrsive copy of nested objects.
* CodeBase:: Perl module for accessing dBASE files
* Compress: Compress-menu. Compress modules menu
* Config: Config-menu. Config modules menu
* ConfigReader: ConfigReader-menu. ConfigReader modules menu
* Conjury: Conjury-menu. Conjury modules menu
* Continuus:: Perl interface to Continuus CM
* ControlX10: ControlX10-menu. ControlX10 modules menu
* Convert: Convert-menu. Convert modules menu
* Coy::     Coy (like Carp only prettier)
* Crypt: Crypt-menu. Crypt modules menu
* Curses: Curses-menu. Curses modules menu
* Cwd:: get pathname of current working directory
* Cz: Cz-menu. Cz modules menu
* D: D-menu. D modules menu
* DB:: programmatic interface to the Perl debugging API (draft, subject to change)
* DBD: DBD-menu. DBD modules menu
* DBI: DBI-menu. DBI modules menu
* DBIx: DBIx-menu. DBIx modules menu
* DBM: DBM-menu. DBM modules menu
* DBO:: Database Objects
* DBZ_File:: Tied access to dbz files
* DB_File: DB_File-menu. DB_File modules menu
* DBass:: DBM with associative arrays, file locking and XML records
* DCE: DCE-menu. DCE modules menu
* DDL: DDL-menu. DDL modules menu
* DFA: DFA-menu. DFA modules menu
* DNS: DNS-menu. DNS modules menu
* Data: Data-menu. Data modules menu
* Date: Date-menu. Date modules menu
* DateTime: DateTime-menu. DateTime modules menu
* Db: Db-menu. Db modules menu
* DbFramework: DbFramework-menu. DbFramework modules menu
* Decision: Decision-menu. Decision modules menu
* DelayLine:: Simple time-delay data stucture
* Des:: Des extension module for Perl
* Devel: Devel-menu. Devel modules menu
* Device: Device-menu. Device modules menu
* Dialog:: Perl interface to `dialog(3)' in this node
* Digest: Digest-menu. Digest modules menu
* Dir: Dir-menu. Dir modules menu
* DirHandle:: supply object methods for directory handles
* Docclient:: client module for MS format conversions
* Document: Document-menu. Document modules menu
* DotLock:: Multi-host advisory queing locking system
* Dua:: DUA/Perl interface to an X.500 directory
* Dumpvalue:: provides screen dump of Perl data.
* Dunce: Dunce-menu. Dunce modules menu
* DynScalar:: closure-in-a-box for simple scalars
* DynaLoader:: Dynamically load C libraries into Perl code
* EMatrix:: MISSING SHORT DESCRIPTION
* Edit:: module to implement common text editing functions
* Eesh:: Enlightenment Window Manager IPC Library
* Emacs: Emacs-menu. Emacs modules menu
* Email: Email-menu. Email modules menu
* Embedding_API:: MISSING SHORT DESCRIPTION
* Embedix: Embedix-menu. Embedix modules menu
* Emotion:: discrete emotion annotation processing
* End:: generalized END {}.
* English: English-menu. English modules menu
* Env: Env-menu. Env modules menu
* Envy: Envy-menu. Envy modules menu
* Errno:: System errno constants
* Error: Error-menu. Error modules menu
* Event: Event-menu. Event modules menu
* Exception: Exception-menu. Exception modules menu
* Expect:: Expect for Perl, Version 1.11
* Expect_FAQ:: Frequently Asked Questions
* Expect_intro:: Perl Expect interface
* Exporter: Exporter-menu. Exporter modules menu
* ExtUtils: ExtUtils-menu. ExtUtils modules menu
* FAQ: FAQ-menu. FAQ modules menu
* FCGI: FCGI-menu. FCGI modules menu
* FFI: FFI-menu. FFI modules menu
* FakeHash:: Class used internally by `FakeHash' to represent key-value pairs
* Fame:: Perl5 access to FAME
* Fatal:: replace functions with equivalents which succeed or die
* Fcntl:: load the C Fcntl.h defines
* Festival: Festival-menu. Festival modules menu
* File: File-menu. File modules menu
* FileCache:: keep more files open than the system permits
* FileHandle: FileHandle-menu. FileHandle modules menu
* FileSys: FileSys-menu. FileSys modules menu
* Filesys: Filesys-menu. Filesys modules menu
* Filter: Filter-menu. Filter modules menu
* Finance: Finance-menu. Finance modules menu
* FindBin:: Locate directory of original perl script
* FirstGoodURL:: determines first successful URL in list
* Font: Font-menu. Font modules menu
* FormMagick: FormMagick-menu. FormMagick modules menu
* Fortune:: read and write fortune (strfile) databases
* FreezeThaw:: converting Perl structures to strings and back.
* Frontier: Frontier-menu. Frontier modules menu
* Function: Function-menu. Function modules menu
* Functional:: a module which makes Perl slightly more functional (think Haskell)
* Fwctl: Fwctl-menu. Fwctl modules menu
* GD: GD-menu. GD modules menu
* GIFgraph: GIFgraph-menu. GIFgraph modules menu
* GNOME: GNOME-menu. GNOME modules menu
* GPS: GPS-menu. GPS modules menu
* GSSAPI: GSSAPI-menu. GSSAPI modules menu
* GTop:: Perl interface to libgtop
* Games: Games-menu. Games modules menu
* GedNav:: Perl extension for quick (& dirty) navigation of GEDCOM files
* Gedcom: Gedcom-menu. Gedcom modules menu
* Geo: Geo-menu. Geo modules menu
* Geography: Geography-menu. Geography modules menu
* Getargs: Getargs-menu. Getargs modules menu
* Getopt: Getopt-menu. Getopt modules menu
* Gettext:: Perl extension for emulating gettext-related API.
* Glade: Glade-menu. Glade modules menu
* GnuPG: GnuPG-menu. GnuPG modules menu
* Gnus: Gnus-menu. Gnus modules menu
* GoXML: GoXML-menu. GoXML modules menu
* Graph: Graph-menu. Graph modules menu
* GraphViz: GraphViz-menu. GraphViz modules menu
* Graphics: Graphics-menu. Graphics modules menu
* Gtk: Gtk-menu. Gtk modules menu
* HP200LX: HP200LX-menu. HP200LX modules menu
* HPUX: HPUX-menu. HPUX modules menu
* HTML: HTML-menu. HTML modules menu
* HTTP: HTTP-menu. HTTP modules menu
* HTTPD: HTTPD-menu. HTTPD modules menu
* Hardware: Hardware-menu. Hardware modules menu
* Hash: Hash-menu. Hash modules menu
* Heap: Heap-menu. Heap modules menu
* Hook: Hook-menu. Hook modules menu
* HtDig: HtDig-menu. HtDig modules menu
* HyperWave: HyperWave-menu. HyperWave modules menu
* I18N: I18N-menu. I18N modules menu
* IETF: IETF-menu. IETF modules menu
* IMAP: IMAP-menu. IMAP modules menu
* INSPEC: INSPEC-menu. INSPEC modules menu
* IO: IO-menu. IO modules menu
* IPC: IPC-menu. IPC modules menu
* IPChains: IPChains-menu. IPChains modules menu
* Ima: Ima-menu. Ima modules menu
* Image: Image-menu. Image modules menu
* Imager: Imager-menu. Imager modules menu
* InfoBrief:: Perl extension for printing envelopes for Infobrief mailings according to the standards of the Deutsche Bundespost
* Inline: Inline-menu. Inline modules menu
* Inline-API:: API - How to bind a programming language to Perl using Inline.pm
* Inline-Support:: Support - Support Information for Inline.pm and related modules.
* Interpolation:: Arbitrary string interpolation semantics
* Interval:: handling of temporal intervals based on Date::Manip
* Isam:: Perl extension for ISAM files
* Ivrs:: Perl extension for Interactive Voice Response System.
* JListbox:: MISSING SHORT DESCRIPTION
* Jail:: SGIPerl extension for grabbing video, modifying images and display images
* Java:: Perl extension for accessing a JVM remotely or locally
* Jcode: Jcode-menu. Jcode modules menu
* Kite: Kite-menu. Kite modules menu
* Krb4:: Perl extension for Kerberos 4
* Krb5:: Perl extension for Kerberos 5
* LEGO: LEGO-menu. LEGO modules menu
* LISP: LISP-menu. LISP modules menu
* LWP: LWP-menu. LWP modules menu
* LaTeX: LaTeX-menu. LaTeX modules menu
* LabPopEntry:: A LabEntry widget with an automatic, configurable right-click menu built in, plus input masks.
* Language: Language-menu. Language modules menu
* Lib: Lib-menu. Lib modules menu
* LibWeb: LibWeb-menu. LibWeb modules menu
* LinePrinter:: Perl extension for direct-to-lpd printing.
* Lingua: Lingua-menu. Lingua modules menu
* Linux: Linux-menu. Linux modules menu
* Lip: Lip-menu. Lip modules menu
* List: List-menu. List modules menu
* LiveGeez: LiveGeez-menu. LiveGeez modules menu
* LoadWorm:: WebSite Stress and Validation Tool
* Locale: Locale-menu. Locale modules menu
* LockFile: LockFile-menu. LockFile modules menu
* Log: Log-menu. Log modules menu
* Logfile: Logfile-menu. Logfile modules menu
* MARC: MARC-menu. MARC modules menu
* MCrypt:: Perl extension for MCrypt Crypto library
* MD5:: Perl interface to the MD5 Message-Digest Algorithm
* MIDI: MIDI-menu. MIDI modules menu
* MIME: MIME-menu. MIME modules menu
* MLDBM: MLDBM-menu. MLDBM modules menu
* MMM: MMM-menu. MMM modules menu
* MOP: MOP-menu. MOP modules menu
* MP3: MP3-menu. MP3 modules menu
* MPEG: MPEG-menu. MPEG modules menu
* MQSeries: MQSeries-menu. MQSeries modules menu
* MRP: MRP-menu. MRP modules menu
* MSDOS: MSDOS-menu. MSDOS modules menu
* MVS: MVS-menu. MVS modules menu
* Mac: Mac-menu. Mac modules menu
* Mail: Mail-menu. Mail modules menu
* Make:: module for processing makefiles
* Math: Math-menu. Math modules menu
* Mcrypt:: Perl extension for the Mcrypt cryptography library
* MegaHAL:: Perl interface to the MegaHAL natural language             conversation simulator.
* MemHandle: MemHandle-menu. MemHandle modules menu
* Memoize: Memoize-menu. Memoize modules menu
* Metadata: Metadata-menu. Metadata modules menu
* Mhash:: Perl extension for Mhash Hash library
* Mmap:: uses mmap to map in a file as a perl variable
* Modem: Modem-menu. Modem modules menu
* Module: Module-menu. Module modules menu
* ModuleBundle:: Combine several other modules into one package   =head1  SYNOPSIS
* Mon: Mon-menu. Mon modules menu
* Morse:: MISSING SHORT DESCRIPTION
* Mortal: Mortal-menu. Mortal modules menu
* Msql: Msql-menu. Msql modules menu
* MySQL: MySQL-menu. MySQL modules menu
* Mysql:: Perl interfaces to the mSQL and mysql databases
* NDBM_File:: Tied access to ndbm files
* NIS: NIS-menu. NIS modules menu
* NNML: NNML-menu. NNML modules menu
* NVDefined:: Perl extension for non-vivifying exists and defined functions
* Net: Net-menu. Net modules menu
* NetAddr: NetAddr-menu. NetAddr modules menu
* NetPacket: NetPacket-menu. NetPacket modules menu
* NetServer: NetServer-menu. NetServer modules menu
* Netscape: Netscape-menu. Netscape modules menu
* Network: Network-menu. Network modules menu
* News: News-menu. News modules menu
* Newt:: Perl bindings for RedHat newt library
* No: No-menu. No modules menu
* Number: Number-menu. Number modules menu
* O:: Generic interface to Perl Compiler backends
* ODBM_File:: Tied access to odbm files
* OLE: OLE-menu. OLE modules menu
* OO: OO-menu. OO modules menu
* OS2: OS2-menu. OS2 modules menu
* OS390: OS390-menu. OS390 modules menu
* Object: Object-menu. Object modules menu
* Ogg: Ogg-menu. Ogg modules menu
* Opcode:: Disable named opcodes when compiling perl code
* OpenCA: OpenCA-menu. OpenCA modules menu
* OpenInteract: OpenInteract-menu. OpenInteract modules menu
* OurNet: OurNet-menu. OurNet modules menu
* P4: P4-menu. P4 modules menu
* PApp: PApp-menu. PApp modules menu
* PDF: PDF-menu. PDF modules menu
* PDL: PDL-menu. PDL modules menu
* PGP: PGP-menu. PGP modules menu
* PGPLOT:: allow subroutines in the PGPLOT graphics library to be called from Perl.
* PML: PML-menu. PML modules menu
* PNGgraph: PNGgraph-menu. PNGgraph modules menu
* POE: POE-menu. POE modules menu
* POSIX:: Perl interface to IEEE Std 1003.1
* PPM: PPM-menu. PPM modules menu
* Palm: Palm-menu. Palm modules menu
* Parallel: Parallel-menu. Parallel modules menu
* Params: Params-menu. Params modules menu
* Parse: Parse-menu. Parse modules menu
* Passwd: Passwd-menu. Passwd modules menu
* Paw: Paw-menu. Paw modules menu
* Penguin: Penguin-menu. Penguin modules menu
* Perf: Perf-menu. Perf modules menu
* PerlPoint: PerlPoint-menu. PerlPoint modules menu
* Perlbug: Perlbug-menu. Perlbug modules menu
* Persistence: Persistence-menu. Persistence modules menu
* Persistent: Persistent-menu. Persistent modules menu
* Ph:: provide a perl API for talking to CSO ph servers.
* PlotCalendar: PlotCalendar-menu. PlotCalendar modules menu
* PlusPlus:: [Delphi|VB|Java]-like Perl preprocessor
* Pod: Pod-menu. Pod modules menu
* Pogo:: Perl GOODS interface
* Pogo.jp:: Perl GOODS interface
* PogoLink:: Bidirectional relationship class for objects in a Pogo database
* PogoLink.jp:: MISSING SHORT DESCRIPTION
* PostScript: PostScript-menu. PostScript modules menu
* Postgres:: Perl interface to the Postgres95 SQL database engine
* Pquota:: a UNIX print quota module
* Pragmatic:: Adds pragmata to Exporter
* Proc: Proc-menu. Proc modules menu
* Project: Project-menu. Project modules menu
* Psh: Psh-menu. Psh modules menu
* PubMed:: class for searching National Library of Medicine
* Puppet: Puppet-menu. Puppet modules menu
* QAccel:: Interface to the Qt QAccel class
* QApplication:: Interface to the Qt QApplication class
* QBitmap:: Interface to the Qt QBitmap class
* QBrush:: Interface to the Qt QBrush class
* QButton:: Interface to the Qt QButton class
* QButtonGroup:: Interface to the Qt QButtonGroup class
* QCheckBox:: Interface to the Qt QCheckBox class
* QClipboard:: Interface to the Qt QClipboard class
* QColor:: Interface to the Qt QColor class
* QComboBox:: Interface to the Qt QComboBox class
* QCursor:: Interface to the Qt QCursor class
* QDialog:: Interface to the Qt QDialog class
* QEvent:: Interface to the Qt QEvent, QMouseEvent, QPaintEvent, QResizeEvent, and QTimerEvent classes
* QFileDialog:: Interface to the Qt QFileDialog class
* QFont:: Interface to the Qt QFont class
* QFontInfo:: Interface to the Qt QFontInfo class
* QFontMetrics:: Interface to the Qt QFontMetrics class
* QFrame:: Interface to the Qt QFrame class
* QGlobal:: Internal PerlQt class, required by all other classes
* QGroupBox:: Interface to the Qt QGroupBox class
* QImage:: Interface to the Qt QImage class
* QLCDNumber:: Interface to the Qt QLCDNumber class
* QLabel:: Interface to the Qt QLabel class
* QLayout:: Interface to the Qt QLayout, QBoxLayout and QGridLayout classes
* QLineEdit:: Interface to the Qt QLineEdit class
* QListBox:: Interface to the Qt QListBox, QListBoxItem, QListBoxPixmap and QListBoxText classes
* QMenuBar:: Interface to the Qt QMenuBar class
* QMenuData:: Interface to the Qt QMenuData class
* QMessageBox:: Interface to the Qt QMessageBox class
* QMultiLineEdit:: Interface to the Qt QMultiLineEdit class
* QObject:: Interface to the Qt QObject class
* QPaintDevice:: Interface to the Qt QPaintDevice class
* QPainter:: Interface to the Qt QPainter class
* QPalette:: Interface to the Qt QPalette and QColorGroup classes
* QPen:: Interface to the Qt QPen class
* QPicture:: Interface to the Qt QPicture class
* QPixmap:: Interface to the Qt QPixmap class
* QPoint:: Interface to the Qt QPoint class
* QPointArray:: Interface to the Qt QPointArray class
* QPopupMenu:: Interface to the Qt QPopupMenu class
* QPrinter:: Interface to the Qt QPrinter class
* QPushButton:: Interface to the Qt QPushButton class
* QRadioButton:: Interface to the Qt QRadioButton class
* QRangeControl:: Interface to the Qt QRangeControl class
* QRect:: Interface to the Qt QRect class
* QRegion:: Interface to the Qt QRegion class
* QScrollBar:: Interface to the Qt QScrollBar class
* QSize:: Interface to the Qt QSize class
* QSlider:: Interface to the Qt QSlider class
* QTabBar:: Interface to the Qt QTabBar class
* QTabDialog:: Interface to the Qt QTabDialog class
* QTableView:: Interface to the Qt QTableView class
* QTimer:: Interface to the Qt QTimer class
* QToolTip:: Interface to the Qt QToolTip and QToolTipGroup classes
* QWMatrix:: Interface to the Qt QWMatrix class
* QWidget:: Interface to the Qt QWidget class
* QWindow:: Interface to the Qt QWindow class
* Qt:: A Perl module interface to Qt
* Qtk: Qtk-menu. Qtk modules menu
* Quantum: Quantum-menu. Quantum modules menu
* Quine:: extension for creating quines
* Quota:: Perl interface to file system quotas
* R3: R3-menu. R3 modules menu
* RADIUS: RADIUS-menu. RADIUS modules menu
* RAS: RAS-menu. RAS modules menu
* RCGI:: Remote CGI distributed processing
* RCU: RCU-menu. RCU modules menu
* RDBAL: RDBAL-menu. RDBAL modules menu
* RDFStore: RDFStore-menu. RDFStore modules menu
* RFC: RFC-menu. RFC modules menu
* RIPEMD160: RIPEMD160-menu. RIPEMD160 modules menu
* RPC: RPC-menu. RPC modules menu
* RTF: RTF-menu. RTF modules menu
* Randomize:: Perl extension for randomizing things.
* Rc:: parser and backends for 'rc' shell
* Rcs:: Perl Object Class for Revision Control System (RCS).
* Regex: Regex-menu. Regex modules menu
* Regexp: Regexp-menu. Regexp modules menu
* Register: Register-menu. Register modules menu
* Religion:: Generate tracebacks and create and install die() and  warn() handlers.
* Remedy: Remedy-menu. Remedy modules menu
* RenderMan:: A RenderMan binding as a Perl 5.6 module
* Resources:: handling application defaults in Perl.
* RevML: RevML-menu. RevML modules menu
* Run:: Perl extension for to start programs in background
* SDBM_File:: Tied access to sdbm files
* SDL: SDL-menu. SDL modules menu
* SETI: SETI-menu. SETI modules menu
* SGI: SGI-menu. SGI modules menu
* SGML: SGML-menu. SGML modules menu
* SHA:: Perl interface to the NIST Secure Hash Algorithm
* SNMP: SNMP-menu. SNMP modules menu
* SOAP: SOAP-menu. SOAP modules menu
* SOM:: Perl extension for access to SOM and DSOM objects.
* SPOPS: SPOPS-menu. SPOPS modules menu
* SQL: SQL-menu. SQL modules menu
* SWISH: SWISH-menu. SWISH modules menu
* Safe: Safe-menu. Safe modules menu
* Scalar: Scalar-menu. Scalar modules menu
* Schedule: Schedule-menu. Schedule modules menu
* Script:: (Win32) system administrator`s library - for login and application startup scripts, etc
* Search: Search-menu. Search modules menu
* SecurID: SecurID-menu. SecurID modules menu
* Secure: Secure-menu. Secure modules menu
* SelectSaver:: save and restore selected file handle
* SelfLoader:: load functions only on demand
* Semi: Semi-menu. Semi modules menu
* Server: Server-menu. Server modules menu
* Seshat: Seshat-menu. Seshat modules menu
* Set: Set-menu. Set modules menu
* Sex:: Perl teaches the birds and the bees.
* Shell:: run shell commands transparently within perl
* Silly: Silly-menu. Silly modules menu
* SimpleCDB:: Perl-only Constant Database
* SimpleConfig:: Simple configuration file parser
* Simran: Simran-menu. Simran modules menu
* Sirc: Sirc-menu. Sirc modules menu
* Slay: Slay-menu. Slay modules menu
* SlideShow:: Perl extension remote presentation
* Slinke:: module to control the Slink-e product produced by Nirvis - visit Nirvis at http://www.nirvis.com
* Smil:: Perl extension for dynamic generation of SMIL files.
* Socket: Socket-menu. Socket modules menu
* Socket6:: load IPv6 related part of the C socket.h defines and structure manipulators
* Softref:: Perl extension for blah blah blah
* Solaris: Solaris-menu. Solaris modules menu
* Sort: Sort-menu. Sort modules menu
* Spectrum: Spectrum-menu. Spectrum modules menu
* Speech: Speech-menu. Speech modules menu
* Spread:: Perl extension for the Spread group communication system
* Spreadsheet: Spreadsheet-menu. Spreadsheet modules menu
* Sprite:: Module to manipulate text delimited databases using SQL.
* Startup:: A program flow utility.
* Stat: Stat-menu. Stat modules menu
* Statistics: Statistics-menu. Statistics modules menu
* StatsView: StatsView-menu. StatsView modules menu
* Stone: Stone-menu. Stone modules menu
* Storable:: persistency for perl data structures
* String: String-menu. String modules menu
* Sub: Sub-menu. Sub modules menu
* Switch:: A switch statement for Perl
* Sx:: front-end to all the Athena and Xlib garbage for Perl GUI progamming
* Sybase: Sybase-menu. Sybase modules menu
* Symbol: Symbol-menu. Symbol modules menu
* Symphero: Symphero-menu. Symphero modules menu
* Sys: Sys-menu. Sys modules menu
* SyslogScan: SyslogScan-menu. SyslogScan modules menu
* TFTP:: TFTP Client class
* TableMap:: Maps relational tables into hashes
* Taco: Taco-menu. Taco modules menu
* Taint:: Perl utility extensions for tainted data
* Tar:: module for manipulation of tar archives.
* Tcl: Tcl-menu. Tcl modules menu
* TeX: TeX-menu. TeX modules menu
* Template: Template-menu. Template modules menu
* Term: Term-menu. Term modules menu
* Test: Test-menu. Test modules menu
* Text: Text-menu. Text modules menu
* Thesaurus: Thesaurus-menu. Thesaurus modules menu
* Thread: Thread-menu. Thread modules menu
* Tie: Tie-menu. Tie modules menu
* Tiger:: Perl interface to the Tiger Hash Algorithm
* Time: Time-menu. Time modules menu
* Tk: Tk-menu. Tk modules menu
* Tree: Tree-menu. Tree modules menu
* UDDI: UDDI-menu. UDDI modules menu
* UNIVERSAL: UNIVERSAL-menu. UNIVERSAL modules menu
* URI: URI-menu. URI modules menu
* URI2: URI2-menu. URI2 modules menu
* Unicode: Unicode-menu. Unicode modules menu
* Unix: Unix-menu. Unix modules menu
* Untaint:: Module for laundering tainted data.
* User: User-menu. User modules menu
* VCP: VCP-menu. VCP modules menu
* VCS: VCS-menu. VCS modules menu
* VMS: VMS-menu. VMS modules menu
* VRML: VRML-menu. VRML modules menu
* VcsTools: VcsTools-menu. VcsTools modules menu
* Verilog: Verilog-menu. Verilog modules menu
* Video: Video-menu. Video modules menu
* VoiceXML: VoiceXML-menu. VoiceXML modules menu
* WDDX:: a module for reading and writing WDDX packets
* WML: WML-menu. WML modules menu
* WWW: WWW-menu. WWW modules menu
* Watchdog: Watchdog-menu. Watchdog modules menu
* WeakRef:: an API to the Perl weak references
* Weather: Weather-menu. Weather modules menu
* WebCache: WebCache-menu. WebCache modules menu
* WebFS: WebFS-menu. WebFS modules menu
* WebFetch: WebFetch-menu. WebFetch modules menu
* Wharf: Wharf-menu. Wharf modules menu
* Win32: Win32-menu. Win32 modules menu
* Win32API: Win32API-menu. Win32API modules menu
* Wizard: Wizard-menu. Wizard modules menu
* WordNet: WordNet-menu. WordNet modules menu
* X11: X11-menu. X11 modules menu
* X500: X500-menu. X500 modules menu
* XBase: XBase-menu. XBase modules menu
* XML: XML-menu. XML modules menu
* XMLNews: XMLNews-menu. XMLNews modules menu
* XSLoader:: Dynamically load C libraries into Perl code
* XTM: XTM-menu. XTM modules menu
* Xbase:: Perl Module to Read Xbase DBF Files and Foxpro IDX indexes
* Xmms: Xmms-menu. Xmms modules menu
* YAPE: YAPE-menu. YAPE modules menu
* attributes:: get/set subroutine or variable attributes
* attrs:: set/get attributes of a subroutine (deprecated)
* autoload:: only load modules when they're used
* autouse:: postpone load of modules until a function is used
* base:: Establish IS-A relationship with base class at compile time
* bioback:: how to customise bioperl for your site
* biodesign:: Design Documentation
* biostart:: Getting Started
* bitflags:: Perl module for generating bit flags
* blib:: Use MakeMaker's uninstalled version of a package
* build:: the equivalent of "make" of "Build'n'Play" (BnP)
* bytes:: Perl pragma to force byte semantics rather than character semantics
* charnames:: define character names for `\N{named}' string literal escape.
* constant:: Perl pragma to declare constants
* cyrillic:: Library for fast and easy cyrillic text manipulation
* dTemplate:: A powerful template handling logic with advanced features.
* diagnostics:: Perl compiler pragma to force verbose warning diagnostics
* enum:: C style enumerated types and bitmask flags in Perl
* ex: ex-menu. ex modules menu
* fields:: compile-time class fields
* filetest:: Perl pragma to control the filetest permission operators
* foundation:: Inheritance without objects
* genopt:: *GEN*erate access layer for *OPT*ional software
* gettext:: message handling functions
* import:: import all modules with a package prefix, aliasing it away.
* integer:: Perl pragma to compute arithmetic in integer instead of double
* iodbc:: Perl extension for the iODBC API
* less:: perl pragma to request less of something from the compiler
* lib:: manipulate @INC at compile time
* libapreq:: Apache Request C Library
* locale:: Perl pragma to use and avoid POSIX locales for built-in operations
* loose:: Perl pragma to allow unsafe constructs
* lwpcook:: libwww-perl cookbook
* mods:: easy one-stop module shopping
* open:: perl pragma to set default disciplines for input and output
* ops:: Perl pragma to restrict unsafe operations when compiling
* overload:: Package for overloading perl operations
* perlrpcgen: perlrpcgen-menu. perlrpcgen modules menu
* pod: pod-menu. pod modules menu
* pqedit:: Web-based database table editor.
* private:: Add private data members to Perl classes
* protect:: allows the declaration of protected subs
* protected:: "private" data fields which are inherited by child classes
* ptkFAQ:: ptkFAQ
* public:: Add public data members to Perl classes
* re:: Perl pragma to alter regular expression behaviour
* rlib:: manipulate @INC at compile time with relative paths
* savevars:: Perl pragma to auto-load and save global variables
* sigtrap:: Perl pragma to enable simple signal handling
* strict:: Perl pragma to restrict unsafe constructs
* subs:: Perl pragma to predeclare sub names
* uny2k:: Removes y2k fixes
* utf8:: Perl pragma to enable/disable UTF-8 in source code
* variable:: Perl pragma to declare (scalar) variables without a leading `$'.
* vars:: Perl pragma to predeclare global variable names (obsolete)
* vga:: Perl extension for svgalib-1.2.11
* vpopmail:: Perl extension for the vpopmail package
* warnings:: Perl pragma to control optional warnings
* web:: A set of useful routines for many webworking purposes
* wwwAdmin:: A system for configuring virtual Apache web servers
* y2k:: A simple module to detect y2k bugs


File: pm.info,  Node: Module Index,  Next: Module List,  Prev: Module List,  Up: Module List

Module Index
************

   This is the full index of the installed (documented) modules on
bitbucket, as of Mon Mar 26 15:39:27 PST 2001.

* Menu:


* AI/Fuzzy:: Perl extension for Fuzzy Logic
* AI/Gene/AI/Gene/Sequence::  AI::Gene::Sequence
* AI/Gene/AI/Gene/Simple::  AI::Gene::Simple
* AI/Perceptron:: An implementation of a Perceptron
* AO:: A Perl servlet engine
* AOL/TOC:: Perl extension for interfacing with AOL's AIM service
* ASP:: a Module for ASP (PerlScript) Programming
* ASP/NextLink:: Perl implementation of the NextLink ASP component
* Ace:: Object-Oriented Access to ACEDB Databases
* Ace/Browser/AceSubs:: Subroutines for AceBrowser
* Ace/Graphics/Fk:: A dummy feature object used for generating panel key tracks
* Ace/Graphics/Glyph:: Base class for Ace::Graphics::Glyph objects
* Ace/Graphics/Glyph/anchored_arrow:: The "anchored_arrow" glyph
* Ace/Graphics/Glyph/arrow:: The "arrow" glyph
* Ace/Graphics/Glyph/group:: The group glyph
* Ace/Graphics/Glyph/line:: The "line" glyph
* Ace/Graphics/Glyph/primers:: The "STS primers" glyph
* Ace/Graphics/Glyph/segments:: The "discontinuous segments" glyph
* Ace/Graphics/Glyph/transcript:: The "gene" glyph
* Ace/Graphics/GlyphFactory:: Create Ace::Graphics::Glyphs
* Ace/Graphics/Panel:: PNG graphics of Ace::Sequence::Feature objects
* Ace/Graphics/Track:: PNG graphics of Ace::Sequence::Feature objects
* Ace/Iterator:: Iterate Across an ACEDB Query
* Ace/Local:: use giface, tace or gifaceclient to open a local connection to an Ace database
* Ace/Model:: Get information about AceDB models
* Ace/Object:: Manipulate  Ace Data Objects
* Ace/Sequence:: Examine ACeDB Sequence Objects
* Ace/Sequence/Feature:: Examine Sequence Feature Tables
* Ace/Sequence/FeatureList:: Lightweight Access to Features
* Ace/Sequence/GappedAlignment:: Gapped alignment object
* Ace/Sequence/Homol:: Temporary Sequence Homology Class
* Ace/Sequence/Multi:: Combine Feature Tables from Multiple Databases
* Ace/Sequence/Transcript:: Simple "Gene" Object
* AddressBook:: Abstract class for using AddressBooks
* AddressBook/Config:: AddressBook configuration object
* AddressBook/DB/BBDB:: Perl extension for reading and writing bbdb files
* AddressBook/DB/DBI:: Backend for AddressBook to use in databases
* AddressBook/DB/HTML:: Backend for AddressBook to print entries in HTML format
* AddressBook/DB/LDAP:: Backend for AddressBook to use LDAP.
* AddressBook/DB/LDIF:: Backend for AddressBook to use LDIF files.
* AddressBook/DB/PDB:: Backend for AddressBook to use PDB (PalmOS) Databases.
* AddressBook/DB/Text:: Backend for AddressBook to print entries in a simple text format
* AddressBook/Entry:: An entry in the AddressBook
* Affix/Infix2Postfix:: Perl extension for converting from infix notation to postfix notation.
* Agent:: the Transportable Agent Perl module
* Agent/Message:: the Transportable Agent Perl module
* Agent/Transport:: the Transportable Agent Perl module
* Agent/Transport/TCP:: the Transportable Agent Perl module
* Algorithm/Diff:: Compute `intelligent' differences between two files / lists
* Algorithm/DiffOld:: Compute `intelligent' differences between two files / lists but use the old (<=0.59) interface.
* Algorithm/Graphs/TransitiveClosure:: Calculate the transitive closure.
* Algorithm/MDiff:: Perl extension for m-differece detection.
* Algorithm/MarkovChain:: Object oriented Markov chain generator
* Algorithm/Numerical/Sample:: Draw samples from a set
* Algorithm/Numerical/Shuffle:: Shuffle a list.
* Algorithm/Permute:: Handy and fast permutation with object oriented interface
* Algorithm/SISort:: Implementation of Select And Insert sorting algorithm in C
* Alias:: declare symbolic aliases for perl data
* AltaVista/SearchSDK:: Perl extension for AltaVista Search Software Development Kit
* AnyDBM_File:: provide framework for multiple DBMs
* AnyLoader:: Automagically loads modules for fully qualified functions
* Ao:: Perl extension for ao cross-platform audio library
* Apache:: Perl interface to the Apache server API
* Apache/ASP:: Active Server Pages for Apache with mod_perl
* Apache/AddHostPath:: Adds some or all of the hostname and port to the URI
* Apache/Album:: Simple mod_perl Photo Album
* Apache/Archive:: Expose archive files through the Apache web server.
* Apache/AuthCookie:: Perl Authentication and Authorization via cookies
* Apache/AuthCookieDBI:: An AuthCookie module backed by a DBI database.
* Apache/AuthCookieURL:: Perl Authentication and Authorization or session management via cookies or URL munging
* Apache/AuthDBI:: Authentication and Authorization via Perl's DBI
* Apache/AuthLDAP:: mod_perl LDAP Access Control and Authentication Module
* Apache/AuthNetLDAP:: mod_perl module that uses the Net::LDAP module for user authentication for Apache
* Apache/AuthPerLDAP:: mod_perl PerLDAP Authentication Module
* Apache/AuthTicket:: Cookie based access module.
* Apache/AuthenCache:: Authentication caching used in conjuction with a primary authentication module (Apache::AuthenDBI, Apache::AuthenLDAP, etc.)
* Apache/AuthenDBI:: Authentication via Perl's DBI
* Apache/AuthenLDAP:: mod_perl LDAP Authentication Module
* Apache/AuthenNIS:: mod_perl NIS Authentication module
* Apache/AuthenPasswd:: mod_perl passwd Authentication module
* Apache/AuthenPasswdSrv:: mod_perl Authen Handler
* Apache/AuthenRadius:: Authentication via a Radius server
* Apache/AuthenSecurID:: Authentication via a SecurID server
* Apache/AuthenSmb:: mod_perl NT Authentication module
* Apache/AuthenURL:: authenticates via another URL
* Apache/AuthzCache:: mod_perl Cache Authorization Module
* Apache/AuthzDBI:: Authorization via Perl's DBI
* Apache/AuthzLDAP:: mod_perl LDAP Authorization Module
* Apache/AuthzNIS:: mod_perl NIS Group Authorization module
* Apache/AutoIndex:: Perl replacment for mod_autoindex and mod_dir Apache module
* Apache/AxKit/Language:: base class for all processors
* Apache/AxKit/Language/NotXSLT:: Matt's non-xslt template processor
* Apache/AxKit/Language/XPathScript:: An XML Stylesheet Language
* Apache/AxKit/Language/XSP:: eXtensible Server Pages
* Apache/AxKit/Language/XSP/Util:: XSP util: taglib.
* Apache/AxKit/Plugins/Fragment:: Fragment plugin
* Apache/AxKit/Plugins/Passthru:: allow passthru=1 in querystring
* Apache/AxKit/Provider:: base Provider class
* Apache/AxKit/StyleChooser/Cookie:: Choose stylesheets based on a browser cookie
* Apache/AxKit/StyleChooser/FileSuffix:: Choose stylesheet using file suffix
* Apache/AxKit/StyleChooser/PathInfo:: Choose stylesheet using PATH_INFO
* Apache/AxKit/StyleChooser/QueryString:: Choose stylesheet using querystring
* Apache/AxKit/StyleChooser/UserAgent:: Choose stylesheets based on the user agent.
* Apache/AxKit/StyleFinder:: Execute module based on <?xml-stylesheet?>
* Apache/AxKit/StyleProvider:: DEPRECATED!!!
* Apache/AxKit/XMLFinder:: Detects XML files
* Apache/CIPP:: Use CIPP embedded HTML Pages with mod_perl
* Apache/Clean:: mod_perl interface into HTML::Clean
* Apache/Compress:: Auto-compress web files with Gzip
* Apache/Constants:: Constants defined in apache header files
* Apache/ContentHandler:: mod_perl extension for uniform application generation.
* Apache/Cookie:: HTTP Cookies Class
* Apache/DB:: Run the interactive Perl debugger under mod_perl
* Apache/DBI:: Initiate a persistent database connection
* Apache/DBILogConfig:: Logs access information in a DBI database
* Apache/DBILogger:: Tracks what's being transferred in a DBI database
* Apache/DBILogin:: authenticates and authorizes via a DBI connection
* Apache/DProf:: Hook Devel::DProf into mod_perl
* Apache/Debug:: Utilities for debugging embedded perl code
* Apache/DebugDBI:: Debug Apache::DBI modules
* Apache/DebugInfo:: log various bits of per-request data
* Apache/Dispatch:: call PerlHandlers with the ease of Registry scripts
* Apache/DumpHeaders:: Watch HTTP transaction via headers
* Apache/EmbperlChain:: process embedded perl in HTML in the OutputChain
* Apache/ExtUtils:: Utils for Apache:C/Perl glue
* Apache/FakeRequest:: fake request object for debugging
* Apache/File:: advanced functions for manipulating files at the server side
* Apache/Filter:: Alter the output of previous handlers
* Apache/GD/Graph:: Generate Graphs in an Apache handler.
* Apache/GTopLimit:: Limit Apache httpd processes
* Apache/Gateway:: A Bloated Gateway Module
* Apache/GzipChain:: compress HTML (or anything) in the OutputChain
* Apache/HeavyCGI:: Framework to run complex CGI tasks on an Apache server
* Apache/HeavyCGI/Date:: represent a date as both unix time and HTTP time
* Apache/HeavyCGI/Debug:: inspect the Pseudohash as Hash with Data::Dumper
* Apache/HeavyCGI/Exception:: exception class for Apache::HeavyCGI
* Apache/HeavyCGI/ExePlan:: Creates an execution plan for Apache::HeavyCGI
* Apache/HeavyCGI/IfModified:: Within Apache::HeavyCGI return 304
* Apache/HeavyCGI/Layout:: Represent a page layout in an array
* Apache/HeavyCGI/SquidRemoteAddr:: Pass X-Forwarded-For Header through as remote_ip
* Apache/HeavyCGI/UnmaskQuery:: Allow queries without a questionmark
* Apache/Htaccess:: Create and modify Apache .htaccess files
* Apache/Htgroup:: Manage Apache authentication group files
* Apache/Htpasswd:: Manage Unix crypt-style password file.
* Apache/Icon:: Lookup icon images
* Apache/Include:: Utilities for mod_perl/mod_include integration
* Apache/Keywords:: Store keywords as a personal profile in a cookie.
* Apache/Language:: Perl transparent language support for Apache modules and mod_perl scripts
* Apache/Language/Constants:: Apache::Language constants for use by LanguageHandlers
* Apache/Language/DBI:: DBI interface for Apache::Language
* Apache/Language/PlainFile:: Default LanguageHandler under Apache::Language
* Apache/Language/SW:: LanguageHandler for SmartWorker Applications
* Apache/Layer:: Layer content tree over one or more others.
* Apache/Leak:: Module for tracking memory leaks in mod_perl code
* Apache/Log:: Interface to Apache logging
* Apache/LogFile:: Interface to Apache's logging routines
* Apache/MP3:: Generate streamable directories of MP3 files
* Apache/MP3/Playlist:: Manage directories of MP3 files with sorting and persistent playlists
* Apache/MP3/Sorted:: Generate sorted streamable directories of MP3 files
* Apache/MakeCapital:: convert server output to uppercase
* Apache/MimeXML:: mod_perl mime encoding sniffer for XML files
* Apache/Mmap:: Associates a scalar with a mmap'd file
* Apache/Mmap/Handle:: Associates a file handle with a mmaped file
* Apache/Module:: Interface to Apache C module structures
* Apache/ModuleDoc:: Self documentation for Apache C modules
* Apache/Motd:: Provide motd (Message of the Day) functionality to a webserver
* Apache/MyConfig:: build options access
* Apache/Mysql:: Initiate a persistent database connection to Mysql
* Apache/NNTPGateway:: A NNTP interface for mod_perl enabled Apache web server.
* Apache/OWA:: Run OWA applications under Apache/mod_perl
* Apache/Options:: OPT_* defines from httpd_core.h
* Apache/OutputChain:: chain stacked Perl handlers
* Apache/PHLogin:: authenticates via a PH database
* Apache/PageKit:: Application framework using mod_perl and HTML::Template
* Apache/PageKit/Config:: Reads and provides configuration data.
* Apache/PageKit/Content:: Parses and stores content in XML files.
* Apache/PageKit/Edit:: Web based editing tools for View templates
* Apache/PageKit/Error:: Error Handling under mod_perl
* Apache/PageKit/Model:: Base Model Class
* Apache/PageKit/Session:: Session Handling
* Apache/PageKit/View:: Bridge between Apache::PageKit and HTML::Template
* Apache/ParseLog:: Object-oriented Perl extension for parsing Apache log files
* Apache/PassExec:: run CGI and catch its output
* Apache/PassFile:: print a file to STDOUT
* Apache/PassHtml:: print out the html file
* Apache/Peek:: A data debugging tool for the XS programmer
* Apache/PerlRun:: Run unaltered CGI scripts under mod_perl
* Apache/PerlRunFilter:: run Perl scripts in an Apache::Filter chain
* Apache/PerlRunXS:: XS implementation of Apache::PerlRun/Apache::Registry
* Apache/PerlSections:: Utilities for work with <Perl> sections
* Apache/PerlVINC:: Allows versioning of modules among directories or v-hosts.
* Apache/PrettyPerl:: Apache mod_perl PerlHandler for nicer output perl files in the client's browser.
* Apache/PrettyText:: A very simple apache mod_perl PerlHandler for text files
* Apache/Proxy:: Perl interface to mod_proxy
* Apache/Proxy/Info:: Small backend to get information from doc server to mod_perl server
* Apache/ProxyPass:: implement ProxyPass in perl
* Apache/ProxyPassThru:: Skeleton for vanilla proxy
* Apache/ProxyRewrite:: mod_perl URL-rewriting proxy
* Apache/ProxyStuff:: mod_perl header/footer/proxy module
* Apache/RandomLocation:: Perl extension for mod_perl to handle random locations.
* Apache/RedirectDBI:: Redirect requests to different directories based on the existence of a user in one or more database tables
* Apache/RedirectLogFix:: Properly set redirect status for loggers
* Apache/RefererBlock:: block request based upon referer header
* Apache/Registry:: Run unaltered CGI scrips under mod_perl
* Apache/RegistryFilter:: run Perl scripts in an Apache::Filter chain
* Apache/RegistryLexInfo:: Diff Apache::Registry script padlists
* Apache/RegistryLoader:: Compile Apache::Registry scripts at server startup
* Apache/Reload:: Reload changed modules
* Apache/Request:: Methods for dealing with client request data
* Apache/RequestNotes:: pass form and cookie data around in pnotes
* Apache/Resource:: Limit resources used by httpd children
* Apache/ReverseProxy:: An Apache mod_perl reverse proxy
* Apache/RewritingProxy:: proxy that works by rewriting requested documents with no client proxy config needed.
* Apache/SIG:: Override apache signal handlers with Perl's
* Apache/SOAP:: Provide SOAP server functionality with simple configuration
* Apache/SSI:: Implement Server Side Includes in Perl
* Apache/SSIChain:: do SSI on other modules' output
* Apache/Sandwich:: Layered document (sandwich) maker
* Apache/Scoreboard:: Perl interface to the Apache scoreboard structure
* Apache/Session:: A persistence framework for session data
* Apache/Session/Counted:: Session management via a File::CounterFile
* Apache/Session/DBI:: Session persistence via DBI
* Apache/Session/DBIBase64Store:: Session persistence via DBI with  ASCII  encoding of session data.
* Apache/Session/DBIStore:: Session persistence via DBI
* Apache/Session/DB_File:: An implementation of Apache::Session
* Apache/Session/Embperl:: works with HTML::Embperl
* Apache/Session/File:: An implementation of Apache::Session
* Apache/Session/Flex:: Specify everything at runtime
* Apache/Session/Generate/MD5:: Use MD5 to create random object IDs
* Apache/Session/IPC:: Store client sessions via IPC::Shareable
* Apache/Session/Lock/File:: Provides mutual exclusion using flock
* Apache/Session/Lock/MySQL:: Provides mutual exclusion using MySQL
* Apache/Session/Lock/Null:: Does not actually provides mutual exclusion
* Apache/Session/Lock/Semaphore:: Provides mutual exclusion through sempahores
* Apache/Session/MySQL:: An implementation of Apache::Session
* Apache/Session/Oracle:: An implementation of Apache::Session
* Apache/Session/Postgres:: An implementation of Apache::Session
* Apache/Session/Serialize/Base64:: Use Storable and MIME::Base64 to zip up persistent data
* Apache/Session/Serialize/Storable:: Use Storable to zip up persistent data
* Apache/Session/Serialize/Sybase:: Use Storable to zip up persistent data and unpack/pack to put into Sybase-compatible image field
* Apache/Session/Serialize/UUEncode:: Use Storable and pack() to zip up persistent data
* Apache/Session/Store/DB_File:: Use DB_File to store persistent objects
* Apache/Session/Store/File:: Store persistent data on the filesystem
* Apache/Session/Store/MySQL:: Store persistent data in a MySQL database
* Apache/Session/Store/Oracle:: Store persistent data in a Oracle database
* Apache/Session/Store/Postgres:: Store persistent data in a Postgres database
* Apache/Session/Store/Sybase:: Store persistent data in a Sybase database
* Apache/Session/Sybase:: An implementation of Apache::Session
* Apache/Session/Win32:: Store client sessions in a global hash
* Apache/SetWWWTheme:: Standard theme generation, including sidebars and navigation bars
* Apache/ShowRequest:: Show phases and module participation
* Apache/SimpleReplace:: a simple template framework
* Apache/SizeLimit:: Because size does matter.
* Apache/SmallProf:: Hook Devel::SmallProf into mod_perl
* Apache/Stage:: Manage A Staging Directory
* Apache/StatINC:: Reload %INC files when updated on disk
* Apache/Status:: Embedded interpreter status information
* Apache/Storage:: Storing data in Apache.
* Apache/Sybase/CTlib:: Perl extension for creating persistant database connections to sybase using Apache and Sybperl.
* Apache/Symbol:: Things for symbol things
* Apache/Symdump:: Symbol table snapshots
* Apache/Table:: Perl interface to the Apache table structure
* Apache/Taco:: mod_perl handler for Taco
* Apache/TempFile:: Allocate temporary filenames for the duration of a request
* Apache/Template:: Apache/mod_perl interface to the Template Toolkit
* Apache/Throttle:: Apache/Perl module for speed-based content negotiation
* Apache/Throttle/Log:: Apache/Perl module to determine average speed
* Apache/TimedRedirect:: an Apache (mod_perl) TransHandler
* Apache/Traffic:: Tracks hits and bytes transferred on a per-user basis
* Apache/TransLDAP:: An Apache+mod_perl Trans Handler
* Apache/URI:: URI component parsing and unparsing
* Apache/UploadSvr:: A Lightweight Publishing System for Apache
* Apache/UploadSvr/User:: Identify users and permissions Apache::UploadSvr
* Apache/Usertrack:: Emulate the mod_usertrack apache module
* Apache/Util:: Interface to Apache C util functions
* Apache/VMonitor:: Visual System and Apache Server Monitor
* Apache/Watchdog/RunAway:: a monitor for hanging processes
* Apache/WebSNMP:: Allows for SNMP calls to be embedded in HTML
* Apache/XPP:: MISSING SHORT DESCRIPTION
* Apache/XPP/Cache:: XPP Cache manegment module
* Apache/XPP/Cache/Expiry:: Cache expiry superclass
* Apache/XPP/Cache/Expiry/Duration:: Duration based cache expiry.
* Apache/XPP/Cache/Store:: Cache store superclass
* Apache/XPP/Cache/Store/File:: flatfile cache store
* Apache/XPP/PreParse:: XPP TAG Parser
* Apache/httpd_conf:: Generate an httpd.conf file
* Apache/iNcom:: An e-commerce framework.
* Apache/iNcom/CartManager:: Object responsible for managing the user shopping cart.
* Apache/iNcom/Localizer:: Object responsible for the localization of the generated request.
* Apache/iNcom/OrderManager:: Module responsible for order management.
* Apache/iNcom/Request:: Manages the Apache::iNcom request's informations.
* Apache/iNcom/Session:: Apache::Session implementation for Apache::iNcom
* Apache/iNcom/SessionLocker:: Manage locks for iNcom's sessions.
* Apache/iNcom/UserDBAuthen:: mod_perl authentication handler that use the UserDB.
* Apache/iNcom/UserDBAuthz:: mod_perl authorization handler that use the UserDB.
* Apache/libapreq:: Generate compiler and linker flags for libapreq
* Apache/src:: Methods for locating and parsing bits of Apache source code
* Apache/test:: Facilitates testing of Apache::* modules
* App/Config:: Perl5 extension for managing global application configuration information.
* App/Manager:: Perl module for installing, managing and uninstalling software packages.
* AppConfig:: Perl5 module for reading configuration files and parsing command line arguments.
* AppConfig/Args:: Perl5 module for reading command line arguments.
* AppConfig/File:: Perl5 module for reading configuration files.
* AppConfig/Getopt:: Perl5 module for processing command line arguments via delegation to Getopt::Long.
* AppConfig/MyFile:: Perl5 module for reading configuration files.
* AppConfig/State:: Perl5 module for maintaining the state of an application configuration.
* AppConfig/Std:: subclass of AppConfig which provides standard options
* AppConfig/Sys:: Perl5 module defining platform-specific information and methods for other AppConfig::* modules.
* AppleII/Disk:: Block-level access to Apple II disk image files
* AppleII/ProDOS:: Access files on Apple II ProDOS disk images
* Archive/Tar:: module for manipulation of tar archives.
* Archive/Zip:: Provide an interface to ZIP archive files.
* Archive/Zip/Tree:: methods for adding/extracting trees using Archive::Zip
* Argv:: Provide an O-O interface to an ARGV
* Array/Compare:: Perl extension for comparing arrays.
* Array/FileReader:: Lazily tie files to arrays for reading
* Array/IntSpan:: a Module for handling arrays using IntSpan techniques
* Array/IntSpan/IP:: a Module for arrays using IP addresses as indices
* Array/Lookup:: Lookup strings in arrays or hash tables with abbreviation.
* Array/PrintCols:: Print or format array elements in vertically sorted columns.
* Array/RefElem:: Set up array elements as aliases
* Array/Reform:: Convert an array into N-sized array of arrays
* AsciiDB/TagFile:: Tie class for a simple ASCII database
* Astro/Coord:: Astronomical coordinate transformations
* Astro/Misc:: Miscellaneous astronomical routines
* Astro/MoonPhase:: Information about the phase of the moon
* Astro/SLA:: perl interface to SLAlib positional astronomy library
* Astro/Time:: Time based astronomical routines
* Async:: Asynchronous evaluation of Perl code (with optional timeouts)
* Async/Group:: Perl class to deal with simultaneous asynchronous calls
* AtExit:: perform exit processing for a program or object
* Audio/CD:: Perl interface to libcdaudio (cd + cddb)
* Audio/CoolEdit:: Modules for reading & writing Syntrillium CoolEdit Pro .ses files.
* Audio/CoolEdit/Read:: Methods for reading Syntrillium CoolEdit Pro .ses files.
* Audio/CoolEdit/Write:: Methods for writing Syntrillium CoolEdit Pro .ses files.
* Audio/DSP:: Perl interface to *NIX digital audio device.
* Audio/MikMod:: Perl extension for libmikmod.
* Audio/Mix:: Module for fading cross-fading wav audio files.
* Audio/Play/MPG123:: a frontend to mpg123 version 0.59r and beyond.
* Audio/SoundFile:: Perl interface to libsndfile, a sound I/O library
* Audio/SoundFile/Header:: Interface to handle sound format information
* Audio/SoundFile/Reader:: Reader class for various sound formats
* Audio/SoundFile/Writer:: Writer class for various sound formats
* Audio/Tools:: Common Tools for Audio::Wav, Audio::Mix & Audio::CoolEdit
* Audio/Tools/ByteOrder:: Unpacking rules for little endian machines.
* Audio/Tools/Fades:: Fading in & out algorithms.
* Audio/Tools/Time:: time / sample / byte conversion tools.
* Audio/Wav:: Modules for reading & writing Microsoft Wav files.
* Audio/Wav/Read:: Module for reading Microsoft Wav files.
* Audio/Wav/Write:: Module for writing Microsoft Wav files.
* AudioCD:: Module for basic Audio CD control
* AudioCD/Mac:: MacPerl extension for controlling Audio CDs
* Authen/ACE:: Perl extension for accessing a SecurID ACE server
* Authen/Challenge/Basic:: A Basic challenge/response authentication scheme.
* Authen/FAQ:: Frequently-Asked Questions about Authen::PAM.
* Authen/Krb4:: Perl extension for Kerberos 4
* Authen/Krb5:: Perl extension for Kerberos 5
* Authen/Libwrap:: access to Wietse Venema's TCP Wrappers library
* Authen/PAM:: Perl interface to PAM library
* Authen/PIN:: Create and verify strong PIN numbers
* Authen/Prot:: Perl extension for accessing protected password database
* Authen/SASL:: SASL Authentication base class
* Authen/Smb:: Perl extension to authenticate against an SMB server
* Authen/TacacsPlus:: Perl extension for authentication using tacacs+ server
* Authen/Ticket:: Perl extension for implementing ticket authentication
* Authen/Ticket/Client:: Authentication code for the client website
* Authen/Ticket/Server:: Perl extension for implementing ticket authentication.
* Authen/Ticket/Signature:: MISSING SHORT DESCRIPTION
* AuthenIMAP:: Authentication via an IMAP server
* AutoLoader:: load subroutines only on demand
* AutoSplit:: split a package for autoloading
* Aviation/Report:: Perl extension for translating U.S. METAR, TAF and PIREP textual reports into plain English.
* Aw:: Perl extension for the ActiveWorks C Application Development Kit
* Aw/Adapter:: ActiveWorks Adapter Module.
* Aw/Client:: ActiveWorks Client Module.
* Aw/ClientX:: ActiveWorks Client Module.
* Aw/ConnectionDescriptor:: ActiveWorks Connection Descriptor Module.
* Aw/Event:: ActiveWorks Event Module.
* Aw/License:: ActiveWorks License Module.
* Aw/Log:: ActiveWorks Log Module.
* Aw/TypeDef:: ActiveWorks TypeDef Module.
* Aw/Util:: ActiveWorks Connection Descriptor Module.
* AxKit:: an XML Delivery Toolkit for Apache
* AxKit/XSP/ESQL:: An Extended SQL taglib for AxKit eXtensible Server Pages
* AxKit/XSP/Exception:: Exceptions taglib for eXtensible Server Pages
* AxKit/XSP/Param:: A namespace wrapper for accessing HTTP request paramaters.
* AxKit/XSP/Sendmail:: Simple SMTP mailer tag library for AxKit eXtesible Server Pages.
* AxKit/XSP/Util:: XSP util: taglib.
* B:: The Perl Compiler
* B/Asmdata:: Autogenerated data about Perl ops, used to generate bytecode
* B/Assembler:: Assemble Perl bytecode
* B/Bblock:: Walk basic blocks
* B/Bytecode:: Perl compiler's bytecode backend
* B/C:: Perl compiler's C backend
* B/CC:: Perl compiler's optimized C translation backend
* B/Debug:: Walk Perl syntax tree, printing debug info about ops
* B/Deparse:: Perl compiler backend to produce perl code
* B/Disassembler:: Disassemble Perl bytecode
* B/Fathom:: a module to evaluate the readability of Perl code
* B/FindAmpersand:: A compiler backend to find variables that set sawampersand
* B/Generate:: Create your own op trees.
* B/Graph:: Perl compiler backend to produce graphs of OP trees
* B/JVM/Emit:: Package used by B::JVM to emit Java Bytecode
* B/JVM/Jasmin:: Perl Backend module for generating JVM code via Jasmin Assembler
* B/JVM/Jasmin/CompileState:: Internal package used by B::JVM::Jasmin to keep state of compilation
* B/JVM/Jasmin/Emit:: Package used by B::JVM::Jasmin to emit Jasmin syntaxed                         file
* B/JVM/Utils:: Utility functions for B::JVM
* B/LexInfo:: Show information about subroutine lexical variables
* B/Lint:: Perl lint
* B/Showlex:: Show lexical variables used in functions or files
* B/Size:: Measure size of Perl OPs and SVs
* B/Stackobj:: Helper module for CC backend
* B/Terse:: Walk Perl syntax tree, printing terse info about ops
* B/TerseSize:: Printing info about ops and their (estimated) size
* B/Tree:: Simplified version of B::Graph for demonstration
* B/Xref:: Generates cross reference reports for Perl programs
* BIND/Conf_Parser:: Parser class for BIND configuration files
* BSD/Ipfwgen:: Module to aid in the creation of ipfw-based firewalls
* BSD/Itimer:: Perl extension for accessing interval timers
* BSD/Resource:: BSD process resource limit and priority functions
* BTRIEVE/SAVE:: Perl extension to manipulate BTRIEVE SAVE records.
* Barcode/Code128:: Generate CODE 128 bar codes
* Barcode/Cuecat:: Perl extension for decoding :CueCat(tm) scans
* BaseLib:: manipulate @INC dynamically for independent installation path
* Be/Attribute:: get and set MIME file attributes
* Be/Query:: do a Query for a given filesystem.
* Befunge/Interpreter:: Perl extension for interpreting befunge.
* Benchmark:: benchmark running times of Perl code
* BerkDB:: Perl extension for Berkeley DB version 2
* BerkeleyDB:: Perl extension for Berkeley DB version 2 or 3
* BikePower:: bicycle power-output calculator with command-line and Tk interface
* BingoX/Argon:: Common methods used by many application classes.
* BingoX/Carbon:: An object oriented database abstraction superclass
* BingoX/Chromium:: Generic BingoX Admin module
* BingoX/Cobalt:: Cobalt display parent class containing generic methods
* BingoX/Time:: Time display parent class containing generic methods
* Bio/AlignIO:: Handler for AlignIO Formats
* Bio/AlignIO/bl2seq:: bl2seq sequence input/output stream
* Bio/AlignIO/clustalw:: clustalw sequence input/output stream
* Bio/AlignIO/fasta:: fasta sequence input/output stream
* Bio/AlignIO/mase:: mase sequence input/output stream
* Bio/AlignIO/msf:: msf sequence input/output stream
* Bio/AlignIO/pfam:: pfam sequence input/output stream
* Bio/AlignIO/prodom:: prodom sequence input/output stream
* Bio/AlignIO/selex:: selex sequence input/output stream
* Bio/AlignIO/stockholm:: stockholm sequence input/output stream
* Bio/Annotation:: A generic object for annotations
* Bio/Annotation/Comment:: A comment object, holding text
* Bio/Annotation/DBLink:: DESCRIPTION of Object
* Bio/Annotation/Reference:: Specialised DBLink object for Literature References
* Bio/DB/Ace:: Database object interface to ACeDB servers
* Bio/DB/BioSeqI:: Abstract interface for a sequence database
* Bio/DB/GDB:: Database object interface to GDB HTTP query
* Bio/DB/GenBank:: Database object interface to GenBank
* Bio/DB/GenPept:: Database object interface to GenPept
* Bio/DB/NCBIHelper:: A collection of routines useful for queries to NCBI databases.
* Bio/DB/RandomAccessI:: Abstract interface for a sequence database
* Bio/DB/SeqI:: Abstract Interface for Sequence databases
* Bio/DB/SwissProt:: Database object interface to SwissProt retrieval
* Bio/DB/UpdateableSeqI:: An interface for writing to a database of sequences.
* Bio/DB/WebDBSeqI:: Object Interface to generalize Web Databases for   retrieving sequences
* Bio/DBLinkContainerI:: Abstract interface for any object wanting to use                           database cross references
* Bio/Factory/DriverFactory:: Base class for factory classes loading drivers
* Bio/Factory/SeqAnalysisParserFactory:: class capable of               creating SeqAnalysisParserI compliant parsers
* Bio/Factory/SeqAnalysisParserFactoryI:: interface describing objects capable               of creating SeqAnalysisParserI compliant parsers
* Bio/Index/Abstract:: Abstract interface for indexing a flat file
* Bio/Index/AbstractSeq:: Base class for AbstractSeq s
* Bio/Index/EMBL:: Interface for indexing (multiple) EMBL/Swissprot .dat files (ie flat file embl/swissprot format).
* Bio/Index/Fasta:: Interface for indexing (multiple) fasta files
* Bio/Index/GenBank:: Interface for indexing (multiple) GenBank .seq files (ie flat file GenBank format).
* Bio/Index/SwissPfam:: Interface for indexing swisspfam files
* Bio/Index/Swissprot:: Interface for indexing (multiple) Swissprot .dat files (ie flat file swissprot format).
* Bio/LiveSeq/AARange:: AARange abstract class for LiveSeq
* Bio/LiveSeq/Chain:: DoubleChain DataStructure for Perl
* Bio/LiveSeq/ChainI:: Double linked chain data structure
* Bio/LiveSeq/DNA:: DNA object for LiveSeq
* Bio/LiveSeq/Exon:: Range abstract class for LiveSeq
* Bio/LiveSeq/Gene:: Range abstract class for LiveSeq
* Bio/LiveSeq/IO/BioPerl:: Loader for LiveSeq from EMBL entries with BioPerl
* Bio/LiveSeq/IO/Loader:: Parent Loader for LiveSeq
* Bio/LiveSeq/IO/SRS:: Loader for LiveSeq from EMBL entries with SRS
* Bio/LiveSeq/Intron:: Range abstract class for LiveSeq
* Bio/LiveSeq/Mutation:: Mutation event descriptor class
* Bio/LiveSeq/Mutator:: Package mutating LiveSequences
* Bio/LiveSeq/Prim_Transcript:: Prim_Transcript class for LiveSeq
* Bio/LiveSeq/Range:: Range abstract class for LiveSeq
* Bio/LiveSeq/Repeat_Region:: Repeat_Region class for LiveSeq
* Bio/LiveSeq/Repeat_Unit:: Repeat_Unit class for LiveSeq
* Bio/LiveSeq/SeqI:: Abstract sequence interface class for LiveSeq
* Bio/LiveSeq/Transcript:: Transcript class for LiveSeq
* Bio/LiveSeq/Translation:: Translation class for LiveSeq
* Bio/LocatableSeq:: A Sequence object with start/end points on it
* Bio/Location/AvWithinCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the average for WITHIN and the widest possible and reasonable range otherwise
* Bio/Location/CoordinatePolicyI:: Abstract interface for objects implementing a certain policy of computing integer-valued coordinates of a Location
* Bio/Location/Fuzzy:: Implementation of a Location on a Sequence which has unclear start and/or end locations
* Bio/Location/FuzzyLocationI:: Abstract interface of a Location on a Sequence which has unclear start/end location
* Bio/Location/NarrowestCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the narrowest possible and reasonable range
* Bio/Location/Simple:: Implementation of a Simple Location on a Sequence
* Bio/Location/Split:: Implementation of a Location on a Sequence which has multiple locations (start/end points)
* Bio/Location/SplitLocationI:: Abstract interface of a Location on a Sequence which has multiple locations (start/end points)
* Bio/Location/WidestCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the widest possible and reasonable range
* Bio/LocationI:: Abstract interface of a Location on a Sequence
* Bio/Parse:: The Bioperl ReadSeq interface
* Bio/PrimarySeq:: Bioperl lightweight Sequence Object
* Bio/PrimarySeqI:: Interface definition for a Bio::PrimarySeq
* Bio/Range:: Pure perl RangeI implementation
* Bio/RangeI:: Range interface
* Bio/Root/Err:: Exception class for Perl 5 objects
* Bio/Root/Global:: Global variables and utility functions
* Bio/Root/IO:: module providing several methods often needed when dealing with file IO
* Bio/Root/IOManager:: Input and output manager for Perl5 objects.
* Bio/Root/Object:: A core Perl 5 object.
* Bio/Root/RootI:: Abstract interface to root object code
* Bio/Root/Utilities:: General-purpose utility module
* Bio/Root/Vector:: Interface for managing linked lists of Perl5 objects.
* Bio/Root/Xref:: A generic cross-reference object.
* Bio/Search/Hit/Fasta:: Hit object specific for Fasta-generated hits
* Bio/Search/Hit/HitI:: Abstract interface for Hit objects
* Bio/Search/Processor:: DESCRIPTION of Object
* Bio/Search/Processor/Fasta:: Processor of Fasta-generated data streams
* Bio/Search/Processor/ProcessorI:: Abstract Interface for Processor Objects
* Bio/Search/Result/Fasta:: Result object for FASTA-generated data sources
* Bio/Search/Result/ResultI:: Abstract interface to Result objects
* Bio/SearchDist:: A perl wrapper around Sean Eddy's histogram object
* Bio/Seq:: Sequence object, with features
* Bio/Seq/LargePrimarySeq:: PrimarySeq object that stores sequence as files in the tempdir (as found by File::Temp) or the default method in Bio::Root::RootI
* Bio/Seq/LargeSeq:: SeqI compliant object that stores sequence as files in /tmp
* Bio/Seq/RichSeq:: Module implementing a sequence created from a rich sequence database entry
* Bio/Seq/RichSeqI:: RichSeq interface, mainly for database orientated sequences
* Bio/SeqAnalysisParserI:: Sequence analysis output parser interface
* Bio/SeqFeature/FeaturePair:: hold pair feature information e.g. blast hits
* Bio/SeqFeature/Gene/Exon:: a feature representing an exon
* Bio/SeqFeature/Gene/ExonI:: Interface for a feature representing an exon
* Bio/SeqFeature/Gene/GeneStructure:: A feature representing an arbitrarily            complex structure of a gene
* Bio/SeqFeature/Gene/GeneStructureI:: A feature representing an arbitrarily            complex structure of a gene
* Bio/SeqFeature/Gene/Transcript:: A feature representing a transcript
* Bio/SeqFeature/Gene/TranscriptI:: Interface for a feature representing a          transcript of exons, promoter(s), UTR, and a poly-adenylation site.
* Bio/SeqFeature/Generic:: Generic SeqFeature
* Bio/SeqFeature/Similarity:: A sequence feature based on similarity
* Bio/SeqFeature/SimilarityPair:: Sequence feature based on the similarity                   of two sequences.
* Bio/SeqFeatureI:: Abstract interface of a Sequence Feature
* Bio/SeqI:: Abstract Interface of Sequence (with features)
* Bio/SeqIO:: Handler for SeqIO Formats
* Bio/SeqIO/EMBL:: EMBL sequence input/output stream
* Bio/SeqIO/FTHelper:: Helper class for Embl/Genbank feature tables
* Bio/SeqIO/Fasta:: Fasta sequence input/output stream
* Bio/SeqIO/GCG:: Raw sequence input/output stream
* Bio/SeqIO/Handler:: Handler of the SeqIO classes for tieing to filehandles
* Bio/SeqIO/MultiFile:: Treating a set of files as a single input stream
* Bio/SeqIO/Raw:: Raw sequence input/output stream
* Bio/SeqIO/ace:: ace sequence input/output stream
* Bio/SeqIO/embl:: EMBL sequence input/output stream
* Bio/SeqIO/fasta:: fasta sequence input/output stream
* Bio/SeqIO/game:: Parses GAME XML 0.1 and higher into and out of Bio::Seq objects.
* Bio/SeqIO/gcg:: GCG sequence input/output stream
* Bio/SeqIO/genbank:: GenBank sequence input/output stream
* Bio/SeqIO/largefasta:: method i/o on very large fasta sequence files
* Bio/SeqIO/pir:: PIR sequence input/output stream
* Bio/SeqIO/raw:: raw sequence file input/output stream
* Bio/SeqIO/scf:: SCF sequence input/output stream
* Bio/SeqIO/swiss:: Swissprot sequence input/output stream
* Bio/SeqUtils:: Additional methods for PrimarySeq objects
* Bio/SimpleAlign:: Multiple alignments held as a set of sequences
* Bio/Species:: Generic species object
* Bio/Tk/GO_Browser:: MISSING SHORT DESCRIPTION
* Bio/Tk/HitDisplay:: Frame-based widget for displaying Fasta or Blast hits/HSPs with optional text annotation
* Bio/Tk/SeqCanvas:: MISSING SHORT DESCRIPTION
* Bio/Tools/AlignFactory:: Base object for alignment factories
* Bio/Tools/AnalysisResult:: Base class for analysis result objects and parsers
* Bio/Tools/BPbl2seq:: Lightweight BLAST parser for pair-wise sequence  alignment using the BLAST algorithm.
* Bio/Tools/BPlite:: Lightweight BLAST parser
* Bio/Tools/BPlite/HSP:: MISSING SHORT DESCRIPTION
* Bio/Tools/BPlite/Iteration:: object for parsing single iteration of a PSIBLAST report
* Bio/Tools/BPlite/Sbjct:: MISSING SHORT DESCRIPTION
* Bio/Tools/BPpsilite:: Lightweight BLAST parser for (iterated) psiblast reports
* Bio/Tools/Blast:: Bioperl BLAST sequence analysis object
* Bio/Tools/Blast/HSP:: Bioperl BLAST High-Scoring Segment Pair object
* Bio/Tools/Blast/HTML:: Bioperl Utility module for HTML formatting Blast reports
* Bio/Tools/Blast/Run/LocalBlast:: Bioperl module for running Blast analyses locally.
* Bio/Tools/Blast/Run/Webblast:: Bioperl module for running Blast analyses using a HTTP interface.
* Bio/Tools/Blast/Sbjct:: Bioperl BLAST "Hit" object
* Bio/Tools/CodonTable:: Bioperl codon table object
* Bio/Tools/ESTScan:: Results of one ESTScan run
* Bio/Tools/Fasta:: Bioperl Fasta utility object
* Bio/Tools/GFF:: A Bio::SeqAnalysisParserI compliant GFF format parser
* Bio/Tools/Genscan:: Results of one Genscan run
* Bio/Tools/HMMER/Domain:: One particular domain hit from HMMER
* Bio/Tools/HMMER/Results:: Object representing HMMER output results
* Bio/Tools/HMMER/Set:: Set of identical domains from HMMER matches
* Bio/Tools/IUPAC:: Generates unique Seq objects from an ambiguous Seq object
* Bio/Tools/MZEF:: Results of one MZEF run
* Bio/Tools/OddCodes:: Object holding alternative alphabet coding for  one protein sequence
* Bio/Tools/Prediction/Exon:: A predicted exon feature
* Bio/Tools/Prediction/Gene:: a predicted gene structure feature
* Bio/Tools/RestrictionEnzyme:: Bioperl object for a restriction endonuclease object.
* Bio/Tools/Run/Alignment/Clustalw:: Object for the calculation of a multiple sequence alignment from a set of unaligned sequences or alignments using the Clustalw program
* Bio/Tools/Run/Alignment/TCoffee:: Object for the calculation of a multiple sequence alignment from a set of unaligned sequences or alignments using the TCoffee program
* Bio/Tools/Run/StandAloneBlast:: Object for the local execution of the NCBI Blast program suite (blastall, blastpgp, bl2seq)
* Bio/Tools/SeqAnal:: Bioperl sequence analysis base class.
* Bio/Tools/SeqPattern:: Bioperl object for a sequence pattern or motif
* Bio/Tools/SeqStats:: Object holding statistics for one particular sequence
* Bio/Tools/SeqWords:: Object holding n-mer statistics for one sequence
* Bio/Tools/Sigcleave:: Bioperl object for sigcleave analysis
* Bio/Tools/Sim4/Exon:: A single exon determined by an alignment
* Bio/Tools/Sim4/Results:: Results of one Sim4 run
* Bio/Tools/WWW:: Bioperl manager for web resources related to biology.
* Bio/Tools/pSW:: pairwise Smith Waterman object
* Bio/UnivAln:: Bioperl alignment object
* Bio/Variation/AAChange:: Sequence change class for polypeptides
* Bio/Variation/AAReverseMutate:: point mutation and codon   information from single amino acid changes
* Bio/Variation/Allele:: Sequence object with allele-specific attributes
* Bio/Variation/DNAMutation:: DNA level mutation class
* Bio/Variation/IO:: Handler for sequence variation IO Formats
* Bio/Variation/IO/flat:: flat file sequence variation input/output stream
* Bio/Variation/IO/xml:: XML sequence variation input/output stream
* Bio/Variation/RNAChange:: Sequence change class for RNA level
* Bio/Variation/SeqDiff:: Container class for mutation/variant descriptions
* Bio/Variation/VariantI:: Sequence Change SeqFeature abstract class
* Bit/ShiftReg:: Bit Shift Registers with Rotate / Shift Operations
* Bit/Vector:: Efficient bit vector, set of integers and "big int" math library
* Bit/Vector/Overload:: Overloaded operators add-on for Bit::Vector
* Bleach:: For *really* clean programs
* BnP:: implements the automatic recovery mechanism of "Build'n'Play"
* Bone/Easy:: Perl module for generating pickup lines.
* Bone/Easy/Rules:: Default ruleset for Bone::Easy
* Boulder:: An API for hierarchical tag/value structures
* Boulder/Blast:: Parse and read BLAST files
* Boulder/Blast/NCBI:: Parse and read NCBI BLAST files
* Boulder/Blast/WU:: Parse and read WU-BLAST files
* Boulder/Genbank:: Fetch Genbank data records as parsed Boulder Stones
* Boulder/Medline:: Fetch Medline data records as parsed Boulder Stones
* Boulder/Omim:: Fetch Omim data records as parsed Boulder Stones
* Boulder/Store:: Simple persistent storage for Stone tag/value objects
* Boulder/Stream:: Read and write tag/value data from an input stream
* Boulder/Swissprot:: Fetch SwissProt data records as parsed Boulder Stones
* Boulder/Unigene:: Fetch Unigene data records as parsed Boulder Stones
* Boulder/XML:: XML format input/output for Boulder streams
* Bundle/ABH:: A bundle to install all Ask's favorite modules
* Bundle/AO/Base:: libraries needed for AO servlet engine
* Bundle/AO/Standard:: libraries needed by standard AO interceptors
* Bundle/Apache:: Install Apache mod_perl and related modules
* Bundle/Apache/ASP:: Install Apache::ASP and related modules
* Bundle/BioPerl:: A bundle to install external CPAN modules used by BioPerl
* Bundle/Bugzilla:: A bundle of the modules required for Bugzilla.
* Bundle/Bundle-Expect:: Everything that Expect.pm needs
* Bundle/CPAN:: A bundle to play with all the other modules on CPAN
* Bundle/Cisco/Conf:: A bundle to install the Cisco::Conf module.
* Bundle/DBD/CSV:: A bundle to install the DBD::CSV driver
* Bundle/HTML/EP:: A bundle to install the HTML::EP package
* Bundle/HTML/Mason:: A bundle to install the HTML::Mason package
* Bundle/Interchange:: A bundle of the modules nice to have for Interchange.
* Bundle/IspMailGate:: A bundle to install the IspMailGate email filter.
* Bundle/LWP:: A bundle to install all libwww-perl related modules
* Bundle/MP3:: A bundle to install all MP3-related modules
* Bundle/Mail/IspMailGate:: A bundle to install the IspMailGate
* Bundle/Minivend:: A nice to have modules for MiniVend
* Bundle/Msql:: A bundle to install Perl drivers for mSQL or MySQL
* Bundle/Mysql:: A bundle to install Perl drivers for mSQL or MySQL
* Bundle/Net/LDAP:: A bundle for Net::LDAP
* Bundle/OpenInteract:: Bundle to install all the pre-requisites for OpenInteract
* Bundle/ParallelUA:: CPAN Bundle for the LWP Parallel User Agent extension
* Bundle/PlRPC:: A bundle to install PlRPC-Server, Client and prerequisites.
* Bundle/SNMP/MIB/Compiler:: A bundle to install all SNMP::MIB::Compiler related modules
* Bundle/SPOPS:: Bundle to install all the pre-requisites for SPOPS
* Bundle/Search/InvertedIndex:: A bundle to install all Search::InvertedIndex related modules
* Bundle/Slash:: A bundle to install all modules used for Slash
* Bundle/Tie/DB_File/SplitHash:: A bundle to install all Tie::DB_File::SplitHash related modules
* Bundle/Tie/FileLRUCache:: A bundle to install all Tie::FileLRUCache related modules
* Bundle/Tk:: CPAN Bundle for Tk and its dependencies
* Bundle/WWW/Search:: A bundle to install basic WWW::Search modules and prerequisites
* Bundle/WWW/Search/ALL:: A bundle to install all WWW::Search modules and backends
* Bundle/Weather:: a collection of modules for processing weather products
* Bundle/Wizard:: A bundle to install all the application Wizard
* Bundle/Wizard/LDAP:: A bundle to install all the LDAP Wizard
* Bundle/XML:: A bundle to install all XML-related modules
* Bundle/Xmms:: Bundle for xmms remote control shell
* Bundle/libnet:: A bundle to install all libnet related modules
* Bundle/pRPC-modules:: modules - A bundle to install pRPC-modules and prerequisites
* Business/CSI:: MISSING SHORT DESCRIPTION
* Business/Cashcow:: Perl wrapper for Cascow, a lib for making Dankort payment.
* Business/FedEx:: Win32 API Extension for FedEx ShipAPI
* Business/FedEx/Constants:: Constants used by Business::FedEx::ShipRequest;
* Business/FedEx/ShipAPI:: Interface to the FedEx API libraries (Win32 ONLY!!)
* Business/FedEx/ShipRequest:: Shipping/Tracking Interface to FedEx
* Business/ISBN:: work with International Standard Book Numbers
* Business/ISSN:: Perl extension for International Standard Serial Numbers
* Business/OnlinePayment:: Perl extension for online payment processing
* Business/OnlinePayment/AuthorizeNet:: AuthorizeNet backend for Business::OnlinePayment
* Business/OnlinePayment/Cardstream:: Cardstream Plugin for Business::OnlinePayment
* Business/UPC:: Perl extension for manipulating Universal Product Codes
* Business/UPS:: A UPS Interface Module
* Business/US_Amort:: class encapsulating US-style amortization
* ByteCache:: byte-compile modules when needed
* ByteLoader:: load byte compiled perl code
* C/DynaLib:: Perl interface to C compiled code.
* C/DynaLib/Struct:: Tool for handling the C `struct' data type
* C/Scan:: scan C language files for easily recognized constructs.
* CArray:: External C Arrays for Perl (Alpha)
* CDB_File:: Perl extension for access to cdb databases
* CDDB:: a high-level interface to the Internet Compact Disc Database
* CDDB_get:: Read the CDDB entry for an audio CD in your drive
* CFITSIO:: Perl extension for using the CFITSIO library
* CFITSIO:: All CFITSIO routines, with the exception of `fits_iterate_data()' and `fits_open_memfile()', are available in both long and short name forms (e.g., `fits_read_key' <=> `ffgky'), as well as all constants defined in the `fitsio.h' header file. This raises the possibility of your name space being invaded by nearly 1000 function and constant names.
* CGI:: Simple Common Gateway Interface Class
* CGI3:: Simple Common Gateway Interface Class
* CGI3/Fast:: CGI3 Interface for Fast CGI3
* CGI3/Pretty:: module to produce nicely formatted HTML code
* CGI3/Push:: Simple Interface to Server Push
* CGI/ASP/Lite:: a Module for ASP emulation
* CGI/Apache:: Backward compatibility module for CGI.pm
* CGI/Application:: Framework for building reusable web-applications
* CGI/ArgChecker:: An extensible CGI parameter validation module (allowing commonly used checks on parameters to be called more concisely and consistently).
* CGI/Authent:: request a HTTP authentification under specified conditions
* CGI/Base:: HTTP Daemon Common Gateway Interface (CGI) Base Class
* CGI/BasePlus:: HTTP CGI Base Class with Handling of Multipart Forms
* CGI/CIPP:: Use CIPP embedded HTML Pages in a CGI environment
* CGI/Cache:: Perl extension to help cache output of time-intensive CGI scripts so that subsequent visits to such scripts will not cost as much time.
* CGI/Carp:: CGI routines for writing to the HTTPD (or other) error log
* CGI/ClientError:: send minimalistic error messages to the browser
* CGI/ConvertParam:: Decorator class which adds several hook to CGI::param().
* CGI/Cookie:: Interface to Netscape Cookies
* CGI/Debug:: module for CGI programs debugging
* CGI/EncryptForm:: Implement trusted stateful CGI Form Data using cryptography.
* CGI/Enurl:: module for URL-encoding strings and hashes
* CGI/Explorer:: A class to manage a tree of data, for use in CGI scripts
* CGI/FMBundle:: A bundle to install everything required for FormMagick
* CGI/Fast:: CGI Interface for Fast CGI
* CGI/FastTemplate:: Perl extension for managing templates, and performing variable interpolation.
* CGI/Form:: Build Smart HTML Forms on Top of the CGI:: Modules
* CGI/FormMagick:: easily create CGI form-based applications
* CGI/FormMagick/FAQ:: Frequently asked questions about FormMagick
* CGI/FormMagick/L10N:: MISSING SHORT DESCRIPTION
* CGI/FormMagick/TagMaker:: Perl module that can create any HTML tags, as well as groups of or just parts of them, and complete html headers or footers.
* CGI/FormMagick/Validator:: MISSING SHORT DESCRIPTION
* CGI/Formalware:: Convert an XML file into a suite of CGI forms.
* CGI/Imagemap:: imagemap behavior for CGI programs
* CGI/Lite:: Perl module to process and decode WWW forms and cookies.
* CGI/Log:: Perl extension for centralized logging of debug, error, status and success messages from scripts or other modules.
* CGI/LogCarp:: Error, log and debug streams, httpd style format
* CGI/MiniSvr:: Adds to CGI::Base the ability for a CGI script to become a mini http server.
* CGI/Minimal:: A lightweight CGI form processing pacakge
* CGI/MozSniff:: Sniff out various versions of browsers claming to be "Mozilla".
* CGI/Out:: buffer output when building CGI programs
* CGI/PathInfo:: A lightweight CGI processing package for using PATH_INFO like GET method form parameters
* CGI/Persistent:: Transparent state persistence for CGI applications.
* CGI/Pretty:: module to produce nicely formatted HTML code
* CGI/PrintWrapper:: CGI methods output to a print handle
* CGI/Push:: Simple Interface to Server Push
* CGI/QuickForm:: Perl module to provide quick CGI forms.
* CGI/Request:: Parse client request via a CGI interface
* CGI/Response:: Respond to CGI requests
* CGI/SSI:: Use SSI from CGI scripts
* CGI/SSI_Parser:: Implement SSI for Perl CGI
* CGI/Screen:: Perl extension for easy creation of multi screen CGI scripts
* CGI/State:: Converts CGI parameters into a multi-dimensional hash
* CGI/Switch:: Backward compatibility module for defunct CGI::Switch
* CGI/Util:: Internal utilities used by CGI module
* CGI/Validate:: Advanced CGI form parser and type validation
* CGI/WML:: Subclass LDS's "CGI.pm" for WML output and WML methods
* CGI/WeT:: Suite of modules to themeify a website
* CGI/WeT/Chooser:: Cookie setter for theme selection
* CGI/WeT/Engine:: Theme engine for the CGI::WeT package
* CGI/WeT/Modules/Basic:: Basic rendering engine extensions
* CGI/WeT/Modules/Calendar:: Extensions to engine to allow calendar management
* CGI/WeT/Modules/Documentation:: Extensions to engine to allow documentation management
* CGI/WeT/Modules/News:: Extensions to engine to allow article management
* CGI/WeT/Theme:: Theme loader for the CGI::WeT package
* CGI/WeT/Theme/Loader/HTML:: Module to load HTML theme definitions
* CGI/WeT/Theme/Loader/WeT:: Module to load pre-0.6 themes
* CGI/WeT/User:: User database interface for CGI::WeT
* CGI/WeT/User/DBI/LDAP:: interface between CGI::WeT::User and Net::LDAP
* CGI/Wrap:: buffer output when building CGI programs
* CGI/XML:: Perl extension for converting CGI.pm variables to/from XML
* CGI/XMLForm:: Extension of CGI.pm which reads/generates formated XML.
* CGI_Lite:: Perl module to process and decode WWW forms and cookies.
* CIDR/Assign:: Manage assignments out of a group of CIDR blocks
* CIPP:: Powerful preprocessor for embedding Perl and SQL in HTML
* CIPP/Manual:: Reference Manual
* CIsam:: Perl Object Oriented extension for ISAM files
* CONFIG/Hash:: Class to read 2-column files into a hash
* CONFIG/Plain:: Base class for cached file reading
* CPAN:: query, download and build perl modules from CPAN sites
* CPAN/Admin:: A CPAN Shell for CPAN admins
* CPAN/Checksums:: Write a CHECKSUMS file for a directory as on CPAN
* CPAN/FirstTime:: Utility for CPAN::Config file Initialization
* CPAN/Nox:: Wrapper around CPAN.pm without using any XS module
* CPAN/Site:: CPAN.pm subclass for adding site local modules
* CPAN/WAIT:: adds commands to search a WAIT4CPAN server to the CPAN `shell()'
* CSS/Parser:: parser for CSS-style syntax
* Cache/Mmap:: Shared data cache using memory mapped files
* Calendar/CSA:: Perl extension to interface with CDE Calendar Manager
* Callback:: object interface for function callbacks
* Carp:: warn of errors (from perspective of caller)
* Carp/Assert:: executable comments
* Carp/Heavy:: Carp guts
* Carp/Notify:: Loudly complain in lots of places when things break badly
* CfgTie/CfgArgs:: Configuration module for parsing commandline arguments
* CfgTie/Cfgfile:: An object to help interface to configuration files
* CfgTie/TieAliases:: an associative array of mail aliases to targets
* CfgTie/TieGeneric:: A generic hash that automatically binds others
* CfgTie/TieGroup:: an associative array of group names and ids to information
* CfgTie/TieHost:: This accesses the hosts tables.
* CfgTie/TieMTab:: an associative array of mount entries
* CfgTie/TieNamed:: A tool to help configure the name daemon (BIND DNS server)
* CfgTie/TieNet:: A module to tie in the net database
* CfgTie/TiePh:: a ph phonebook server configuration tool
* CfgTie/TieProto:: Ties the protocol number file to a  PERL hash
* CfgTie/TieRCService:: A module to manage Unix services
* CfgTie/TieRealm:: Ties configuration variables to various HTTP servers
* CfgTie/TieRsrc:: an associative array of resources and their usage limits
* CfgTie/TieServ:: A HASH tie that allows access the service port database
* CfgTie/TieShadow:: an associative array of user names to password information
* CfgTie/TieUser:: an associative array of user names and ids to information
* CfgTie/filever:: a simple module for substituting newer versions into a file system.
* Chart:: a series of charting modules
* Chart/Graph:: Perl extension for a front-end to gnuplot and XRT.
* Chart/PNGgraph:: Graph Plotting Module (deprecated)
* Chart/PNGgraph/colour:: Colour manipulation routines for use with Chart::PNGgraph
* Chart/Plot:: Plot two dimensional data in an image. Version 0.10.
* Chart/ThreeD/Pie:: 3D Piechart
* Chart/XMGR:: object for displaying data via XMGR
* Chatbot/Eliza:: A clone of the classic Eliza program
* Chemistry/Elements:: Perl extension for working with Chemical Elements
* Chess/Pgn:: Perl extension for manipulation of chess PGN format. PGN is for  Portable Game Notation and follow the *Portable Game Notation Specification and Implementation Guide* revised 1994.03.12. You can find it at `http:' in this node.
* Circa/Indexer:: provide functions to administrate Circa,  a www search engine running with Mysql
* Circa/Search:: provide functions to perform search on Circa, a www search engine running with Mysql
* Cisco/Conf:: Perl module for configuring Cisco routers via TFTP
* Cisco/Conf/Install:: Create a configuration file for the Cisco::Conf module
* Class/Accessor:: Automated accessor generation
* Class/Accessor/Fast:: Faster, but less expandable, accessors
* Class/Autouse:: Defer loading ( 'use'ing ) of a class until run time
* Class/BlackHole:: base class to treat unhandled method calls as no-ops
* Class/Class:: Adds data members to Perl packages
* Class/Classgen/Attribute:: generates all get- and set-methods for new classes created by classgen.
* Class/Classgen/Classgen:: script that generates a class-module from a control file.
* Class/Classgen/Comments:: To keep some nasty errors from users of classgen.
* Class/Classgen/New:: Creates the new() method for classes generated by classgen.
* Class/Classgen/Section:: Identifies the diffferent sections from classgens control file.
* Class/Classless:: framework for classless OOP
* Class/Contract:: Design-by-Contract OO in Perl.
* Class/Contract/Production:: Design-by-Contract OO in Perl.
* Class/DBI:: Simple Object Persistance
* Class/Data/Inheritable:: Inheritable, overridable class data
* Class/Delegate:: easy-to-use implementation of object delegation.
* Class/Fields:: Inspect the fields of a class.
* Class/Fields/Attribs:: Attribute constants for use with data members
* Class/Fields/Fuxor:: Low level manipuation of object data members
* Class/Fields/Inherit:: Inheritance of %FIELDS
* Class/Generate:: Generate Perl class hierarchies
* Class/Handler:: Create Apache-like pseudoclass event handlers
* Class/ISA:: report the search path for a class's ISA tree
* Class/Iter:: Iterator superclass for Class::Visitor
* Class/MethodMaker:: a module for creating generic methods
* Class/Multimethods:: Support multimethods and function overloading in Perl
* Class/Mutator:: MISSING SHORT DESCRIPTION
* Class/NamedParms:: A lightweight named parameter handling system.
* Class/ObjectTemplate:: MISSING SHORT DESCRIPTION
* Class/ObjectTemplate/DB:: Perl extension for an optimized template builder base class with lookup capability.
* Class/ParamParser:: Provides complex parameter list parsing.
* Class/ParmList:: A collection of routines for processing named parameter lists for method calls.
* Class/Phrasebook:: Implements the Phrasebook pattern
* Class/Phrasebook/SQL:: Implements the Phrasebook pattern for SQL statements.
* Class/SelfMethods:: a Module for supporting instance-defined methods
* Class/Singleton:: Implementation of a "Singleton" class
* Class/Struct:: declare struct-like datatypes as Perl classes
* Class/Struct/FIELDS:: Combine Class::Struct, base and fields
* Class/Tom:: The Transportable Object Model for Perl
* Class/Translucent:: A base class for translucency
* Class/Tree:: Build and print hierarchical information such as directory trees and C++ classes.
* Class/Virtual:: Base class for virtual base classes.
* Class/Virtually/Abstract:: Compile-time enforcement of Class::Virtual
* Class/Visitor:: Visitor and Iterator extensions to Class::Template
* Class/WhiteHole:: base class to treat unhandled method calls as errors
* ClearCase/Argv:: ClearCase-specific subclass of Argv
* ClearCase/ClearPrompt:: Handle clearprompt in a portable, convenient way
* ClearCase/SyncTree:: Synchronize a tree of files with a tree of elements
* ClearCase/Wrapper:: general-purpose wrapper for *cleartool*
* ClearCase/Wrapper/Site:: site-specific overrides for ClearCase::Wrapper
* Clone:: Perl extension for a recurrsive copy of nested objects.
* CodeBase:: Perl module for accessing dBASE files
* Compress/Bzip2:: Interface to Bzip2 compression library
* Compress/LZF:: extremely leight-weight Lev-Zimpel-Free compression
* Compress/LZO:: Interface to LZO compression library
* Compress/LZV1:: extremely leight-weight Lev-Zimpel-Vogt compression
* Compress/Zlib:: Interface to zlib compression library
* Config:: access Perl configuration information
* Config/Access:: Perform simple access control
* Config/FreeForm:: Provide in-memory configuration data
* Config/General:: Generic Config Module
* Config/General:: If you need multiple blocks of the same name, then you have to name every block. This works much like apache config. If the module finds a named block, it will create a hashref with the left part of the named block as the key containing one or more hashrefs with the right part of the block as key containing everything inside the block(which may again be nested!). As examples says more than words:
* Config/General/Extended:: Extended access to Config files
* Config/Ini:: Perl interface to MS-Windows registry files, Windows .ini     and Unreal style .ini files.
* Config/IniFiles:: A module for reading .ini-style configuration files.
* Config/Properties:: read Java-style properties files
* Config/User:: API for locating user information regardless of OS
* ConfigReader/Simple:: Simple configuration file parser
* Conjury:: Introduction to Perl Conjury
* Conjury/C:: Perl Conjury with C/C++ compilers, linkers and archivers
* Conjury/C/GNU:: Perl Conjury with the GNU C/C++ tools
* Conjury/C/Sun:: Perl Conjury with the Sun Workshop C/C++ tools
* Conjury/Core:: the foundation of Perl Conjury
* Conjury/Core/Prototype:: function prototype checking in Conjury
* Continuus:: Perl interface to Continuus CM
* ControlX10/CM11:: Perl extension for X10 'ActiveHome' Controller
* ControlX10/CM17:: Perl extension for 'FireCracker' RF Transmitter
* Convert/ASN1:: ASN.1 Encode/Decode library
* Convert/BER:: ASN.1 Basic Encoding Rules
* Convert/Base32:: Encoding and decoding of base32 strings
* Convert/BinHex:: extract data from Macintosh BinHex files
* Convert/Context:: an Attributed Text data type
* Convert/Cyrillic:: Routines for converting from one cyrillic charset to another.
* Convert/EBCDIC:: Perl module for string conversion between EBCDIC and ASCII
* Convert/Ethiopic:: Perl extension for the Ethiopic information processing library.
* Convert/Ethiopic/Cstocs:: conversions of charset encodings for Ethiopic script
* Convert/Ethiopic/System:: conversions of charset encodings for Ethiopic script
* Convert/Ethiopic/Time:: conversions of calendar systems to/from Ethiopic and Gregorian.
* Convert/GeekCode:: Convert and generate geek code sequences.
* Convert/IBM390:: functions for manipulating mainframe data
* Convert/IBM390p:: OBSOLETE
* Convert/Morse:: Package to convert between ASCII text and MORSE alphabet.
* Convert/RACE:: Conversion between Unicode and RACE
* Convert/Recode:: make mapping functions between character sets
* Convert/Scalar:: convert between different representations of perl scalars
* Convert/SciEng:: Convert 'numbers' with scientific postfixes
* Convert/TNEF:: Perl module to read TNEF files
* Convert/Translit:: Perl module for string conversion among numerous character sets
* Convert/UU:: Perl module for uuencode and uudecode
* Convert/UUlib:: Perl interface to the uulib library (a.k.a. uudeview/uuenview).
* Convert/Units/Base:: base object for performing unit conversions
* Coy::     Coy (like Carp only prettier)
* Crypt/Beowulf:: Beowulf encryption
* Crypt/Blowfish:: Perl Blowfish encryption module
* Crypt/Blowfish_PP:: Blowfish encryption algorithm implemented purely in Perl
* Crypt/CBC:: Encrypt Data with Cipher Block Chaining Mode
* Crypt/CBCeasy:: Easy things make really easy with Crypt::CBC
* Crypt/CipherSaber:: Perl module implementing CipherSaber encryption.
* Crypt/DES:: Perl interface to DES block cipher
* Crypt/DES_PP:: Perl extension for DES encryption
* Crypt/ECB:: Encrypt Data using ECB Mode
* Crypt/GPG:: A module for accessing GnuPG functionality.
* Crypt/HCE_MD5:: Perl extension implementing one way hash chaining encryption using MD5
* Crypt/HCE_SHA:: Perl extension implementing one way hash chaining encryption using SHA
* Crypt/IDEA:: Perl interface to IDEA block cipher
* Crypt/PGP2:: module for programmatic PGP 2.x on Unix
* Crypt/PGP5:: An Object Oriented Interface to PGP5.
* Crypt/Passwd:: Perl wrapper around the UFC Crypt
* Crypt/PasswdMD5:: Provides interoperable MD5-based crypt() function
* Crypt/Primes:: Provable Prime Number Generator suitable for Cryptographic Applications.
* Crypt/RC4:: Perl implementation of the RC4 encryption algorithm
* Crypt/RIPEMD160:: Perl extension for the RIPEMD-160 Hash function
* Crypt/RIPEMD160/MAC:: Perl extension for RIPEMD-160 MAC function
* Crypt/RSA:: RSA public-key cryptosystem.
* Crypt/RSA/DataFormat:: Data creation, conversion and reporting primitives.
* Crypt/RSA/Debug:: Debug routine for Crypt::RSA.
* Crypt/RSA/EME/OAEP:: Plaintext-aware encryption with RSA.
* Crypt/RSA/Errorhandler:: Parent class for Crypt::RSA::*, provides error handling capabilities.
* Crypt/RSA/Key:: RSA Key Pair Generator.
* Crypt/RSA/Key/Private:: RSA Private Key Management.
* Crypt/RSA/Key/Public:: RSA Public Key Management.
* Crypt/RSA/Primitives:: RSA encryption, decryption, signature and verification primitives.
* Crypt/RSA/SSA/PSS:: Probablistic Signature Scheme based on RSA.
* Crypt/RandPasswd:: random password generator based on FIPS-181
* Crypt/Random:: Cryptographically Secure, True Random Number Generator.
* Crypt/Rijndael:: Crypt::CBC compliant Rijndael encryption module
* Crypt/Rot13:: a rotational deviator
* Crypt/SSLeay:: OpenSSL glue that provides LWP https support
* Crypt/Solitaire:: Solitaire encryption
* Crypt/TripleDES:: Triple DES encyption.
* Crypt/Twofish2:: Crypt::CBC compliant Twofish encryption module
* Crypt/UnixCrypt:: perl-only implementation of the crypt function.
* Crypt/xDBM_File:: encrypt almost any kind of dbm file
* Curses:: terminal screen handling and optimization
* Curses/Forms:: Curses-based form handling for Curses::Widgets
* Curses/Widgets:: Curses-based widgets and functions
* Cwd:: get pathname of current working directory
* Cz/Cstocs:: conversions of charset encodings for the Czech language
* Cz/Sort:: Czech sort
* Cz/Time:: Routines for printing dates in Czech
* D/oh:: Debug module
* D/oh/Year:: Catch stupid mistakes when mucking with years, like Y2K bugs
* DB:: programmatic interface to the Perl debugging API (draft, subject to change)
* DBD/CSV:: DBI driver for CSV files
* DBD/File:: Base class for writing DBI drivers for plain files
* DBD/JDBC:: JDBC proxy driver for the DBI module
* DBD/Ovrimos:: DBI Driver for Ovrimos (formerly Altera SQL Server)
* DBD/Recall:: Database fault tolerance through replication.
* DBD/XBase:: DBI driver for XBase compatible database files
* DBD/mSQL:: mSQL and mysql drivers for the Perl5 Database Interface (DBI)
* DBD/mysql:: mSQL and mysql drivers for the Perl5 Database Interface (DBI)
* DBI/FAQ:: The Frequently Asked Questions for the Perl5 Database Interface
* DBIx/Abstract:: DBI SQL abstraction
* DBIx/AnyDBD:: DBD independant class
* DBIx/Broker:: a little layer somewhere between top-level code and raw DBI calls
* DBIx/CGITables:: Easy DB access from a CGI
* DBIx/CGITables/MakeTemplates:: creates templates for CGITables.
* DBIx/Copy:: For copying database content from one db to another
* DBIx/DBSchema:: Database-independent schema objects
* DBIx/DBSchema/ColGroup:: Column group objects
* DBIx/DBSchema/ColGroup/Index:: Index column group object
* DBIx/DBSchema/ColGroup/Unique:: Unique column group object
* DBIx/DBSchema/Column:: Column objects
* DBIx/DBSchema/DBD:: DBIx::DBSchema Driver Writer's Guide and Base Class
* DBIx/DBSchema/DBD/Pg:: PostgreSQL native driver for DBIx::DBSchema
* DBIx/DBSchema/DBD/mysql:: MySQL native driver for DBIx::DBSchema
* DBIx/DBSchema/Table:: Table objects
* DBIx/DataSource:: Database-independant create and drop functions
* DBIx/DataSource/Driver:: Driver Writer's Guide and base class
* DBIx/DataSource/Pg:: PostgreSQL driver for DBIx::DataSource
* DBIx/DataSource/mysql:: MySQL driver for DBIx::DataSource
* DBIx/Formatter:: Module to perform report generation via query DBI
* DBIx/FullTextSearch:: Indexing documents with MySQL as storage
* DBIx/FullTextSearch/StopList:: Stopwords for DBIx::FullTextSearch
* DBIx/HTMLView:: For handling DBI relation databases and web interfaces
* DBIx/HTMLView/Bool:: A boolean field
* DBIx/HTMLView/CGIGermanListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIQueryListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIReqEdit:: A simple CGI editor for single posts
* DBIx/HTMLView/CGIReqView:: A Requester viewer/editor for DBI databases
* DBIx/HTMLView/CGIView:: Common CGI functions for the viewers
* DBIx/HTMLView/DB:: A generic DBI databse with SQL interface
* DBIx/HTMLView/Date:: A simple date filed
* DBIx/HTMLView/Field:: Base class for field classes
* DBIx/HTMLView/Fld:: Base class for field and relation classes
* DBIx/HTMLView/Fmt:: Basic parser for fmt strings and files
* DBIx/HTMLView/Id:: A index field used to identify posts
* DBIx/HTMLView/Int:: An integer field
* DBIx/HTMLView/N2N:: A many to many relation between two tabels
* DBIx/HTMLView/N2One:: A many to one relation between two tabels
* DBIx/HTMLView/Post:: A post in a DBI database
* DBIx/HTMLView/PostSet:: A set posts as in a search result for example
* DBIx/HTMLView/Relation:: A relation base class
* DBIx/HTMLView/Selection:: A kriteria used to select posts
* DBIx/HTMLView/Str:: A single line string filed
* DBIx/HTMLView/Table:: A table within a generic DBI databse
* DBIx/HTMLView/Text:: A multi line string filed
* DBIx/HTMLView/Tree::   DBIx::HTMLView::Tree
* DBIx/HTMLView/msqlDB:: interface for msql databases through DBI
* DBIx/HTMLView/mysqlDB:: interface for mysql databases through DBI
* DBIx/HTMLinterface:: Class for creating a CGI interface to a database
* DBIx/KwIndex:: create and maintain keyword indices in DBI tables
* DBIx/Lookup/Field:: Create a lookup hash from a database table
* DBIx/MSSQLReporter:: An module to connect Perl to MS SQL Server and MS Data Engine
* DBIx/OracleSequence:: interface to Oracle sequences via DBI.
* DBIx/Password:: Allows you to create a global password file for DB passwords
* DBIx/Profile:: DBI query profiler   Version 1.0
* DBIx/Renderer:: talk SQL by using Perl data structures
* DBIx/Renderer/Base:: base class for DBI renderers
* DBIx/Renderer/Constants:: constants for the DBI rendering framework
* DBIx/Renderer/Postgres:: DBI renderer for the Postgres SQL variant
* DBIx/Schema:: An SQL Abstration layer for working with whole schemas
* DBIx/SearchBuilder:: Perl extension for easy SQL SELECT Statement generation
* DBIx/SearchBuilder/Handle:: Perl extension which is a generic DBI handle
* DBIx/SearchBuilder/Handle/Oracle:: an oracle specific Handle object
* DBIx/SearchBuilder/Handle/Pg:: MISSING SHORT DESCRIPTION
* DBIx/SearchBuilder/Handle/mysql:: a mysql specific Handle object
* DBIx/SearchBuilder/Record:: Perl extension for subclassing, so you can deal with a Record
* DBIx/SearchProfiles:: Access to SQL database via template query.
* DBIx/Table:: Class used to represent DBI database tables.
* DBIx/TextIndex:: Perl extension for full-text searching in SQL databases
* DBIx/Tree:: Perl module for generating a tree from a self-referential table
* DBIx/UserDB:: Module to manage a user database using DBIx::SearchProfiles
* DBIx/XMLMessage:: XML Message exchange between DBI data sources
* DBIx/XML_RDB:: Perl extension for creating XML from existing DBI datasources
* DBM/DBass:: DBM with associative arrays, file locking and XML records
* DBO:: Database Objects
* DBZ_File:: Tied access to dbz files
* DB_File:: Perl5 access to Berkeley DB version 1.x
* DB_File/Lock:: Locking with flock wrapper for DB_File
* DBass:: DBM with associative arrays, file locking and XML records
* DCE/ACL:: Perl interface to DCE ACL client API
* DCE/DFS:: Perl module interface to DFS internals
* DCE/Login:: Perl extension for interfacing to the DCE login API
* DCE/Registry:: Perl interface to DCE Registry API
* DCE/Status:: Make sense of DCE status codes
* DCE/UUID:: Misc UUID functions
* DCE/aclbase:: Constants from dce/aclbase.h
* DCE/attrbase:: Perl extension for blah blah blah
* DCE/login_base:: Constants from sec_login_*.h
* DCE/rgybase:: Constants from dce/rgybase.h
* DCE/rpcbase:: Perl extension for blah blah blah
* DDL/Oracle:: a DDL generator for Oracle databases
* DFA/ATN:: An augmented transition network object.
* DFA/Command:: A Discrete Finite Automata command processor.
* DFA/Kleene:: Kleene's Algorithm for Deterministic Finite Automata
* DFA/Simple:: A PERL module to implement simple Discrete Finite Automata
* DNS/ZoneFile:: Object-Oriented Management of a Master File
* DNS/ZoneFile/Record:: single DNS record in a zone database
* Data/Address/Standardize:: Standardize U.S. postal addresses.
* Data/Compare:: compare perl data structures
* Data/DRef:: Delimited-key access to complex data structures
* Data/Direct:: Perl module to emulate seqeuntial access to SQL tables.
* Data/Dump:: Pretty printing of data structures
* Data/DumpXML:: Dump arbitrary data structures as XML
* Data/DumpXML/Parser:: Restore data dumped by Data::DumpXML
* Data/Dumper:: stringified perl data structures, suitable for both printing and eval
* Data/FixedFormat:: converter between fixed-fields and hashes
* Data/Flow:: Perl extension for simple-minded recipe-controlled build of data.
* Data/Grove:: support for deeply nested structures
* Data/Grove/Parent:: provide parent properties to Data::Grove objects
* Data/Grove/Visitor:: add visitor/callback methods to Data::Grove objects
* Data/HexDump:: Hexadecial Dumper
* Data/Hexdumper:: A module for displaying binary data in a readable format
* Data/JavaScript:: Perl extension for dumping structures into JavaScript code
* Data/JavaScript/LiteObject:: Perl package to provide lightweight data dumping
* Data/Locations:: magic insertion points in your data
* Data/MagicTie:: This module implements a proxy like Perl TIE interface over local and remote Berkeley DB files containing BLOBs
* Data/MagicTie/BerkeleyDB:: This module is used by Data::MagicTie(3) to get a tied over SleepyCat BerkeleyDB files.
* Data/MagicTie/DBMS:: This module is used by Data::MagicTie(3) to get a tied remote interface over TCP/IP using DBMS(3) and DB_File(3)
* Data/MagicTie/DB_File:: This module is used by Data::MagicTie(3) to get a tied tied DB_File with locking support.
* Data/PropertyList:: Convert arbitrary objects to/from strings
* Data/Random:: Perl module to generate random data
* Data/Random/WordList:: Perl module to get random words from a word list
* Data/Reporter:: Report generator.
* Data/Reporter/Datasource:: Abstract base class for all the Reporter source data types
* Data/Reporter/Filesource:: Reporter handler for plain text information
* Data/Reporter/Orasource:: Reporter Handler for oracle connection
* Data/Reporter/RepFormat:: Allows text formatting with simple instructions, mapping to a user-defined grid (the sheet).
* Data/Reporter/Sybsource:: Reporter Handler for sybase connection
* Data/Reporter/VisSection:: handler to manipulate sections in VisRep.pl.
* Data/ShowTable:: routines to display tabular data in several formats.
* Data/Table:: Data type related to database tables, spreadsheets, CSV/TSV files, HTML table displays, etc.
* Data/Walker:: A tool for navigating through Perl data structures
* Data/Xtab:: Pivot (cross-tabulate) a table of data.
* Date/Business:: fast calendar and business date calculations
* Date/Calc:: Gregorian calendar date calculations
* Date/Christmas:: Calculates the day of the week Christmas falls upon given the year.
* Date/Convert:: Convert Between any two Calendrical Formats
* Date/Discordian:: Calculate the Discordian date of a particular day
* Date/Easter:: Calculates Easter for any given year
* Date/Format:: Date formating subroutines
* Date/Horoscope:: Date operations based on the horoscope calendar
* Date/ISO:: Perl extension for converting dates between ISO and Gregorian formats.
* Date/Interval:: handling of temporal intervals based on Date::Manip
* Date/Lima:: MISSING SHORT DESCRIPTION
* Date/Manip:: date manipulation routines
* Date/Maya:: Translate between Julian days and Maya days.
* Date/Ordinal:: Conversion of dates to ordinal numbers and vice versa
* Date/Parse:: Parse date strings into time values
* Date/Tolkien/Shire:: Date::Tolkien::Shire.pm
* DateTime/Precise:: Perform common time and date operations with additional GPS operations
* Db/Ctree:: Perl extension to interface with Faircom's CTREE product
* Db/DFC:: Perl's Object-oriented interface to Documentum's DFC
* DbFramework/Attribute:: Attribute class
* DbFramework/Catalog:: Catalog class
* DbFramework/DataModel:: Data Model class
* DbFramework/DataModelObject:: DataModelObject class
* DbFramework/DataType:: Data type class
* DbFramework/DataType/ANSII:: ANSII data type class
* DbFramework/DataType/Mysql:: Mysql data type class
* DbFramework/DefinitionObject:: DefinitionObject class
* DbFramework/ForeignKey:: Foreign Key class
* DbFramework/Key:: Key class
* DbFramework/Persistent:: Persistent Perl object base class
* DbFramework/PrimaryKey:: Primary key class
* DbFramework/Table:: Table class
* DbFramework/Template:: Fill template with database values
* DbFramework/Util:: DbFramework utility functions
* Decision/Markov:: Markov models for decision analysis
* Decision/Markov/State:: Markov state object for Decision::Markov
* DelayLine:: Simple time-delay data stucture
* Des:: Des extension module for Perl
* Devel/Carp:: warn of errors (from perspective of caller)
* Devel/CoreStack:: try to generate a stack dump from a core file
* Devel/Coverage:: Perl module to perform coverage analysis
* Devel/DProf:: a Perl code profiler
* Devel/DebugInit:: Perl extension for creating a debugger initialization files from C header file macros
* Devel/DebugInit/GDB:: Perl extension for creating .gdbinit file from C header file macros
* Devel/FindAmpersand:: Report exactly where Perl sawampersand
* Devel/Leak:: Utility for looking for perl objects that are not reclaimed.
* Devel/Memo:: memoize function calls
* Devel/Modlist:: Perl extension to collect module use information
* Devel/OpProf:: Profile the internals of a Perl program
* Devel/Peek:: A data debugging tool for the XS programmer
* Devel/PreProcessor:: Module inlining and other Perl source manipulations
* Devel/SawAmpersand:: Perl extension querying sawampersand variable
* Devel/SelfStubber:: generate stubs for a SelfLoading module
* Devel/SmallProf:: per-line Perl profiler
* Devel/StackTrace:: Stack trace and stack trace frame objects
* Devel/Symdump:: dump symbol names or the symbol table
* Devel/Timer:: Track and report execution time for parts of code
* Devel/WeakRef:: weak references (not reference-counted)
* Devel/ptkdb:: Perl debugger using a Tk GUI
* Device/ISDN/OCLM:: A perl module to control the 3com OfficeConnect LanModem
* Device/ISDN/OCLM/CurrentStatistics:: OCLM current call statistics
* Device/ISDN/OCLM/ISDNStatistics:: OCLM ISDN statistics
* Device/ISDN/OCLM/Last10Statistics:: OCLM Last10 call statistics
* Device/ISDN/OCLM/LastStatistics:: OCLM last call statistics
* Device/ISDN/OCLM/ManualStatistics:: OCLM manual call statistics
* Device/ISDN/OCLM/SPStatistics:: OCLM service provider statistics
* Device/ISDN/OCLM/Statistics:: OCLM statistics superclass
* Device/ISDN/OCLM/SystemStatistics:: OCLM system statistics
* Dialog:: Perl interface to `dialog(3)' in this node
* Digest:: Modules that calculate message digests
* Digest/HMAC:: Keyed-Hashing for Message Authentication
* Digest/HMAC_MD5:: Keyed-Hashing for Message Authentication
* Digest/HMAC_SHA1:: Keyed-Hashing for Message Authentication
* Digest/MD2:: Perl interface to the MD2 Algorithm
* Digest/MD4:: Perl interface to the RSA Data Security Inc. MD4 Message-Digest Algorithm
* Digest/MD5:: Perl interface to the MD5 Algorithm
* Digest/Perl/MD5:: Perl implementation of Ron Rivests MD5 Algorithm
* Digest/SHA1:: Perl interface to the SHA-1 Algorithm
* Digest/Tiger:: a module that implements the tiger hash
* Dir/Purge:: Purge directories to a given number of files.
* DirHandle:: supply object methods for directory handles
* Docclient:: client module for MS format conversions
* Document/Info:: determine file type for Office documents
* DotLock:: Multi-host advisory queing locking system
* Dua:: DUA/Perl interface to an X.500 directory
* Dumpvalue:: provides screen dump of Perl data.
* Dunce/Files:: Protects against sloppy use of files.
* DynScalar:: closure-in-a-box for simple scalars
* DynaLoader:: Dynamically load C libraries into Perl code
* EMatrix:: MISSING SHORT DESCRIPTION
* Edit:: module to implement common text editing functions
* Eesh:: Enlightenment Window Manager IPC Library
* Emacs:: Redefine Perl's system primitives to work inside of Emacs
* Emacs/EPL:: Protocol implementation and data conversions for Emacs Perl
* Emacs/EPL/Debug:: Demand-loaded protocol debugging support
* Emacs/Lisp:: Support for writing Emacs extensions in Perl
* Email/Find:: Find RFC 822 email addresses in plain text
* Email/Valid:: Check validity of Internet email addresses
* Embedding_API:: MISSING SHORT DESCRIPTION
* Embedix/DB:: persistence for ECDs
* Embedix/DB/FileSystem:: FileSystem back-end for Embedix::DB
* Embedix/DB/Pg:: PostgreSQL back-end for Embedix::DB
* Embedix/DB/mysql:: MySQL back-end for Embedix::DB
* Embedix/ECD:: Embedix Component Descriptions as objects
* Embedix/ECD/Autovar:: an object for AUTOVAR nodes
* Embedix/ECD/Component:: an object for COMPONENT nodes
* Embedix/ECD/Group:: an object for GROUP nodes
* Embedix/ECD/Node:: a base class for ECD nodes
* Embedix/ECD/Option:: an object for OPTION nodes
* Embedix/ECD/Root:: a class for root nodes
* Embedix/ECD/Util:: miscellaneous stuff
* Embedix/ECD/XMLWriter:: adds a method to write ECD data as XML
* Embedix/ECD/XMLv1:: adds a method to write ECD data as XML
* Emotion:: discrete emotion annotation processing
* End:: generalized END {}.
* English:: use nice English (or awk) names for ugly punctuation variables
* English/Reference:: use words to dereference things
* Env:: perl module that imports environment variables as scalars or arrays
* Env/Array:: Perl module that "imports" environment variables as arrays
* Env/Path:: Advanced operations on path variables
* Envy/Load:: Load Envy Files
* Errno:: System errno constants
* Error:: Error/exception handling in an OO-ish way
* Error/Unhandled:: a Module for letting Errors do their own handling
* Event:: Event loop processing
* Event/MakeMaker:: MakeMaker glue for the C-level Event API
* Event/Stats:: Event loop statistics
* Event/tcpsession:: reliable bidirectional RPC session layer
* Exception/Class:: A module that allows you to declare real exception classes in Perl
* Exception/Cxx:: Switch to ANSI C++ exceptions
* Expect:: Expect for Perl, Version 1.11
* Expect_FAQ:: Frequently Asked Questions
* Expect_intro:: Perl Expect interface
* Exporter:: Implements default import method for modules
* Exporter/Heavy:: Exporter guts
* ExtUtils/Command:: utilities to replace common UNIX commands in Makefiles etc.
* ExtUtils/DynaGlue:: Methods for generating Perl extension files
* ExtUtils/Embed:: Utilities for embedding Perl in C/C++ applications
* ExtUtils/F77:: Simple interface to F77 libs
* ExtUtils/Install:: install files from here to there
* ExtUtils/Installed:: Inventory management of installed modules
* ExtUtils/Liblist:: determine libraries to use and how to use them
* ExtUtils/MM_Cygwin:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_OS2:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_Unix:: methods used by ExtUtils::MakeMaker
* ExtUtils/MM_VMS:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_Win32:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MakeMaker:: create an extension Makefile
* ExtUtils/Manifest:: utilities to write and check a MANIFEST file
* ExtUtils/Miniperl:: write the C code for perlmain.c
* ExtUtils/Mkbootstrap:: make a bootstrap file for use by DynaLoader
* ExtUtils/Mksymlists:: write linker options files for dynamic extension
* ExtUtils/Packlist:: manage .packlist files
* ExtUtils/PerlPP:: A Perl Preprocessor
* ExtUtils/TBone:: a "skeleton" for writing "t/*.t" test files.
* ExtUtils/testlib:: add blib/* directories to @INC
* FAQ/OMatic/API:: a Perl API to manipulate FAQ-O-Matics
* FCGI:: Fast CGI module
* FCGI/ProcManager:: functions for managing FastCGI applications.
* FFI:: Perl Foreign Function Interface
* FFI/Library:: Perl Access to Dynamically Loaded Libraries
* FakeHash:: Simulate the behavior of a Perl hash variable
* FakeHash:: Draw a `pic' diagram of the internal structure of a hash
* FakeHash:: Class used internally by `FakeHash' to represent key-value pairs
* Fame:: Perl5 access to FAME
* Fatal:: replace functions with equivalents which succeed or die
* Fcntl:: load the C Fcntl.h defines
* Festival/Client:: Communicate with a Festival server
* File/Archive:: Figure out what is in an archive file
* File/BSDGlob:: Perl extension for BSD glob routine
* File/Backup:: For making rotating backups of directories
* File/Basename:: split a pathname into pieces
* File/BasicFlock:: file locking with flock
* File/Binary:: Binary file reading module
* File/Cache:: Share data between processes via filesystem
* File/Cat:: Perl implementation of cat(1)
* File/CheckTree:: run many filetest checks on a tree
* File/Compare:: Compare files or filehandles
* File/Copy:: Copy files or filehandles
* File/CounterFile:: Persistent counter class
* File/Descriptions:: Perl extension for getting file descriptions
* File/DosGlob:: DOS like globbing and then some
* File/FDpasser:: Perl extension for blah blah blah
* File/Find:: traverse a file tree
* File/Flock:: file locking with flock
* File/FlockDir:: override perl flock() for network or portability purposes
* File/Glob:: Perl extension for BSD glob routine
* File/HomeDir:: get home directory for self or other users
* File/LckPwdF:: Lock and unlock the passwd and shadow files with lckpwdf and ulckpwdf
* File/Listing:: parse directory listing
* File/MMagic:: Guess file type
* File/MkTemp:: Make temporary filename from template
* File/MkTempO:: Make temporary filename from template
* File/MultiTail:: Tail multiple files for Unix systems
* File/NCopy:: Copy file, file               Copy file[s] | dir[s], dir
* File/Path:: create or remove directory trees
* File/PathConvert:: convert an absolute path to a relative path
* File/ReadBackwards:: Read a file backwards by lines.
* File/Remote:: Read/write/edit remote files transparently
* File/Remove:: Remove files and directories
* File/Slurp:: single call read & write file routines; read directories
* File/Sort:: Sort a file or merge sort multiple files
* File/Spec:: portably perform operations on file names
* File/Spec/Functions:: portably perform operations on file names
* File/Spec/Mac:: File::Spec for MacOS
* File/Spec/OS2:: methods for OS/2 file specs
* File/Spec/Unix:: methods used by File::Spec
* File/Spec/VMS:: methods for VMS file specs
* File/Spec/Win32:: methods for Win32 file specs
* File/Sync:: Perl access to fsync() and sync() function calls
* File/Tail:: Perl extension for reading from continously updated files
* File/Temp:: return name and handle of a temporary file safely
* File/chmod:: Implements symbolic and ls chmod modes
* File/lockf:: Perl module interface to the lockf system call
* File/stat:: by-name interface to Perl's built-in stat() functions
* FileCache:: keep more files open than the system permits
* FileHandle:: supply object methods for filehandles
* FileHandle/Multi:: Print to multiple filehandles with one output call
* FileSys/Ext2:: Interface to e2fs filesystem attributes
* Filesys/Df:: Perl extension for obtaining file system stats.
* Filesys/DiskFree:: perform the Unix command 'df' in a portable fashion
* Filesys/DiskSpace:: Perl df
* Filesys/Ext2:: Interface to e2fs filesystem attributes
* Filesys/SmbClient:: Perl extension for access Samba filesystem with libsmclient.so
* Filesys/SmbClientParser:: Perl client to reach Samba ressources
* Filesys/Statvfs:: Perl extension for statvfs().
* Filter/Handle:: Apply filters to output filehandles
* Filter/Simple:: Simplified source filtering
* Filter/Util/Call:: Perl Source Filter Utility Module
* Filter/Util/Exec:: exec source filter
* Filter/cpp:: cpp source filter
* Filter/decrypt:: template for a decrypt source filter
* Filter/exec:: exec source filter
* Filter/sh:: sh source filter
* Filter/tee:: tee source filter
* Finance/Bank/Sporo:: Perl extension for *SporoPay* of Slovenska Sporitelna.
* Finance/Bank/TB:: Perl extension for *TatraPay* and *CardPay* of Tatrabanka and *EliotPay* of .eliot.
* Finance/Currency/Convert:: Convert currencies and fetch their exchange rates (with Finance::Quote)
* Finance/HSHrates:: Get current US Mortgage Rates from HSH
* Finance/Huntington/Statement:: Perl extension for parsing html bank statements from the Huntington Bank website.
* Finance/MoneyNetSymbolLookup:: Look up a stock symbol from MoneyNet
* Finance/Options/Calc:: Option analysis based on different option pricing models.
* Finance/Quote:: Get stock and mutual fund quotes from various exchanges
* Finance/Quote/ASX:: Obtain quotes from the Australian Stock Exchange.
* Finance/Quote/DWS:: Obtain quotes from DWS (Deutsche Bank Gruppe).
* Finance/Quote/Fidelity:: Obtain information from Fidelity Investments.
* Finance/Quote/Tiaacref:: Obtain quote from TIAA-CREF.
* Finance/Quote/Troweprice:: Obtain quotes from T. Rowe Price
* Finance/Quote/Trustnet:: Obtain unit trust prices from trustnet.co.uk
* Finance/Quote/VWD:: Obtain quotes from vwd Vereinigte Wirtschaftsdienste GmbH.
* Finance/Quote/Yahoo/Australia:: Fetch Australian stock quotes via Yahoo.
* Finance/Quote/Yahoo/Base:: Common functions for fetching Yahoo info.
* Finance/Quote/Yahoo/Europe:: Fetch quotes from Yahoo Europe
* Finance/Quote/Yahoo/USA:: Obtain information about stocks and funds in the USA and Canada.
* Finance/QuoteHist:: Perl module for fetching historical stock quotes.
* Finance/QuoteHist/FinancialWeb:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/Generic:: Base class for retrieving historical stock quotes.
* Finance/QuoteHist/MotleyFool:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/SiliconInvestor:: Site-specific class for retrieving historical stock quotes.
* Finance/QuoteHist/Yahoo:: Site-specific subclass for retrieving historical stock quotes.
* Finance/YahooChart:: Get a chart from Yahoo! Finance
* Finance/YahooQuote:: Get a stock quote from Yahoo!
* FindBin:: Locate directory of original perl script
* FirstGoodURL:: determines first successful URL in list
* Font/AFM:: Interface to Adobe Font Metrics files
* Font/Fret:: Font REporting Tool
* Font/TFM:: read information from TeX font metric files
* FormMagick:: easily create CGI form-based applications
* FormMagick/FAQ:: Frequently asked questions about FormMagick
* FormMagick/L10N:: MISSING SHORT DESCRIPTION
* FormMagick/TagMaker:: Perl module that can create any HTML tags, as well as groups of or just parts of them, and complete html headers or footers.
* FormMagick/Validator:: MISSING SHORT DESCRIPTION
* Fortune:: read and write fortune (strfile) databases
* FreezeThaw:: converting Perl structures to strings and back.
* Frontier/Client:: issue Frontier XML RPC requests to a server
* Frontier/Daemon:: receive Frontier XML RPC requests
* Frontier/RPC2:: encode/decode RPC2 format XML
* Function/Override:: Add callbacks to existing functions.
* Functional:: a module which makes Perl slightly more functional (think Haskell)
* Fwctl:: Perl module to configure the Linux kernel packet filtering firewall.
* Fwctl/AcctReport:: Generates reports from `fwctl dump-acct' command.
* Fwctl/Report:: Generates reports from fwctllog output.
* Fwctl/RuleSet:: Module to add sets of rules to the linux firewall.
* Fwctl/Services/all:: Fwctl module to handle any IP traffic.
* Fwctl/Services/dhcp:: Fwctl module to handle the dhcp protocol.
* Fwctl/Services/ftp:: Fwctl module to handle the FTP service.
* Fwctl/Services/http:: Fwctl module to handle HTTP protocol.
* Fwctl/Services/hylafax:: Fwctl module to handle the HylaFax protocol.
* Fwctl/Services/icmp_pkt:: Fwctl module to handle arbitrary ICMP packet.
* Fwctl/Services/ip_pkt:: Fwctl module to handle non UDP/TCP/ICMP packets.
* Fwctl/Services/ipsec:: Fwctl module to handle the IPSec protocol.
* Fwctl/Services/lpd:: Fwctl module to handle the Berkeley Line Printer 		       protocol.
* Fwctl/Services/name_service:: Fwctl module to handle the DNS protocol.
* Fwctl/Services/netbios:: Fwctl module to handle NetBIOS traffic.
* Fwctl/Services/ntp:: Fwctl module to handle the NTP protocol.
* Fwctl/Services/pcanywhere:: Fwctl module to handle the PC Anywhere protocol.
* Fwctl/Services/ping:: Fwctl module to handle the ping service.
* Fwctl/Services/portmap:: Fwctl module to handle the portmapper service.
* Fwctl/Services/pptp:: Fwctl module to handle the PPTP service.
* Fwctl/Services/redirect:: Fwctl module to handle ICMP redirect messages.
* Fwctl/Services/rsh:: Fwctl module to handle the rsh protocol.
* Fwctl/Services/snmp:: Fwctl module to handle the snmp protocol.
* Fwctl/Services/syslog:: Fwctl module to handle syslog UDP traffic.
* Fwctl/Services/tcp_service:: Fwctl module to handle simple TCP client/server communication.
* Fwctl/Services/tftp:: Fwctl module to handle tftp protocol.
* Fwctl/Services/timed:: Fwctl module to handle any IP traffic.
* Fwctl/Services/traceroute:: Fwctl module to handle traceroute service.
* Fwctl/Services/traffic_control:: Fwctl module to handle the necessary  ICMP traffic.
* Fwctl/Services/udp_pkt:: Fwctl module to hande unidirectional UDP packets.
* Fwctl/Services/udp_service:: Fwctl module to handle bidirectional UDP traffic.
* GD:: Interface to Gd Graphics Library
* GD/Barcode:: Create barcode image with GD
* GD/Barcode/COOP2of5:: Create COOP2of5 barcode image with GD
* GD/Barcode/Code39:: Create Code39 barcode image with GD
* GD/Barcode/EAN13:: Create EAN13(JAN13) barcode image with GD
* GD/Barcode/EAN8:: Create EAN8(JAN8) barcode image with GD
* GD/Barcode/IATA2of5:: Create IATA2of5 barcode image with GD
* GD/Barcode/ITF:: Create ITF(Interleaved2of5) barcode image with GD
* GD/Barcode/Industrial2of5:: Create Industrial2of5 barcode image with GD
* GD/Barcode/Matrix2of5:: Create Matrix2of5 barcode image with GD
* GD/Barcode/NW7:: Create NW7 barcode image with GD
* GD/Barcode/UPCA:: Create UPC-A barcode image with GD
* GD/Barcode/UPCE:: Create UPC-E barcode image with GD
* GD/Graph:: Graph Plotting Module for Perl 5
* GD/Graph3d:: Create 3D Graphs with GD and GD::Graph
* GD/Graph/Data:: Data set encapsulation for GD::Graph
* GD/Graph/Error:: Error handling for GD::Graph classes
* GD/Graph/FAQ:: Frequently asked questions
* GD/Graph/Map:: generate HTML map text for GD::Graph diagramms.
* GD/Graph/colour:: Colour manipulation routines for use with GD::Graph
* GD/Text:: Text utilities for use with GD
* GD/Text/Align:: Draw aligned strings
* GD/Text/Wrap:: Wrap strings in boxes
* GIFgraph:: Graph Plotting Module (deprecated)
* GIFgraph/EvenlySpaced:: spaces the data points evenly
* GIFgraph/Map:: generate HTML map text.
* GIFgraph/WithMap:: generates HTML map text while plotting graph
* GIFgraph/boxplot:: Box and Whisker Graph Module for Perl 5.
* GIFgraph/colour:: Colour manipulation routines for use with GIFgraph
* GNOME/GNORBA:: Perl extension for using ORBit with GNOME
* GPS/Garmin:: Perl interface to GPS equipment using the Garmin Protocol
* GPS/Garmin/Handler:: Handlers to Garmin data
* GPS/Serial:: Access to the Serial port for the GPS::* modules
* GSSAPI:: Perl extension providing access to the GSSAPIv2 library
* GSSAPI/OID:: methods for handling GSSAPI OIDs and some constant OIDs
* GSSAPI/OID/Set:: methods for handling sets of GSSAPI OIDs, and some constant OID sets.
* GSSAPI/Status:: methods for handlings GSSAPI statuses
* GTop:: Perl interface to libgtop
* Games/Alak:: simple game-tree implementation of a gomoku-like game
* Games/Cards:: Perl module for writing and playing card games
* Games/Cards/Tk:: Package to write Tk ports for Games::Cards card games
* Games/Cards/Undo:: undoing/redoing moves in Games::Cards games
* Games/Chess:: represent chess positions and games
* Games/Chess/PGN:: Portable Game Notation for Chess
* Games/Chess/Referee:: work with chess positions and games, according to the rules of chess.
* Games/Dissociate:: a Dissociated Press algorithm and filter
* Games/Maze:: Create Mazes as Objects.
* Games/Maze/MazeD2:: Create maze objects.
* Games/Maze/MazeD3:: Create 3-D maze objects.
* Games/Maze/MazeXD2:: Create hexagon maze objects.
* Games/Maze/MazeXD3:: Create 3-D hexagon maze objects.
* Games/WordFind:: Class for generating Word Find type puzzles
* Games/WordGuess:: a class for creating word-guessing game
* Games/Worms:: alife simulator for Conway/Patterson/Beeler worms, etc.
* Games/Worms/Base:: base class for worms
* Games/Worms/Beeler:: class for Conway/Patterson/Beeler worms
* Games/Worms/Random:: random worms
* Games/Worms/Random2:: class for consistent random worms
* GedNav:: Perl extension for quick (& dirty) navigation of GEDCOM files
* Gedcom:: a module to manipulate Gedcom genealogy files
* Gedcom/CGI:: Basic CGI routines for Gedcom.pm
* Gedcom/Event:: a module to manipulate Gedcom events
* Gedcom/Family:: a module to manipulate Gedcom families
* Gedcom/Grammar:: a module to manipulate Gedcom grammars
* Gedcom/Individual:: a module to manipulate Gedcom individuals
* Gedcom/Item:: a base class for Gedcom::Grammar and Gedcom::Record
* Gedcom/LifeLines:: functions for lines2perl
* Gedcom/Record:: a module to manipulate Gedcom records
* Geo/GNUPlot:: Perl extension for plotting position tracks onto a world map.
* Geo/METAR:: Process aviation weather reports in the METAR format.
* Geo/StormTracker:: Perl bundle for working with national weather advisories
* Geo/StormTracker/Advisory:: The weather advisory object of the perl Storm-Tracker bundle.
* Geo/StormTracker/Data:: The weather event object of the perl Storm-Tracker bundle.
* Geo/StormTracker/Main:: Master method of the Storm-Tracker perl bundle for dealing with Weather Advisories.
* Geo/StormTracker/Parser:: Perl extension for Parsing Weather Advisories
* Geo/Storm_Tracker:: Perl bundle for working with national weather advisories
* Geo/Storm_Tracker/Advisory:: The weather advisory object of the perl Storm-Tracker bundle.
* Geo/Storm_Tracker/Data:: The weather event object of the perl Storm-Tracker bundle.
* Geo/Storm_Tracker/Main:: Master method of the Storm-Tracker perl bundle for dealing with Weather Advisories.
* Geo/Storm_Tracker/Parser:: Perl extension for Parsing Weather Advisories
* Geo/TigerLine:: TIGER/Line geographic data
* Geo/TigerLine/Record:: Superclass for all TIGER/Line record classes.
* Geo/TigerLine/Record/:: MISSING SHORT DESCRIPTION
* Geo/TigerLine/Record/1:: TIGER/Line 1998 Complete Chain Basic Data Record
* Geo/TigerLine/Record/2:: TIGER/Line 1998 Complete Chain Shape Coordinates
* Geo/TigerLine/Record/3:: TIGER/Line 1998 Complete Chain Geographic Entity Codes
* Geo/TigerLine/Record/4:: TIGER/Line 1998 Index to Alternative Feature Identifiers
* Geo/TigerLine/Record/5:: TIGER/Line 1998 Complete Chain Feature Identifiers
* Geo/TigerLine/Record/6:: TIGER/Line 1998 Additional Address Range and ZIP Code Data
* Geo/TigerLine/Record/7:: TIGER/Line 1998 Landmark  Features
* Geo/TigerLine/Record/8:: TIGER/Line 1998 Polygons Linked to Area Landmarks
* Geo/TigerLine/Record/9:: TIGER/Line 1998 Key Geographic Location Features
* Geo/TigerLine/Record/A:: TIGER/Line 1998 Polygon Geographic Entity Codes
* Geo/TigerLine/Record/Accessor:: Accessor generation for Geo::TigerLine::Record::*
* Geo/TigerLine/Record/C:: TIGER/Line 1998 Geographic Entity Names
* Geo/TigerLine/Record/H:: TIGER/Line 1998 TIGER/Line ID History
* Geo/TigerLine/Record/I:: TIGER/Line 1998 Link Between Complete Chains and Polygons
* Geo/TigerLine/Record/P:: TIGER/Line 1998 Polygon Internal Point
* Geo/TigerLine/Record/Parser:: Parsing superclass for TIGER/Line records.
* Geo/TigerLine/Record/R:: TIGER/Line 1998 TIGER/Line ID Record Number Range
* Geo/TigerLine/Record/S:: TIGER/Line 1998 Polygon Additional Geographic Entity Codes
* Geo/TigerLine/Record/Z:: TIGER/Line 1998 ZIP+4 Codes
* Geo/Walkabout/Chain:: An open path representing the shape of a line feature.
* Geo/Walkabout/Line:: A "line feature"
* Geo/Walkabout/Utils:: Utility functions for Geo::Walkabout.
* Geo/Weather:: Weather retrieval module
* Geo/WeatherNOAA:: Perl extension for interpreting the NOAA weather data
* Geography/Countries:: 2-letter, 3-letter, and numerical codes for countries.
* Geography/States:: Map states and provinces to their codes, and vica versa.
* Geography/USStates:: USA State Data
* Getargs/Long:: parse routine arguments
* Getopt/ArgvFile:: interpolates script options from files into @ARGV or another array
* Getopt/Declare:: Declaratively Expressed Command-Line Arguments via Regular Expressions
* Getopt/EvaP:: evaluate Perl command line parameters.
* Getopt/ExPar:: Extended Parameters command line parser.
* Getopt/Long:: Extended processing of command line options
* Getopt/Mixed:: getopt processing with both long and short options
* Getopt/Reference_Parser:: MISSING SHORT DESCRIPTION
* Getopt/Regex:: handle command line options flexibly using regular expressions
* Getopt/Simple:: Provide a simple wrapper around Getopt::Long.
* Getopt/Std:: Process single-character switches with switch clustering
* Getopt/Tabular:: table-driven argument parsing for Perl 5
* Getopt/Tiny:: yet another command line argument parsing module
* Getopt/constant:: set constants from command line options
* Gettext:: Perl extension for emulating gettext-related API.
* Glade/PerlGenerate:: Generate Perl source from a Glade XML project file.
* GnuPG:: Perl module interface to the GNU Privacy Guard.
* GnuPG/Fingerprint:: GnuPG Fingerprint Objects
* GnuPG/Handles:: GnuPG handles bundle
* GnuPG/Interface:: Perl interface to GnuPG
* GnuPG/Key:: GnuPG Key Object
* GnuPG/Options:: GnuPG options embodiment
* GnuPG/PublicKey:: GnuPG Public Key Objects
* GnuPG/SecretKey:: GnuPG Secret Key Objects
* GnuPG/Signature:: GnuPG Key Signature Objects
* GnuPG/SubKey:: GnuPG Sub Key objects
* GnuPG/Tie:: Tied filehandle interface to encryption with the GNU Privacy Guard.
* GnuPG/UserId:: GnuPG User ID Objects
* Gnus/Newsrc:: parse ~/.newsrc.eld files
* GoXML/XQI:: Perl extension for the XML Query Interface at xqi.goxml.com.
* Graph:: graph operations
* Graph/BFS:: graph breadth-first search
* Graph/Base:: graph base class
* Graph/DFS:: graph depth-first search
* Graph/Directed:: directed graphs
* Graph/Edge:: a base class for graph edges
* Graph/Element:: a base class for all things graph
* Graph/HeapElem:: internal use only
* Graph/Kruskal:: Kruskal's Algorithm for Minimal Spanning Trees in Graphs
* Graph/Reader:: base class for Graph file format readers
* Graph/Reader/XML:: class for reading a Graph instance from XML
* Graph/Traversal:: graph traversal
* Graph/Undirected:: directed graphs
* Graph/Vertex:: a base class for graph vertices
* Graph/Writer:: base class for Graph file format writers
* Graph/Writer/Dot:: write out directed graph in Dot format
* Graph/Writer/VCG:: write out directed graph in VCG format
* Graph/Writer/XML:: write out directed graph as XML
* Graph/_element:: baseclass for all graph elements
* GraphViz:: Interface to the GraphViz graphing tool
* GraphViz/DBI:: graph database tables and relations
* GraphViz/Data/Grapher:: Visualise data structures as a graph
* GraphViz/ISA:: Graphing @ISA hierarchies at run-time
* GraphViz/No:: subclass of GraphViz with no nodes
* GraphViz/Parse/RecDescent:: Visualise grammars
* GraphViz/Remote:: use graphviz without installing it
* GraphViz/Small:: subclass of GraphViz with small nodes
* GraphViz/XML:: Visualise XML as a tree
* Graphics/ColorNames:: defines RGB values for common color names
* Graphics/ColorNames/HTML:: HTML color names and equivalent RGB values
* Graphics/ColorNames/Windows:: Windows color names and equivalent RGB values
* Graphics/ColorNames/X:: X-Windows color names and equivalent RGB values
* Graphics/Libplot:: Perl extension for libplot plotting library
* Graphics/Plotter:: Perl extension for C++ plotter library from GNU plotutils
* Graphics/Simple:: a simple , device-independent graphics API for Perl
* Graphics/Simple/Fig:: implement Graphics::Simple in Fig (e.g. xfig) files
* Graphics/Simple/GnomeCanvas:: implement Graphics::Simple using Gnome Canvas
* Graphics/Simple/PDLPlot:: Plot PDL data using Graphics::Simple
* Graphics/Simple/PostScript:: implement Graphics::Simple in PostScript files
* Gtk:: Perl module for the Gimp Toolkit library
* Gtk/ColorSelectButton:: Choose a color
* Gtk/HandyCList:: A more Perl-friendly Columned List
* HP200LX/DB:: Perl module to access HP-200 LX database files
* HPUX/Ioscan:: Perl function to handle HPUX ioscan command
* HTML/ActiveLink:: dynamically activate HTML links based on URL
* HTML/AsSubs:: functions that construct a HTML syntax tree
* HTML/CalendarMonth:: Perl extension for generating and manipulating HTML calendar months
* HTML/CalendarMonthSimple:: Perl Module for Generating HTML Calendars
* HTML/Changes:: MISSING SHORT DESCRIPTION
* HTML/Clean:: Cleans up HTML code for web browsers, not humans
* HTML/DOMbo:: convert between XML::DOM and {XML/HTML}::Element trees
* HTML/DynamicTemplate:: HTML template class.
* HTML/EP:: a system for embedding Perl into HTML
* HTML/EP/CGIEncryptForm:: An EP interface to the CGI::EncryptForm module
* HTML/EP/EditTable:: An HTML::EP extension for editing a table via WWW
* HTML/EP/Explorer:: Web driven browsing of a filesystem
* HTML/EP/Glimpse:: A simple search engine using Glimpse
* HTML/EP/Session:: Session management for the HTML::EP package
* HTML/EP/Shop:: An E-Commerce solution, based on HTML::EP
* HTML/EasyTags:: Make proper HTML 4 tags/lists/parts
* HTML/Element:: Class for objects that represent HTML elements
* HTML/Element/traverse:: discussion of HTML::Element's traverse method
* HTML/ElementGlob:: Perl extension for managing HTML::Element based objects as a single object.
* HTML/ElementRaw:: Perl extension for HTML::Element(3).
* HTML/ElementSuper:: Perl extension for HTML::Element(3)
* HTML/ElementTable:: Perl extension for manipulating a table composed of HTML::Element style components.
* HTML/Embperl/Mail:: Sends results from Embperl via E-Mail
* HTML/Embperl/Session:: HTML::Embperl::Session
* HTML/EmbperlObject:: Extents HTML::Embperl for building whole website with reusable components and objects
* HTML/Entities:: Encode or decode strings with HTML entities
* HTML/Faq:: embed Perl code in your HTML docs
* HTML/Features:: MISSING SHORT DESCRIPTION
* HTML/FeaturesD:: MISSING SHORT DESCRIPTION
* HTML/FillInForm:: Populates HTML Forms with CGI data.
* HTML/Filter:: Filter HTML text through the parser
* HTML/Form:: Class that represents HTML forms
* HTML/FormHighlight:: Highlights fields in an HTML form.
* HTML/FormValidator:: Validates user input (usually from an HTML form) based on input profile.
* HTML/FormatNroff:: Format HTML as nroff man page
* HTML/FormatNroffSub:: Test package for testing subclassing of HTML::FormatNroff
* HTML/FormatPS:: Format HTML as postscript
* HTML/FormatTable:: base class for formatting HTML Tables
* HTML/FormatTableCell:: Format HTML Table
* HTML/FormatTableCellNroff:: Format HTML Table entry
* HTML/FormatTableNroff:: Format HTML Table as nroff
* HTML/FormatTableRow:: Format HTML Table row
* HTML/FormatTableRowNroff:: Format HTML Table row for nroff
* HTML/FormatText:: Format HTML as text
* HTML/Formatter:: Base class for HTML formatters
* HTML/FromText:: mark up text as HTML
* HTML/HeadParser:: Parse <HEAD> section of a HTML document
* HTML/INSTALL:: MISSING SHORT DESCRIPTION
* HTML/Intro:: MISSING SHORT DESCRIPTION
* HTML/IntroD:: MISSING SHORT DESCRIPTION
* HTML/LinkExtor:: Extract links from an HTML document
* HTML/LoL:: construct HTML from pleasing Perl data structures
* HTML/Mason:: High-performance, dynamic web site authoring system
* HTML/Mason/Admin:: Mason Administrator's Guide
* HTML/Mason/ApacheHandler:: Mason/mod_perl interface
* HTML/Mason/Commands:: Old Mason command reference
* HTML/Mason/Component:: Mason Component Class
* HTML/Mason/Components:: Former Developer's Guide
* HTML/Mason/Devel:: Mason Developer's Manual
* HTML/Mason/Interp:: Mason Component Interpreter
* HTML/Mason/MethodMaker:: Used to create simple get & get/set methods in other classes
* HTML/Mason/Parser:: Mason Component Parser
* HTML/Mason/Request:: Mason Request Class
* HTML/Mason/Tests:: Test harness for testing Mason
* HTML/Munger:: Module which simplifies the creation of web filters.
* HTML/NEWS:: MISSING SHORT DESCRIPTION
* HTML/Navigation:: generic HTML navigation structure class
* HTML/PageIndex:: Class to create HTML page index objects.
* HTML/Pager:: Perl module to handle CGI HTML paging of arbitary data
* HTML/Parse:: Deprecated, a wrapper around HTML::TreeBuilder
* HTML/Parser:: HTML parser class
* HTML/PrettyPrinter:: generate nice HTML files from HTML syntax trees
* HTML/QuickCheck:: a simple and fast HTML syntax checking package for perl 4 and perl 5
* HTML/RefMunger:: module to mangle HREF links within HTML files
* HTML/SimpleLinkExtor:: MISSING SHORT DESCRIPTION
* HTML/SimpleParse:: a bare-bones HTML parser
* HTML/StickyForms:: HTML form generation for CGI or mod_perl
* HTML/Stream:: HTML output stream class, and some markup utilities
* HTML/Subtext:: Perform text substitutions on an HTML template
* HTML/Summary:: module for generating a summary from a web page.
* HTML/Table:: produces HTML tables
* HTML/TableExtract:: Perl extension for extracting the text contained in tables within an HTML document.
* HTML/TableLayout:: Layout Manager for cgi-based web applications
* HTML/Tagset:: data tables useful in parsing HTML
* HTML/Template:: Perl module to use HTML Templates from CGI scripts
* HTML/Testing:: Test module to make test files simpler.
* HTML/TipsAndTricks:: MISSING SHORT DESCRIPTION
* HTML/TokeParser:: Alternative HTML::Parser interface
* HTML/Tree:: Tree - overview of HTML::TreeBuilder et al
* HTML/TreeBuilder:: Parser that builds a HTML syntax tree
* HTML/Validator:: HTML validation by using nsgmls
* HTML/WWWTheme:: Standard theme generation, including sidebars and navigation bars
* HTML/Widgets/DateEntry:: creates date entry widgets for HTML forms.
* HTML/Widgets/Menu:: Builds an HTML menu
* HTML/Widgets/Search:: Perl module for building searches returning HTML
* HTTP/BrowserDetect:: Determine the Web browser, version, and platform from an HTTP user agent string
* HTTP/Cookies:: Cookie storage and management
* HTTP/DAV:: A WebDAV client library for Perl5
* HTTP/DAV/Lock:: Represents a WebDAV Lock.
* HTTP/DAV/Resource:: Represents and interfaces with WebDAV Resources
* HTTP/Daemon:: a simple http server class
* HTTP/Date:: date conversion routines
* HTTP/File:: Routines to deal with HTML input type file.
* HTTP/Headers:: Class encapsulating HTTP Message headers
* HTTP/Headers/UserAgent:: Routine to detect web browser platform from User-Agent HTTP Header
* HTTP/Headers/Util:: Header value parsing utility functions
* HTTP/Lite:: Lightweight HTTP implementation
* HTTP/Message:: Class encapsulating HTTP messages
* HTTP/Monkeywrench:: Web testing application
* HTTP/Negotiate:: choose a variant of a document to serve (HTTP content negotiation)
* HTTP/Request:: Class encapsulating HTTP Requests
* HTTP/Request/Common:: Construct common HTTP::Request objects
* HTTP/Request/Form:: Construct HTTP::Request objects for form processing
* HTTP/Response:: Class encapsulating HTTP Responses
* HTTP/SimpleLinkChecker:: Check the HTTP response code for a link
* HTTP/Status:: HTTP Status code processing
* HTTP/WebTest:: Test remote URLs or local web files
* HTTPD/Authen:: HTTP server authentication class
* HTTPD/Bench/ApacheBench:: Perl API for Apache benchmarking and regression testing.
* HTTPD/GroupAdmin:: Management of HTTP server group databases
* HTTPD/Realm:: Database of HTTPD Security Realms
* HTTPD/RealmManager:: MISSING SHORT DESCRIPTION
* HTTPD/UserAdmin:: Management of HTTP server user databases
* Hardware/Verilog/Parser:: A complete grammar for parsing Verilog code using perl
* Hardware/Vhdl/Parser:: A complete grammar for parsing VHDL code using perl
* Hash/Filler:: Programatically fill elements of a hash based in prerequisites
* Hash/NoVivify:: Perl extension for non-vivifying exists and defined functions
* Heap:: Perl extensions for keeping data partially sorted
* Heap/Binary:: a Perl extension for keeping data partially sorted
* Heap/Binomial:: a Perl extension for keeping data partially sorted
* Heap/Elem:: Perl extension for elements to be put in Heaps
* Heap/Elem/Num:: Perl extension for Numeric Heap Elements
* Heap/Elem/NumRev:: Perl extension for Reversed Numeric Heap Elements
* Heap/Elem/Ref:: Perl extension for Object Reference Heap Elements
* Heap/Elem/RefRev:: Perl extension for reversed Object Reverence Heap Elements
* Heap/Elem/Str:: Perl extension for String Heap Elements
* Heap/Elem/StrRev:: Perl extension for Reversed String Heap Elements
* Heap/Fibonacci:: a Perl extension for keeping data partially sorted
* Hook/WrapSub:: wrap subs with pre- and post-call hooks
* HtDig/Config:: Perl extension for managing ht://Dig configuration files
* HtDig/Database:: Perl interface Ht://Dig docdb and config files
* HtDig/Site:: Perl extension for managing a single ht://Dig configuration
* HyperWave/CSP:: Communicate with a HyperWave server
* I18N/Charset:: IANA Character Set Registry names and Unicode::Map8 conversion scheme names
* I18N/Collate:: compare 8-bit scalar data according to the current locale
* I18N/LangTags:: functions for dealing with RFC1766-style language tags
* IETF/ACE:: Perl extension for IETF IDN WG ACE character conversions
* IMAP/Admin:: Perl module for basic IMAP server administration
* INSPEC/BibTeX:: Perl extensions to convert INSPEC data from INSPEC::Retriever to BibTeX format
* INSPEC/Retriever:: Perl extensions to extract information from the INSPEC database provided by AXIOM
* IO:: load various IO modules
* IO/AtomicFile:: write a file which is updated atomically
* IO/BLOB/Pg:: Emulate IO::File interface for PostgreSQL Large Objects
* IO/Cat:: Object-oriented Perl implementation of cat(1)
* IO/Default:: replace select() with $DEFOUT, $DEFERR, $DEFIN
* IO/Dir:: supply object methods for directory handles
* IO/File:: supply object methods for filehandles
* IO/File/Multi:: Print to multiple filehandles with one output call
* IO/Handle:: supply object methods for I/O handles
* IO/InnerFile:: define a file inside another file
* IO/Interface:: Perl extension for access to network card configuration information
* IO/Lines:: IO:: interface for reading/writing an array of lines
* IO/LockedFile:: supply object methods for locking files
* IO/Multiplex:: Object interface to multiplex-style server implementations.
* IO/Null:: class for null filehandles
* IO/Page:: Pipe STDOUT to a pager if STDOUT is a TTY
* IO/Pipe:: supply object methods for pipes
* IO/Poll:: Object interface to system poll call
* IO/Pty:: Pseudo TTY object class
* IO/Scalar:: IO:: interface for reading/writing a scalar
* IO/ScalarArray:: IO:: interface for reading/writing an array of scalars
* IO/Seekable:: supply seek based methods for I/O objects
* IO/Select:: OO interface to the select system call
* IO/SendFile:: Perl extension that implements the sendfile() interface.
* IO/Sockatmark:: Perl extension for TCP urgent data
* IO/Socket:: Object interface to socket communications
* IO/Socket/INET:: Object interface for AF_INET domain sockets
* IO/Socket/Multicast:: Send and receive multicast messages
* IO/Socket/SSL:: a SSL socket interface class
* IO/Socket/UNIX:: Object interface for AF_UNIX domain sockets
* IO/String:: Emulate IO::File interface for in-core strings
* IO/Stringy:: stringy - I/O on in-core objects like strings and arrays
* IO/Tee:: Multiplex output to multiple output handles
* IO/Wrap:: wrap raw filehandles in IO::Handle interface
* IO/WrapTie:: wrap tieable objects in IO::Handle interface
* IO/Zlib:: IO:: style interface to *Note Compress/Zlib: Compress/Zlib,
* IPC/Cache:: a perl module that implements an object storage space where data is persisted across process boundaries
* IPC/ChildSafe:: control a child process without blocking
* IPC/ClearTool:: run a bidirectional pipe to a cleartool process
* IPC/LDT:: implements a length based IPC protocol
* IPC/Locker:: Distributed lock handler
* IPC/Locker/Server:: Distributed lock handler server
* IPC/MM:: Perl interface to Ralf Engelschall's mm library
* IPC/Msg:: SysV Msg IPC object class
* IPC/Open2:: open a process for both reading and writing
* IPC/Open3:: open a process for reading, writing, and error handling
* IPC/Run:: Run subprocesses w/ piping, redirection, and pseudo-ttys
* IPC/Run/IO:: I/O channels for IPC::Run.
* IPC/Run/Timer:: Timer channels for IPC::Run.
* IPC/Semaphore:: SysV Semaphore IPC object class
* IPC/Session:: Drive interactive shell command sessions, local or remote (like 'expect')
* IPC/ShareLite:: Light-weight interface to shared memory
* IPC/Shareable:: share Perl variables between processes
* IPC/Shareable/SharedMem:: Object oriented interface to shared memory
* IPC/SharedCache:: a Perl module to manage a cache in SysV IPC shared memory.
* IPC/Signal:: Utility functions dealing with signals
* IPC/SysV:: SysV IPC constants
* IPC/XPA:: Interface to the XPA messaging system
* IPChains:: Create and Manipulate ipchains via Perl
* IPChains/PortFW:: Perl module to manipulate portfw masquerading table.
* Ima/DBI:: Database connection caching and organization
* Image/Base:: base class for loading, manipulating and saving images.
* Image/DS9:: interface to the DS9 image display and analysis program
* Image/DeAnim:: create static GIF file from animated GIF
* Image/Grab:: Perl extension for Grabbing images off the Internet.
* Image/Info:: Extract meta information from image files
* Image/Info/ASCII:: ASCII support for Image::Info
* Image/Info/BMP:: Windows Device Indepdent Bitmap support for Image::Info
* Image/Info/SVG:: SVG support for Image::Info
* Image/Info/XBM:: XBM support for Image::Info
* Image/Info/XPM:: XPM support for Image::Info
* Image/Magick:: Perl extension for calling ImageMagick's libmagick routines
* Image/ParseGIF:: Parse a GIF image into its compenent parts.
* Image/README:: Perl module to easily grab images from the 'net.
* Image/Size:: read the dimensions of an image in several popular formats
* Image/Xbm:: Load, create, manipulate and save xbm image files.
* Image/Xpm:: Load, create, manipulate and save xpm image files.
* Imager:: Perl extension for Generating 24 bit Images
* Imager/Expr:: implements expression parsing and compilation for the  expression evaluation engine used by Imager::transform2()
* Imager/Regops:: generated information about the register based VM
* Imager/regmach:: documents the register virtual machine used by Imager::transform2().
* InfoBrief:: Perl extension for printing envelopes for Infobrief mailings according to the standards of the Deutsche Bundespost
* Inline:: Write Perl subroutines in other programming languages.
* Inline-API:: API - How to bind a programming language to Perl using Inline.pm
* Inline-Support:: Support - Support Information for Inline.pm and related modules.
* Inline/C:: Write Perl Subroutines in C
* Inline/C-Cookbook:: A Cornucopia of Inline C Recipes
* Inline/CPP:: Write Perl subroutines and classes in C++.
* Inline/CPR:: C Perl Run. Embed Perl in C, ala Inline
* Inline/Python:: Write Perl subroutines and classes in Python.
* Interpolation:: Arbitrary string interpolation semantics
* Interval:: handling of temporal intervals based on Date::Manip
* Isam:: Perl extension for ISAM files
* Ivrs:: Perl extension for Interactive Voice Response System.
* JListbox:: MISSING SHORT DESCRIPTION
* Jail:: SGIPerl extension for grabbing video, modifying images and display images
* Java:: Perl extension for accessing a JVM remotely or locally
* Jcode:: Japanese Charset Handler
* Jcode/Unicode:: Aux. routines for Jcode
* Jcode/Unicode/Constants:: UCS2-EUC conversion table
* Jcode/Unicode/NoXS:: Non-XS version of Jcode::Unicode
* Kite:: collection of modules useful in Kite design and construction.
* Kite/Base:: base class module implementing common functionality
* Kite/PScript/Defs:: useful PostScript definitions for kite layout et al
* Kite/Profile:: represent and manipulate a 2d profile
* Kite/XML2PS:: reads an XML curve definition file and generates PostScript
* Kite/XML/Node:: base class for XML parser nodes
* Kite/XML/Node/Kite:: XML nodes to represent kite markup
* Kite/XML/Parser:: XML parser for kite related markup
* Krb4:: Perl extension for Kerberos 4
* Krb5:: Perl extension for Kerberos 5
* LEGO/RCX:: RCX
* LISP:: Perl extension for blah blah blah
* LISP/Lambda:: Perl extension for implementing Lisp Lambda expressions
* LISP/List:: Perl extension for implementing linked lists as in Lisp
* LWP:: Library for WWW access in Perl
* LWP/AuthenAgent:: a simple subclass of LWP::UserAgent to allow the user to type in username / password information if required for autentication.
* LWP/Conn:: event driven protocol module interface
* LWP/Conn/_Connect:: event driven connection establishment
* LWP/Debug:: debug routines for the libwww-perl library
* LWP/EventLoop:: Watch file descriptors and timers
* LWP/IO:: Low level I/O capability
* LWP/MainLoop:: Give access to an single instance of LWP::EventLoop
* LWP/MediaTypes:: guess media type for a file or a URL
* LWP/MemberMixin:: Member access mixin class
* LWP/Parallel:: Extension for LWP to allow parallel HTTP and FTP access
* LWP/Parallel/Protocol:: Base class for parallel LWP protocols
* LWP/Parallel/RobotUA:: A class for Parallel Web Robots
* LWP/Parallel/UserAgent:: A class for parallel User Agents
* LWP/ParallelUA:: Parallel LWP::UserAgent
* LWP/Protocol:: Base class for LWP protocols
* LWP/Protocol/bbs:: BBS/RPC support for LWP
* LWP/RobotPUA:: Parallel LWP::RobotUA
* LWP/RobotUA:: A class for Web Robots
* LWP/SecureSocket:: SSL TCP/IP socket interface
* LWP/Simple:: Procedural LWP interface
* LWP/Sink:: Something that receive data
* LWP/Socket:: TCP/IP socket interface
* LWP/TkIO:: Tk I/O routines for the LWP library
* LWP/UserAgent:: A WWW UserAgent class
* LaTeX/Parser:: Perl extension to parse LaTeX files
* LabPopEntry:: A LabEntry widget with an automatic, configurable right-click menu built in, plus input masks.
* Language/Basic:: Perl Module to interpret BASIC
* Language/Basic/Expression:: Package to handle string, numeric, and boolean expressions.
* Language/Basic/Function:: Package to handle user-defined and intrinsic Functions in BASIC.
* Language/Basic/Statement:: Package to handle parsing and implementing single BASIC statements.
* Language/Basic/Syntax:: Pod file describing syntax understood by Language::Basic module
* Language/Basic/Token:: Module to handle lexing BASIC statements.
* Language/Basic/Variable:: Module to handle parsing and implementing BASIC variables.
* Language/Functional:: a module which makes Perl slightly more functional
* Language/Mumps:: MISSING SHORT DESCRIPTION
* Language/XS:: Write XS code on the fly and load it dynamically.
* Lib/Browser:: Perl library browser.
* Lib/Module:: MISSING SHORT DESCRIPTION
* Lib/ModuleSym:: Lexical scanning of Perl library modules.
* Lib/SelfHelp:: MISSING SHORT DESCRIPTION
* Lib/SymbolRef:: Manage tied references to symbol table hash   entries.
* LibWeb/Admin:: User authentication for libweb applications
* LibWeb/CGI:: Extra cgi supports for libweb applications
* LibWeb/Class:: A base class for libweb modules
* LibWeb/Core:: The core class for libweb modules
* LibWeb/Crypt:: Encryption for libweb applications
* LibWeb/Database:: A generic database driver for libweb applications
* LibWeb/Database/Mysql:: Mysql database API for libweb applications
* LibWeb/Digest:: Digest generation for libweb applications
* LibWeb/File:: File manipulations for libweb applications
* LibWeb/HTML/Default:: HTML display for libweb applications
* LibWeb/HTML/Error:: Displaying error messages in html for libweb applications
* LibWeb/HTML/Site:: AN INTERFACE FOR LIBWEB APPLICATIONS' HTML DISPLAY
* LibWeb/HTML/Standard:: An interface defining HTML display for libweb applications
* LibWeb/Session:: Sessions management for libweb applications
* LibWeb/Themes/Default:: Default HTML widgets and theme for libweb applications
* LibWeb/Time:: Various time formats for libweb applications
* LinePrinter:: Perl extension for direct-to-lpd printing.
* Lingua/AM/Abbreviate:: Expand or Contract Amharic Abbreviations
* Lingua/Conjunction:: Convert Perl lists into linguistic conjunctions
* Lingua/DetectCharset:: Routine for automatically detecting cyrillic charset.
* Lingua/EN/AddressParse:: manipulate geographical addresses
* Lingua/EN/Fathom:: readability and general measurements of English text
* Lingua/EN/Gender:: Inflect pronouns for gender
* Lingua/EN/Hyphenate:: Perl extension for syllable-based hyphenation
* Lingua/EN/Infinitive:: Determine the infinitive form of a conjugated word
* Lingua/EN/Inflect:: Convert singular to plural. Select "a" or "an".
* Lingua/EN/MatchNames:: Smart matching for human names.
* Lingua/EN/NameCase:: Perl module to fix the case of people's names.
* Lingua/EN/NameGrammar:: Lingua::EN::NameGrammar
* Lingua/EN/NameParse:: routines for manipulating a persons name
* Lingua/EN/Nickname:: Genealogical nickname matching (Liz=Beth)
* Lingua/EN/Numbers:: Converts numeric values into their English string equivalents.
* Lingua/EN/Numbers/Easy:: Hash access to Lingua::EN::Numbers objects.
* Lingua/EN/Numbers/Ordinate:: go from cardinal number (3) to ordinal ("3rd")
* Lingua/EN/Nums2Words:: compute English verbage from numerical values
* Lingua/EN/Sentence:: Module for splitting text into sentences.
* Lingua/EN/Squeeze:: Shorten text to minimum syllables by using hash table and vowel deletion
* Lingua/EN/Summarize:: A simple tool for summarizing bodies of English text.
* Lingua/EN/Summarize/Filters:: Helper functions for the Summarize module
* Lingua/EN/Syllable:: Routine for estimating syllable count in words.
* Lingua/ID/Nums2Words:: convert number to Indonesian verbage.
* Lingua/ID/Words2Nums:: convert Indonesian verbage to number.
* Lingua/IW/Logical:: module for working with logical and visual hebrew
* Lingua/Ident:: Statistical language identification
* Lingua/Ispell:: a module encapsulating access to the Ispell program.
* Lingua/JA/Jtruncate:: module to truncate Japanese encoded text.
* Lingua/PT/UnConjugate:: Recognition of the conjugated forms of portuguese verbs.
* Lingua/Preferred:: Perl extension to choose a language
* Lingua/RU/Charset:: Perl extension for detecting and converting various russian character sets: KOI8-r, Windows-1251, CP866, ISO-8859-5, X-Mac-Cyrillic, russian text in english letters, russian part of Unicode and UTF-8. This module can be especially useful for computers with broken cyrillic locales (like foreign web hosts).
* Lingua/Romana/Perligata:: MISSING SHORT DESCRIPTION
* Lingua/Stem:: Stemming of words
* Lingua/Stem/AutoLoader:: A manager for autoloading Lingua::Stem modules
* Lingua/Stem/En:: Porter's stemming algorithm for 'generic' English
* Lingua/Stem/EnBroken:: Porter's stemming algorithm for 'generic' English
* Lingua/Wordnet:: Perl extension for accessing and manipulating Wordnet databases.
* Lingua/Wordnet/Analysis:: Perl extension for high-level processing of Wordnet databases.
* Linux/Fuser:: Determine which processes have a file open
* Lip/Pod:: MISSING SHORT DESCRIPTION
* List/Intersperse:: Intersperse / unsort / disperse a list
* List/Permutor:: Process all possible permutations of a list
* List/Util:: A selection of general-utility list subroutines
* LiveGeez/CacheAsSERA:: HTML Conversion for LiveGe'ez
* LiveGeez/Cgi:: Parse a LiveGe'ez CGI Query
* LiveGeez/File:: File Openning and Caching for LiveGe'ez
* LiveGeez/HTML:: HTML Conversions for LiveGe'ez
* LiveGeez/Local:: Site Specific Settings for Your LiveGe'ez Installation
* LiveGeez/Request:: Parse a LiveGe'ez CGI Query
* LiveGeez/Services:: Request Processing Services for LiveGe'ez
* LoadWorm:: WebSite Stress and Validation Tool
* Locale/Constants:: constants for Locale codes
* Locale/Country:: ISO codes for country identification (ISO 3166)
* Locale/Currency:: ISO three letter codes for currency identification (ISO 4217)
* Locale/Language:: ISO two letter codes for language identification (ISO 639)
* Locale/Maketext:: framework for software localization
* Locale/Msgcat:: Perl extension for blah blah blah
* Locale/PGetText:: pure perl i18n routines
* Locale/PO:: Perl module for manipulating .po entries from GNU gettext
* Locale/SubCountry:: convert state, province, county etc. names to/from code
* Locale/gettext:: message handling functions
* LockFile/Simple:: simple file locking scheme
* Log/Agent:: logging agent
* Log/Agent/Caller:: formats caller information
* Log/Agent/Channel:: ancestor class for all Log::Agent channels
* Log/Agent/Channel/File:: file logging channel for Log::Agent
* Log/Agent/Channel/Handle:: I/O handle logging channel for Log::Agent
* Log/Agent/Channel/Syslog:: syslog logging channel for Log::Agent::Logger
* Log/Agent/Driver:: ancestor class for all Log::Agent drivers
* Log/Agent/Driver/Datum:: interceptor driver to cooperate with Devel::Datum
* Log/Agent/Driver/Default:: default logging driver for Log::Agent
* Log/Agent/Driver/File:: file logging driver for Log::Agent
* Log/Agent/Driver/Silent:: silent logging driver for Log::Agent
* Log/Agent/Driver/Syslog:: syslog logging driver for Log::Agent
* Log/Agent/File/Native:: low-overhead IO::File
* Log/Agent/File/Rotate:: a rotating logfile set
* Log/Agent/Logger:: a logging interface
* Log/Agent/Message:: a log message
* Log/Agent/Priorities:: conversion between syslog priorities and levels
* Log/Agent/Rotate:: parameters for logfile rotation
* Log/Agent/Stamping:: time-stamping routines
* Log/Common:: log messages in the httpd access and error log styles
* Log/Dispatch:: Dispatches messages to multiple Log::Dispatch::* objects
* Log/Dispatch/ApacheLog:: Object for logging to Apache::Log objects
* Log/Dispatch/Base:: Code shared by dispatch and output objects.
* Log/Dispatch/Email:: Base class for objects that send log messages via email
* Log/Dispatch/Email/MIMELite:: Subclass of Log::Dispatch::Email that uses the Mail::Sendmail module
* Log/Dispatch/Email/MailSend:: Subclass of Log::Dispatch::Email that uses the Mail::Send module
* Log/Dispatch/Email/MailSendmail:: Subclass of Log::Dispatch::Email that uses the Mail::Sendmail module
* Log/Dispatch/File:: Object for logging to files
* Log/Dispatch/Handle:: Object for logging to IO::Handle objects (and subclasses thereof)
* Log/Dispatch/Output:: Base class for all Log::Dispatch::* object
* Log/Dispatch/Screen:: Object for logging to the screen
* Log/Dispatch/Syslog:: Object for logging to system log.
* Log/Dispatch/TkText:: Text widget for Log::Dispatch
* Log/Dispatch/ToTk:: Class to redirect Log::Dispatch to Tk widgets
* Log/ErrLogger:: Log errors and error-like events
* Log/LogLite:: The `Log::LogLite' class helps us create simple logs for our application.
* Log/Logger:: OO interface to user defined logfile
* Log/NullLogLite:: The `Log::NullLogLite' class implements the Null Object  pattern for the `Log::LogLite' class.
* Log/Topics:: control flow of logging messages
* Log/TraceMessages:: Perl extension for trace messages used in debugging
* Logfile:: Perl extension for generating reports from logfiles
* Logfile/Radius:: Perl module for generating reports from Radius                    Accounting logfiles
* Logfile/Rotate:: Perl module to rotate logfiles.
* MARC:: Perl extension to manipulate MAchine Readable Cataloging records.
* MARC/XML:: A subclass of MARC.pm to provide XML support.
* MCrypt:: Perl extension for MCrypt Crypto library
* MD5:: Perl interface to the MD5 Message-Digest Algorithm
* MIDI:: read, compose, modify, and write MIDI files.
* MIDI/Event:: MIDI events
* MIDI/Filespec:: MIDI File Specification
* MIDI/Opus:: functions and methods for MIDI opuses
* MIDI/Score:: MIDI scores
* MIDI/Simple:: procedural/OOP interface for MIDI composition
* MIDI/Track:: functions and methods for MIDI tracks
* MIME/Base64:: Encoding and decoding of base64 strings
* MIME/Body:: the body of a MIME message
* MIME/Decoder:: an object for decoding the body part of a MIME stream
* MIME/Decoder/Base64:: encode/decode a "base64" stream
* MIME/Decoder/Binary:: perform no encoding/decoding
* MIME/Decoder/Gzip64:: decode a "base64" gzip stream
* MIME/Decoder/NBit:: encode/decode a "7bit" or "8bit" stream
* MIME/Decoder/PGP:: decode a "radix-64" PGP stream
* MIME/Decoder/QuotedPrint:: encode/decode a "quoted-printable" stream
* MIME/Decoder/UU:: decode a "uuencoded" stream
* MIME/Entity:: class for parsed-and-decoded MIME message
* MIME/Field/ConTraEnc:: a "Content-transfer-encoding" field
* MIME/Field/ContDisp:: a "Content-disposition" field
* MIME/Field/ContType:: a "Content-type" field
* MIME/Field/ParamVal:: subclass of Mail::Field, for structured MIME fields
* MIME/Head:: MIME message header (a subclass of Mail::Header)
* MIME/Lite:: low-calorie MIME generator
* MIME/Lite/HTML:: Provide routine to transform a HTML page in a MIME-Lite mail
* MIME/Parser:: experimental class for parsing MIME streams
* MIME/Parser/Filer:: manage file-output of the parser
* MIME/Parser/Reader:: a line-oriented reader for a MIME::Parser
* MIME/Parser/Results:: results of the last entity parsed
* MIME/QuotedPrint:: Encoding and decoding of quoted-printable strings
* MIME/Tools:: tools - modules for parsing (and creating!) MIME entities
* MIME/Types:: Perl extension for determining MIME types and Transfer Encoding
* MIME/WordDecoder:: decode RFC-1522 encoded words to a local representation
* MIME/Words:: deal with RFC-1522 encoded words
* MLDBM:: store multi-level hash structure in single level tied hash
* MLDBM/Sync:: safe concurrent access to MLDBM databases
* MMM/Text/Search:: Perl module for indexing and searching text files and web objects
* MOP/MOP:: Perl extension providing a meta-object protocol for Perl modules.
* MOP/MetaModule:: Perl base class for all meta-modules.
* MOP/Remote:: Perl meta-module for transparent distribution of object oriented modules.
* MP3/Daemon:: a daemon that possesses mpg123
* MP3/Daemon/PIMP:: the daemon for Pip's Intergallactive Moosex Plaquluster
* MP3/Daemon/Simple:: the daemon for the mp3(1p) client
* MP3/ID3v1Tag:: Edit ID3v1 Tags from an Audio MPEG Layer 3.
* MP3/ID3v2-Data:: Data - GetFrame() Data Format
* MP3/Info:: Manipulate / fetch info from MP3 audio files
* MP3/Napster:: Perl interface to the Napster Server
* MP3/Napster/Base:: Autoload object accessors
* MP3/Napster/Channel:: Object-oriented access to Napster channels
* MP3/Napster/IOEvent:: MP3::Napster::IOEvent
* MP3/Napster/Registry:: Manage local songs shared by MP3::Napster
* MP3/Napster/Server:: MP3::Napster::Echo
* MP3/Napster/Song:: Object-oriented access to Napster shared songs
* MP3/Napster/User:: Object-oriented access to Napster users
* MP3/Napster/UserCommand:: MP3::Napster::Echo
* MP3/TAG/ID3v1:: Perl extension for reading / writing ID3v1 tags of mp3-files
* MP3/TAG/ID3v2:: Read / Write ID3v2.3 tags from MP3 audio files
* MP3/Tag:: Module for reading tags of MP3 audio files
* MP3/Tag/File:: Module for reading / writing files
* MP3/Tag/ID3v1:: Module for reading / writing ID3v1 tags of MP3 audio files
* MP3/Tag/ID3v2:: Read / Write ID3v2.3 tags from mp3 audio files
* MPEG/ID3v1Tag:: Edit ID3v1 Tags from an Audio MPEG Layer 3.
* MPEG/ID3v2Tag:: Parses and creates ID3v2 Tags for MPEG audio files.
* MPEG/MP3Info:: Manipulate / fetch info from MP3 audio files
* MQSeries:: Perl extension for MQSeries support
* MQSeries/Command:: OO interface to the Programmable Commands
* MQSeries/Config/Authority:: Interface to parse authority files
* MQSeries/Config/Machine:: Interface to read the machine configuration file
* MQSeries/Config/QMgr:: Interface to read the queue manager configuration file
* MQSeries/ErrorLog/Entry:: One entry in an MQSeries error-log file
* MQSeries/ErrorLog/Parser:: Parse a portion of an MQSeries error log and return parsed Entry objects.
* MQSeries/ErrorLog/Tail:: Watch MQSeries error-log files
* MQSeries/FDC/Entry:: One entry in an MQSeries FDC file
* MQSeries/FDC/Parser:: Parse a portion of an MQSeries FDC file and return parsed Entry objects.
* MQSeries/FDC/Tail:: Watch MQSeries FDC error files
* MQSeries/Message:: OO interface to MQSeries messages
* MQSeries/Message/Event:: OO Class for decoding MQSeries event messages
* MQSeries/Message/PCF:: Generic OO and procedurel interface to PCF (Programmable Command Format) messages.
* MQSeries/Message/Storable:: OO Class for sending and receiving perl references as MQSeries message application data
* MQSeries/Message/XML-Dumper:: Dumper - OO Class for sending and receiving perl references as MQSeries message application data in XML format, using the XML::Dumper module
* MQSeries/Queue:: OO interface to the MQSeries Queue objects
* MQSeries/QueueManager:: OO interface to the MQSeries Queue Manager
* MQSeries/Utils:: Internal utility functions
* MRP/BaseClass:: My base class object
* MRP/Interface:: defines object interfaces
* MRP/Introspection:: powerful introspection
* MRP/Text:: some text utilities
* MSDOS/Attrib:: Get or set MS-DOS file attributes
* MSDOS/Descript:: Manage 4DOS style DESCRIPT.ION files
* MVS/JESFTP:: Perl extension for submitting JCL to MVS systems through FTP.
* MVS/VBFile:: Perl extension to read and write variable-length MVS files
* Mac/AETE/App:: reads the Macintosh Apple event dictionary from an application.
* Mac/AETE/Dialect:: reads the Macintosh Apple event dictionary from an  Applescript dialect file.
* Mac/AETE/Format/Glue:: MISSING SHORT DESCRIPTION
* Mac/AETE/Parser:: parses Macintosh AETE and AEUT resources.
* Mac/AFDialogs:: GUI-Class to create the dialogs for AssistantFrame
* Mac/Apps/Anarchie:: Interface to Anarchie 2.01+
* Mac/Apps/Launch:: MacPerl module to launch applications
* Mac/Apps/MacPGP:: Interface to MacPGP 2.6.3
* Mac/Apps/PBar:: An AppleEvent Module for Progress Bar 1.0.1
* Mac/AssistantFrames:: GUI-Class to build an assistant-like line of frames resembles the standard OS assistants/wizards.
* Mac/Comm/OT_PPP:: Interface to Open Transport PPP
* Mac/FileSpec/Unixish:: Unixish-compatability in file specifications
* Mac/Glue:: Control Mac apps with Apple event terminology
* Mac/Macbinary:: Decodes Macbinary files
* Mac/OSA/Simple:: Simple access to Mac::OSA
* Mac/RecentDocuments:: add items to the MacOS Recent Documents menu
* Mail/Address:: Parse mail addresses
* Mail/Alias:: Maniulates mail alias files of various formats. Works on files directly or loads files into memory and works on the buffer.
* Mail/Audit:: Library for creating easy mail filters
* Mail/Audit/KillDups:: Mail::Audit plugin for duplicate suppression
* Mail/Audit/MAPS:: Mail::Audit plugin for RBL checking
* Mail/Audit/PGP:: Mail::Audit plugin for PGP header fixing
* Mail/Box:: Manage a message-folder.
* Mail/Box/Index:: Keep indexfiles on messages.
* Mail/Box/Locker:: Manage the locking of mail-folders
* Mail/Box/MH:: Handle folders with a file per message.
* Mail/Box/MH/Message:: a message in a MH-folder
* Mail/Box/Manager:: Manage a set of folders
* Mail/Box/Mbox:: Handle folders with many messages per file.
* Mail/Box/Mbox/Message:: a message in a Mbox folder
* Mail/Box/Message:: Manage one message within a mail-folder
* Mail/Box/Thread:: one discussion thread in a folder
* Mail/Box/Threads:: maintain threads within a folder
* Mail/Box/Tie:: Acces an existing message-folder as array
* Mail/Bulkmail:: Platform independent mailing list module
* Mail/Cap:: Parse mailcap files
* Mail/CheckUser:: checking email addresses for validness
* Mail/Field:: Base class for manipulation of mail header fields
* Mail/Field/AddrList:: object representation of e-mail address lists
* Mail/Field/Received:: mostly RFC822-compliant parser of Received headers
* Mail/Filter:: Filter mail through multiple subroutines
* Mail/FilterXML:: MISSING SHORT DESCRIPTION
* Mail/Folder:: A folder-independant interface to email folders.
* Mail/Folder/Emaul:: An Emaul folder interface for Mail::Folder.
* Mail/Folder/FastReader:: A fast mailbox reader
* Mail/Folder/Maildir:: A maildir folder interface for Mail::Folder.
* Mail/Folder/Mbox:: A Unix mbox interface for Mail::Folder.
* Mail/Folder/NNTP:: An NNTP folder interface for Mail::Folder.
* Mail/Freshmeat:: class for parsing e-mail newsletters from freshmeat.net
* Mail/Header:: manipulate mail RFC822 compliant headers
* Mail/IMAPClient:: An IMAP Client API
* Mail/Internet:: manipulate Internet format (RFC 822) mail messages
* Mail/IspMailGate/Filter:: An abstract base class of mail filters
* Mail/IspMailGate/Filter/Banner:: Add a banner message to outgoing mails
* Mail/IspMailGate/Filter/PGP:: Encrypt and decrypt mails with PGP
* Mail/IspMailGate/Filter/Packer:: Compressing emails
* Mail/IspMailGate/Filter/VirScan:: Scanning emails for Viruses
* Mail/ListDetector:: Perl extension for detecting mailing list messages
* Mail/ListDetector/Detector/Base:: base class for mailing list detectors
* Mail/ListDetector/Detector/Ezmlm:: Ezmlm message detector
* Mail/ListDetector/Detector/Listar:: Listar message detector
* Mail/ListDetector/Detector/Mailman:: Mailman message detector
* Mail/ListDetector/Detector/Majordomo:: Majordomo message detector
* Mail/ListDetector/Detector/RFC2369:: RFC2369 message detector
* Mail/ListDetector/Detector/Smartlist:: Smartlist message detector
* Mail/ListDetector/List:: an object representing a mailing list
* Mail/Mailer:: Simple interface to electronic mailing mechanisms
* Mail/MsgStore:: Complete mail client back end.
* Mail/POP3Client:: Perl 5 module to talk to a POP3 (RFC1939) server
* Mail/Procmail:: Procmail-like facility for creating easy mail filters.
* Mail/QuoteWrap:: Provides quotification functionality for Usenet articles and mail.
* Mail/RBL:: Perl extension to access RBL-style host verification services
* Mail/Send:: Simple electronic mail interface
* Mail/Sender:: module for sending mails with attachments through an SMTP server
* Mail/Sendmail:: Simple platform independent mailer
* Mail/Stats:: Perl module for getting quick statistics on procmail generated mailbox files.
* Mail/Stats/Record:: Perl module for holding stats about a mailbox
* Mail/TieFolder:: Tied hash interface for mail folders
* Mail/Util:: mail utility functions
* Mail/Vmailmgr:: A Perl module to use Vmailmgr daemon.
* Mail/XML:: Adds a toXML() method to Mail::Internet.
* Make:: module for processing makefiles
* Math/Amoeba:: MISSING SHORT DESCRIPTION
* Math/Approx:: Math::Approx
* Math/BaseCalc:: Convert numbers between various bases
* Math/Bezier:: solution of Bezier Curves
* Math/BigFloat:: Arbitrary length float math package
* Math/BigInt:: Arbitrary size integer math package
* Math/BigIntFast:: Efficient big integer arithmetic (in C)
* Math/BigInteger:: Arbitrary length integer extension module for Perl
* Math/Brent:: MISSING SHORT DESCRIPTION
* Math/Business/EMA:: Perl extension for calculating EMAs
* Math/CDF:: Generate probabilities and quantiles from several  statistical probability functions
* Math/Cephes:: perl interface to the cephes math library
* Math/Cephes/Complex:: Perl interface to the cephes complex number routines
* Math/Cephes/Fraction:: Perl interface to the cephes math fraction routines
* Math/Complex:: MISSING SHORT DESCRIPTION
* Math/Currency:: Exact Currency Math with Formatting and Rounding
* Math/Derivative:: MISSING SHORT DESCRIPTION
* Math/Expr:: Parses mathematical expressions
* Math/Expr/FormulaDB:: A db of formulas and there properties
* Math/Expr/MatchSet:: Represents matches in algebraic expretions
* Math/Expr/Node:: A node in the expretion tree, used as superclass only
* Math/Expr/Num:: Represents one number in a parsed expression tree
* Math/Expr/Opp:: Represents one operation in the parsed expression                      tree
* Math/Expr/OpperationDB:: A db of basic opperands properties
* Math/Expr/Rule:: Represents a agebraic rule
* Math/Expr/TypeDB:: A db of basic type and there properties
* Math/Expr/Var:: Represents one variable in a parsed expression tree
* Math/Expr/VarSet:: Represents a set of variables and there values
* Math/FFT:: Perl module to calculate Fast Fourier Transforms
* Math/Financial:: Calculates figures relating to loans and annuities.
* Math/FixedPrecision:: Decimal Math without Floating Point Errors
* Math/Fortran:: MISSING SHORT DESCRIPTION
* Math/Fraction:: To Manipulate Exact Fractions (v.53b, Beta Release)
* Math/FractionDemo:: Math::Fraction demo script (v.51b, Beta Release)
* Math/GMP:: High speed arbitrary size integer math
* Math/Geometry:: Geometry related functions
* Math/Integral/Romberg:: scalar numerical integration
* Math/Interpolate:: Interpolate the value Y from X using a list of (X, Y) pairs
* Math/IntervalSearch:: Search where an element lies in a list of sorted elements
* Math/Kleene:: the theory behind it
* Math/LP:: Object oriented interface to solving of linear programs using the lp_solve library
* Math/LP/Constraint:: representation of constraints in Math::LP objects
* Math/LP/LinearCombination:: linear combination of Math::LP::Variable objects
* Math/LP/Object:: base class for objects in the Math::LP family
* Math/LP/Variable:: variables used in linear programs
* Math/Libm:: Perl extension for the C math library, libm
* Math/Logic:: Provides pure 2, 3 or multi-value logic.
* Math/MagicSquare:: Magic Square Checker
* Math/Matrix:: Multiply and invert Matrices
* Math/MatrixBool:: Matrix of Booleans
* Math/MatrixReal:: Matrix of Reals
* Math/NumberCruncher:: Very useful, commonly needed math/statistics/geometric functions.
* Math/PRSG:: Perl interface to pseudo random sequence generator function.
* Math/Polynomial:: Perl class for working with polynomials.
* Math/Polynomial/Solve:: Find the roots of polynomial equations.
* Math/Rand48:: perl bindings for drand48() family of random functions
* Math/Random:: Random Number Generators
* Math/Round:: Perl extension for rounding numbers
* Math/SO3:: Perl extension for SO3 rotations
* Math/SigFigs:: do math with correct handling of significant figures
* Math/Spline:: MISSING SHORT DESCRIPTION
* Math/Trig:: trigonometric functions
* Math/TrulyRandom:: Perl interface to a truly random number generator function
* Math/Units:: Unit conversion
* Math/VecStat:: Some basic numeric stats on vectors
* Mcrypt:: Perl extension for the Mcrypt cryptography library
* MegaHAL:: Perl interface to the MegaHAL natural language             conversation simulator.
* MemHandle:: supply memory-based FILEHANDLE methods
* MemHandle/Tie:: The package which ties the MemHandle to memory.
* Memoize:: Make your functions faster by trading space for time
* Memoize/Expire:: Plug-in module for automatic expiration of memoized values
* Memoize/ExpireLRU:: Expiry plug-in for Memoize that adds LRU cache expiration
* Memoize/Saves:: Plug-in module to specify which return values should be memoized
* Metadata/Base:: base class for metadata
* Metadata/HTTP:: metadata class for HTTP log records
* Metadata/IAFA:: IAFA Template metadata class
* Metadata/SOIF:: SOIF object metadata class
* Mhash:: Perl extension for Mhash Hash library
* Mmap:: uses mmap to map in a file as a perl variable
* Modem/VBox:: Perl module for creation of voiceboxes.
* Modem/Vgetty:: interface to vgetty(8)
* Module/Check_Args:: a quick way to check argument counts for methods
* Module/Reload:: Reload %INC files when updated on disk
* ModuleBundle:: Combine several other modules into one package   =head1  SYNOPSIS
* Mon/Client:: Methods for interaction with Mon client
* Mon/Protocol:: Methods for parsing / dumping a protocol block
* Mon/SNMP:: decode SNMP trap
* Morse:: MISSING SHORT DESCRIPTION
* Mortal/Kombat:: Mortal Kombat program termination
* Msql:: Perl interfaces to the mSQL and mysql databases
* Msql/RDBMS:: Relational Database Management System for Msql
* MySQL/GUI:: MySQL::GUI     makes windows for connecting to and interacting with databases.
* MySQL/GUI/connection:: MySQL::GUI::connection   a window for interacting with the database.
* MySQL/GUI/connector:: MySQL::GUI::connector   a window for connecting to databases.
* MySQL/GUI/connector/dbase:: Perl extension    to make the db stuff a little less painless.
* Mysql:: Perl interfaces to the mSQL and mysql databases
* NDBM_File:: Tied access to ndbm files
* NIS/DBM:: Perl module implementing a NIS daemon.
* NNML/Server:: a minimal NNTP server
* NVDefined:: Perl extension for non-vivifying exists and defined functions
* Net/AIM:: MISSING SHORT DESCRIPTION
* Net/AIM/Connection:: Interface to an AIM connection
* Net/AIM/Event:: Object to hold event data
* Net/AOLIM:: Object-Oriented interface to the AOL Instant Messenger TOC client protocol
* Net/APP:: Critical Path Account Provisioning Protocol
* Net/Bind:: load various Net::Bind modules
* Net/Bind/Resolv:: a class to munge /etc/resolv.conf data.
* Net/Bind/Utils:: various routines common across Net::Bind packages.
* Net/CDDBScan:: String search interface to CDDB datbase
* Net/Cmd:: Network Command class (as used by FTP, SMTP etc)
* Net/Config:: Local configuration data for libnet
* Net/DLookup:: Perform domain lookups on 2-letter and 3-letter TLDs
* Net/DNS:: Perl interface to the DNS resolver
* Net/DNS/Header:: DNS packet header class
* Net/DNS/Packet:: DNS packet object class
* Net/DNS/Question:: DNS question class
* Net/DNS/RR:: DNS Resource Record class
* Net/DNS/RR/A:: DNS A resource record
* Net/DNS/RR/AAAA:: DNS AAAA resource record
* Net/DNS/RR/AFSDB:: DNS AFSDB resource record
* Net/DNS/RR/CNAME:: DNS CNAME resource record
* Net/DNS/RR/EID:: DNS EID resource record
* Net/DNS/RR/HINFO:: DNS HINFO resource record
* Net/DNS/RR/ISDN:: DNS ISDN resource record
* Net/DNS/RR/LOC:: DNS LOC resource record
* Net/DNS/RR/MB:: DNS MB resource record
* Net/DNS/RR/MG:: DNS MG resource record
* Net/DNS/RR/MINFO:: DNS MINFO resource record
* Net/DNS/RR/MR:: DNS MR resource record
* Net/DNS/RR/MX:: DNS MX resource record
* Net/DNS/RR/NAPTR:: DNS NAPTR resource record
* Net/DNS/RR/NIMLOC:: DNS NIMLOC resource record
* Net/DNS/RR/NS:: DNS NS resource record
* Net/DNS/RR/NSAP:: DNS NSAP resource record
* Net/DNS/RR/NULL:: DNS NULL resource record
* Net/DNS/RR/PTR:: DNS PTR resource record
* Net/DNS/RR/PX:: DNS PX resource record
* Net/DNS/RR/RP:: DNS RP resource record
* Net/DNS/RR/RT:: DNS RT resource record
* Net/DNS/RR/SOA:: DNS SOA resource record
* Net/DNS/RR/SRV:: DNS SRV resource record
* Net/DNS/RR/TXT:: DNS TXT resource record
* Net/DNS/RR/X25:: DNS X25 resource record
* Net/DNS/Resolver:: DNS resolver class
* Net/DNS/Update:: Create a DNS update packet
* Net/Daemon:: Perl extension for portable daemons
* Net/Daemon/Log:: Utility functions for logging
* Net/Daemon/SSL:: perl extensions for portable ssl daemons
* Net/Daemon/Test:: support functions for testing Net::Daemon servers
* Net/Dict:: client API for accessing dictionary servers (RFC 2229)
* Net/Domain:: Attempt to evaluate the current host's internet name and domain
* Net/DummyInetd:: A dummy Inetd server
* Net/FTP:: FTP Client class
* Net/FTP/Common:: Perl extension for simplifying common usages of Net::FTP.
* Net/FTP/Shell:: Perl extension for shell use of Net::FTP::Common
* Net/FTPServer:: A secure, extensible and configurable Perl FTP server
* Net/FTPServer/DBeg1/DirHandle:: The example DB FTP server personality
* Net/FTPServer/DBeg1/FileHandle:: The full FTP server personality
* Net/FTPServer/DBeg1/IOBlob:: The example DB FTP server personality
* Net/FTPServer/DBeg1/Server:: The DB example FTP server personality
* Net/FTPServer/DirHandle:: A Net::FTPServer directory handle.
* Net/FTPServer/FileHandle:: A Net::FTPServer file handle.
* Net/FTPServer/Full/DirHandle:: The full FTP server personality
* Net/FTPServer/Full/FileHandle:: The full FTP server personality
* Net/FTPServer/Full/Server:: The full FTP server personality
* Net/FTPServer/Handle:: A generic Net::FTPServer file or directory handle.
* Net/FTPServer/InMem/DirHandle:: Store files in local memory
* Net/FTPServer/InMem/FileHandle:: Store files in local memory
* Net/FTPServer/InMem/Server:: Store files in local memory
* Net/FTPServer/RO/DirHandle:: The anonymous, read-only FTP server personality
* Net/FTPServer/RO/FileHandle:: The anonymous, read-only FTP server personality
* Net/FTPServer/RO/Server:: The anonymous read-only FTP server personality
* Net/Finger:: a Perl implementation of a finger client.
* Net/Gen:: generic sockets interface handling
* Net/Goofey:: Communicate with a Goofey server
* Net/GrpNetworks:: Perl extension to determine in which network group a IP belongs to.
* Net/HTTPTunnel:: Create sockets that are tunnels through an HTTP 1.1 proxy
* Net/Hotline:: Perl libraries for the Hotline internet client
* Net/Hotline/Client:: Perl library for the Hotline internet client
* Net/Hotline/FileInfoItem:: File object used internally by Net::Hotline::Client
* Net/Hotline/FileListItem:: File object used internally by Net::Hotline::Client
* Net/Hotline/PrivateChat:: Private chat object used internally by Net::Hotline::Client
* Net/Hotline/Task:: Task object used internally by Net::Hotline::Client
* Net/Hotline/TrackerListItem:: File object used internally by Net::Hotline::Client
* Net/Hotline/User:: User object used internally by Net::Hotline::Client
* Net/ICB:: Object oriented interface to an fnet server.
* Net/ICQ:: Pure Perl interface to an ICQ server
* Net/IMAP:: A client interface to IMAP (Internet Message Access Protocol).
* Net/IMAP:: The following methods are available if the server advertises support for RFC2342 (IMAP4 Namespace).  Refer to that RFC for additional information.
* Net/IMAP/Simple:: Perl extension for simple IMAP account handling, mostly  compatible with Net::POP3.
* Net/IP:: Perl extension for manipulating IPv4/IPv6 addresses
* Net/IPv4Addr:: Perl extension for manipulating IPv4 addresses.
* Net/IRC:: Perl interface to the Internet Relay Chat protocol
* Net/IRC/Connection:: Object-oriented interface to a single IRC connection
* Net/IRC/DCC:: Object-oriented interface to a single DCC connection
* Net/IRC/Event:: A class for passing event data between subroutines
* Net/Ident:: lookup the username on the remote end of a TCP/IP connection
* Net/Inet:: Internet socket interface module
* Net/Interface:: Perl extension to access network interfaces
* Net/Jabber:: Jabber Perl Library
* Net/Jabber/Client:: Jabber Client Library
* Net/Jabber/Component:: Jabber Component Library
* Net/Jabber/Data:: Jabber Data Library
* Net/Jabber/Data/Auth:: Jabber XDB Authentication Module
* Net/Jabber/Debug:: Jabber Debug Library
* Net/Jabber/Dialback:: Jabber Dialback Module
* Net/Jabber/Dialback/Result:: Jabber Dialback Result Module
* Net/Jabber/Dialback/Verify:: Jabber Dialback Verify Module
* Net/Jabber/IQ:: Jabber Info/Query Library
* Net/Jabber/JID:: Jabber JID Module
* Net/Jabber/Key:: Jabber Key Library
* Net/Jabber/Log:: Jabber Log Module
* Net/Jabber/Message:: Jabber Message Module
* Net/Jabber/Presence:: Jabber Presence Module
* Net/Jabber/Protocol:: Jabber Protocol Library
* Net/Jabber/Query:: Jabber Query Library
* Net/Jabber/Query/Agent:: Jabber Query Agent Module
* Net/Jabber/Query/Agents:: Jabber Query Agents Module
* Net/Jabber/Query/Auth:: Jabber IQ Authentication Module
* Net/Jabber/Query/AutoUpdate:: Jabber IQ AutoUpdate Module
* Net/Jabber/Query/AutoUpdate/Release:: Jabber IQ AutoUpdate Release Module
* Net/Jabber/Query/Filter:: Jabber IQ Filter Module
* Net/Jabber/Query/Filter/Rule:: Jabber IQ Filter Rule Module
* Net/Jabber/Query/Fneg:: Jabber IQ Feature Negotiotation Module
* Net/Jabber/Query/Oob:: Jabber Query Out Of Bandwidth File Transfer Module
* Net/Jabber/Query/Register:: Jabber IQ Registration Module
* Net/Jabber/Query/Roster:: Jabber IQ Roster Module
* Net/Jabber/Query/Roster/Item:: Jabber IQ Roster Item Module
* Net/Jabber/Query/Search:: Jabber IQ Search Module
* Net/Jabber/Query/Search/Item:: Jabber IQ Search Item Module
* Net/Jabber/Query/Time:: Jabber IQ Time Module
* Net/Jabber/Query/Version:: Jabber IQ Version Module
* Net/Jabber/Server:: Jabber Server Library
* Net/Jabber/Transport:: Jabber Transport Library
* Net/Jabber/X:: Jabber X Module
* Net/Jabber/X/AutoUpdate:: Jabber X AutoUpdate Delegate
* Net/Jabber/X/Delay:: Jabber X Delay Delegate
* Net/Jabber/X/Encrypted:: Jabber X Encrypted Module
* Net/Jabber/X/Form:: Jabber X Form Module
* Net/Jabber/X/Form/Field:: Jabber X Form Field Module
* Net/Jabber/X/Form/Field/Option:: Jabber X Form Field Option Module
* Net/Jabber/X/GC:: Jabber X GroupChat Delegate
* Net/Jabber/X/Ident:: Jabber X Ident Delegate
* Net/Jabber/X/Oob:: Jabber X Out Of Bandwidth File Transfer Module
* Net/Jabber/X/ReplyPres:: Jabber X Reply Presence Notification
* Net/Jabber/X/Roster:: Jabber X Roster Module
* Net/Jabber/X/Roster/Item:: Jabber X Roster Item Module
* Net/Jabber/X/SXPM:: Jabber X SXPM Delegate
* Net/Jabber/X/SXPM/Map:: Jabber X SXPM Map Module
* Net/Jabber/X/Signed:: Jabber X Signed Module
* Net/Jabber/XDB:: Jabber XDB Library
* Net/LDAP:: Lightweight Directory Access Protocol
* Net/LDAP/BER:: BER encoding for LDAP
* Net/LDAP/Constant:: Constants for use with Net::LDAP
* Net/LDAP/Control:: LDAPv3 control object base class
* Net/LDAP/Control/Paged:: LDAPv3 Paged results control object
* Net/LDAP/Control/Sort:: Server Side Sort (SSS) control object
* Net/LDAP/Control/SortResult:: Server Side Sort (SSS) result control object
* Net/LDAP/Control/VLV:: LDAPv3 Virtual List View control object
* Net/LDAP/Control/VLVResponse:: LDAPv3 Virtual List View server response
* Net/LDAP/DSML:: A DSML Writer and Reader for Net::LDAP
* Net/LDAP/Entry:: An LDAP entry object
* Net/LDAP/Examples:: PERL LDAP by Example
* Net/LDAP/FAQ:: Frequently Asked Questions about Net::LDAP
* Net/LDAP/Filter:: representation of LDAP filters
* Net/LDAP/LDIF:: LDIF reading and writing
* Net/LDAP/Message:: Message response from LDAP server
* Net/LDAP/RFC:: List of related RFC's
* Net/LDAP/Reference:: search reference
* Net/LDAP/Schema:: Load and manipulate an LDAP v3 Schema
* Net/LDAP/Search:: Object returned by Net::LDAP search method
* Net/LDAP/Util:: Utility functions
* Net/LDAPS:: use LDAP over an SSL connection
* Net/LDAPapi:: Perl5 Module Supporting LDAP API
* Net/NIS:: Interface to Sun's Network Information Service
* Net/NISPlus/Table:: MISSING SHORT DESCRIPTION
* Net/NISTable:: Object Interface to Sun's Network Information Service
* Net/NISplusTied:: TIEHASH() interface to NIS+ tables
* Net/NNTP:: NNTP Client class
* Net/Netmask:: parse, manipulate and lookup IP network blocks
* Net/Netrc:: OO interface to users netrc file
* Net/PH:: CCSO Nameserver Client class
* Net/POP3:: Post Office Protocol 3 Client class (RFC1081)
* Net/Pager:: Send Numeric/AlphaNumeric Pages to any pager/phone around  the world through the SimpleWire network.
* Net/Patricia:: Patricia Trie perl module for fast IP address lookups
* Net/Pcap:: Interface to pcap(3) LBL packet capture library
* Net/PcapUtils:: Utility routines for Net::Pcap module
* Net/Ping:: check a remote host for reachability
* Net/Printer:: Perl extension for direct-to-lpd printing.
* Net/RMI:: Perl Remote Method Invocation (RMI) base class and utilities.
* Net/RMI/Client:: Perl client-side extension for Remote Method Invocation (RMI).
* Net/RMI/Server:: Perl server-side extension for Remote Method Invocation (RMI).
* Net/RRP:: there are file for RRP protocol and operations.
* Net/RRP/Codec:: codec class for serialization/deserialization of Net::RRP::Request/Response
* Net/RRP/Entity:: rrp entity abstraction class
* Net/RRP/Entity/Contact:: rrp contact entity representation.
* Net/RRP/Entity/Domain:: rrp domain entity representation.
* Net/RRP/Entity/NameServer:: rrp domain entity representation.
* Net/RRP/Entity/Owner:: rrp owner entity representation.
* Net/RRP/Entity/Registrar:: rrp registrar entity representation.
* Net/RRP/Entity/Replica:: rrp replica entity representation.
* Net/RRP/Protocol:: rrp protocol
* Net/RRP/Request:: rrp request abstraction class
* Net/RRP/Request/Add:: rrp add request representation.
* Net/RRP/Request/Check:: rrp check request representation.
* Net/RRP/Request/Del:: rrp delete request representation.
* Net/RRP/Request/Delete:: rrp delete request representation.
* Net/RRP/Request/Describe:: rrp describe request representation.
* Net/RRP/Request/Mod:: rrp mod request representation.
* Net/RRP/Request/Quit:: rrp quit request representation.
* Net/RRP/Request/Renew:: rrp renew request representation.
* Net/RRP/Request/Reverse:: rrp reverse request representation. This command must reverse protocol for replication issues.
* Net/RRP/Request/Session:: rrp session request representation.
* Net/RRP/Request/Status:: rrp status request representation.
* Net/RRP/Request/Transfer:: rrp transfer request representation.
* Net/RRP/Response:: the base class for the Net::RRP::Response::* classes
* Net/RRP/Response/n200:: the rrp response 200 representation
* Net/RRP/Response/n210:: the rrp response 210 representation
* Net/RRP/Response/n211:: the rrp response 211 representation
* Net/RRP/Response/n212:: the rrp response 212 representation
* Net/RRP/Response/n213:: the rrp response 213 representation
* Net/RRP/Response/n220:: the rrp response 220 representation
* Net/RRP/Response/n420:: the rrp response 420 representation
* Net/RRP/Response/n421:: the rrp response 421 representation
* Net/RRP/Response/n500:: the rrp response 500 representation
* Net/RRP/Response/n501:: the rrp response 501 representation
* Net/RRP/Response/n502:: the rrp response 502 representation
* Net/RRP/Response/n503:: the rrp response 503 representation
* Net/RRP/Response/n504:: the rrp response 504 representation
* Net/RRP/Response/n505:: the rrp response 505 representation
* Net/RRP/Response/n506:: the rrp response 506 representation
* Net/RRP/Response/n507:: the rrp response 507 representation
* Net/RRP/Response/n508:: the rrp response 508 representation
* Net/RRP/Response/n509:: the rrp response 509 representation
* Net/RRP/Response/n520:: the rrp response 520 representation
* Net/RRP/Response/n521:: the rrp response 521 representation
* Net/RRP/Response/n530:: the rrp response 530 representation
* Net/RRP/Response/n531:: the rrp response 531 representation
* Net/RRP/Response/n532:: the rrp response 532 representation
* Net/RRP/Response/n533:: the rrp response 533 representation
* Net/RRP/Response/n534:: the rrp response 534 representation
* Net/RRP/Response/n535:: the rrp response 535 representation
* Net/RRP/Response/n536:: the rrp response 536 representation
* Net/RRP/Response/n540:: the rrp response 540 representation
* Net/RRP/Response/n541:: the rrp response 541 representation
* Net/RRP/Response/n542:: the rrp response 542 representation
* Net/RRP/Response/n543:: the rrp response 543 representation
* Net/RRP/Response/n544:: the rrp response 544 representation
* Net/RRP/Response/n545:: the rrp response 545 representation
* Net/RRP/Response/n546:: the rrp response 546 representation
* Net/RRP/Response/n547:: the rrp response 547 representation
* Net/RRP/Response/n548:: the rrp response 548 representation
* Net/RRP/Response/n549:: the rrp response 549 representation
* Net/RRP/Response/n550:: the rrp response 550 representation
* Net/RRP/Response/n551:: the rrp response 551 representation
* Net/RRP/Response/n552:: the rrp response 552 representation
* Net/RRP/Response/n553:: the rrp response 553 representation
* Net/RRP/Response/n554:: the rrp response 554 representation
* Net/RRP/Response/n555:: the rrp response 555 representation
* Net/RRP/Response/n556:: the rrp response 556 representation
* Net/RRP/Toolkit:: big hole of usefull methods :)
* Net/Radius/Dictionary:: RADIUS dictionary parser
* Net/Radius/Packet:: Object-oriented Perl interface to RADIUS packets
* Net/RawIP:: Perl extension for manipulate raw ip packets with interface to *libpcap*
* Net/RawIP/libpcap:: An interface to *libpcap* in Net::RawIP(3pm)
* Net/Rexec:: Perl extension for the client side of the REXEC protocol.
* Net/SCP:: Perl extension for secure copy protocol
* Net/SMS:: Send SMS messages to ANY device.
* Net/SMS/Genie:: a module to send SMS messages using the Genie web2sms gateway (htto://www.genie.co.uk/).
* Net/SMS/Request:: Constructs a request object to be used in conjunction with Net::SMS.
* Net/SMS/Response:: An object that represents the response back from a request sent to SimpleWire.  To be used in conjunction with Net::SMS and Net::SMS::Request.
* Net/SMTP:: Simple Mail Transfer Protocol Client
* Net/SMTP/Server:: A native Perl SMTP Server implementation for Perl.
* Net/SMTP/Server/Client:: Client session handling for Net::SMTP::Server.
* Net/SMTP/Server/Relay:: A simple relay module for Net::SMTP::Server.
* Net/SNMP:: Simple Network Management Protocol
* Net/SNMP/Interfaces:: provide simple methods to gain interface data via
* Net/SNMP/Interfaces/Details:: Object methods to obtain interface data.
* Net/SNPP:: Simple Network Pager Protocol Client
* Net/SOCKS:: a SOCKS client class
* Net/SSH:: Perl extension for secure shell
* Net/SSH/Perl:: Perl client Interface to SSH
* Net/SSH/Perl/Auth:: Base authentication class, plus utility methods
* Net/SSH/Perl/Auth/Password:: Password authentication plugin
* Net/SSH/Perl/Auth/RSA:: Perform RSA authentication
* Net/SSH/Perl/Auth/Rhosts:: Perform Rhosts authentication
* Net/SSH/Perl/Auth/Rhosts_RSA:: Perform Rhosts-RSA authentication
* Net/SSH/Perl/Buffer:: Low-level read/write buffer class
* Net/SSH/Perl/Cipher:: Base cipher class, plus utility methods
* Net/SSH/Perl/Cipher/Blowfish:: Wrapper for SSH Blowfish support
* Net/SSH/Perl/Cipher/CBC:: CBC Implementation
* Net/SSH/Perl/Cipher/CFB:: CFB Implementation
* Net/SSH/Perl/Cipher/DES:: Wrapper for SSH DES support
* Net/SSH/Perl/Cipher/DES3:: Wrapper for SSH 3DES support
* Net/SSH/Perl/Cipher/IDEA:: Wrapper for SSH IDEA support
* Net/SSH/Perl/Config:: Load and manage SSH configuration
* Net/SSH/Perl/Constants:: Exportable constants
* Net/SSH/Perl/Packet:: Packet layer of SSH protocol
* Net/SSH/Perl/Util:: Shared utility functions
* Net/Server:: Extensible, general Perl server engine
* Net/Server/Fork:: Net::Server personality
* Net/Server/INET:: Net::Server personality
* Net/Server/MultiType:: Net::Server personality
* Net/Server/PreFork:: Net::Server personality
* Net/Server/Single:: Net::Server personality
* Net/Spooler:: A Perl extension for writing spooling daemons
* Net/Subnet/Count:: Count hosts in named subnets
* Net/Syslog:: Perl extension for sending syslog messages directly to a remote syslogd.
* Net/TCP:: TCP sockets interface module
* Net/TCP/Server:: TCP sockets interface module for listeners and servers
* Net/TFTP:: TFTP Client class
* Net/Telnet:: interact with TELNET port or other TCP ports
* Net/Telnet/Cisco:: interact with a Cisco router
* Net/Time:: time and daytime network client interface
* Net/Traceroute:: traceroute(1) functionality in perl
* Net/UDP:: UDP sockets interface module
* Net/UNIX:: UNIX-domain sockets interface module
* Net/UNIX/Server:: UNIX-domain sockets interface module for listeners
* Net/Wake:: A package to send packets to power on computers.
* Net/Whois:: Get and parse "whois" domain data from InterNIC
* Net/XWhois:: Whois Client Interface for Perl5.
* Net/Z3950:: Perl extension for talking to Z39.50 servers.
* Net/Z3950/APDU:: Read-only objects representing decoded Z39.50 APDUs
* Net/Z3950/Connection:: Connection to a Z39.50 server, with request queue
* Net/Z3950/Manager:: State manager for multiple Z39.50 connections.
* Net/Z3950/Record:: base class for records retrieved from a Z39.50 server
* Net/Z3950/ResultSet:: result set received in response to a Z39.50 search
* Net/Z3950/Tutorial:: tutorial for the Net::Z3950 module
* Net/hostent:: by-name interface to Perl's built-in gethost*() functions
* Net/libnetFAQ:: libnet Frequently Asked Questions
* Net/netent:: by-name interface to Perl's built-in getnet*() functions
* Net/protoent:: by-name interface to Perl's built-in getproto*() functions
* Net/servent:: by-name interface to Perl's built-in getserv*() functions
* Net/xAP:: A base class for protocols such as IMAP, ACAP, IMSP, and ICAP.
* NetAddr/IP:: Manipulate IP Addresses easily
* NetAddr/IP/Count:: Count hosts in named subnets
* NetPacket:: modules to assemble/disassemble network packets at the protocol level.
* NetPacket/ARP:: Assemble and disassemble ARP (Address Resolution Protocol) packets.
* NetPacket/Ethernet:: Assemble and disassemble ethernet packets.
* NetPacket/ICMP:: Assemble and disassemble ICMP (Internet Control Message Protocol) packets.
* NetPacket/IGMP:: Assemble and disassemble IGMP (Internet Group Mangement Protocol) packets.
* NetPacket/IP:: Assemble and disassemble IP (Internet Protocol) packets.
* NetPacket/TCP:: Assemble and disassemble TCP (Transmission Control Protocol) packets.
* NetPacket/UDP:: Assemble and disassemble UDP (User Datagram Protocol) packets.
* NetServer/Generic:: generic TCP/IP server class
* NetServer/Portal:: Interactively Manipulate Daemon Processes
* NetServer/Portal/Top:: Make event loop statistics easily available
* NetServer/SMTP:: basic SMTP server class for Perl
* Netscape/Bookmarks:: Process and manipulate Netscape bookmarks files
* Netscape/Cache:: object class for accessing Netscape cache files
* Netscape/History:: object class for accessing Netscape history database
* Netscape/HistoryURL:: URI::URL subclass with Netscape history information
* Netscape/Registry:: emulate perl CGI programming under nsapi_perl
* Netscape/Server:: framework for integrating Perl and Netscape servers
* Netscape/Server/Request:: Perl interface to Netscape server Request
* Netscape/Server/Session:: Perl interface to Netscape server Session
* Netscape/Server/Socket:: Netscape httpd/client socket class
* Network/IPv4Addr:: Perl extension for manipulating IPv4 addresses.
* News/Article:: Object for handling Usenet articles in mail or news form.
* News/AutoReply:: derivative of News::Article for generating autoreplies
* News/FormArticle:: derivative of News::Article
* News/FormReply:: derivative of News::FormArticle and News::AutoReply
* News/Gateway:: Tools for gatewaying messages between news and mail.
* News/NNTPClient:: Perl 5 module to talk to NNTP (RFC977) server
* News/Newsrc:: manage newsrc files
* News/Scan:: gather and report Usenet newsgroup statistics
* News/Scan/Article:: collect information about news articles
* News/Scan/Poster:: keep track of posters to a newsgroup
* News/Scan/Thread:: keep track of threads in a Usenet newsgroup
* Newt:: Perl bindings for RedHat newt library
* No/Dato:: Norwegian dates
* No/KontoNr:: Check Norwegian bank account numbers
* No/PersonNr:: Check Norwegian Social security numbers
* No/Sort:: Norwegian sorting
* No/Telenor:: Calculate telephone call prices in Norway
* Number/Encode:: Encode bit strings into digit strings
* Number/Format:: Perl extension for formatting numbers
* Number/Latin:: convert to/from the number system "a,b,...z,aa,ab..."
* Number/Phone/US:: Validate US phone numbers
* Number/Spell:: Perl extension for spelling out numbers
* Number/Spice:: handling of Spice number strings
* O:: Generic interface to Perl Compiler backends
* ODBM_File:: Tied access to odbm files
* OLE/PropertySet:: Handles Property Sets
* OLE/Storage:: An Interface to *Structured Storage* Documents.
* OLE/Storage/Handler:: Handle functions for OLE::Storage::Var
* OLE/Storage/Io:: Laola's IO interface
* OLE/Storage/Iolist:: Data management for OLE::Storage::Io (*alpha*)
* OLE/Storage/Property:: maintain Properties for OLE::Storage::Var
* OLE/Storage/Var:: Variable handling for properties
* OLE/Storage_Lite:: Simple Class for OLE document interface. (Version: 0.08)
* OO/Closures:: Object Oriented Programming using Closures.
* OS2/Attrib:: Get or set OS/2 file attributes
* OS2/Focus:: Perl extension to get and set focus on PM windows.
* OS2/Proc:: Perl extension for blah blah blah
* OS2/Process:: exports constants for system() call on OS2.
* OS2/SoftInstaller:: Perl extension for generation of daughter packages for IBM's Software Installer.
* OS2/WinObject:: Perl extension for blah blah blah
* OS390/Stdio:: S/390 standard I/O functions via POSIX/XPG extensions
* Object/Transaction:: Virtual base class for transactions on files containing serialized hash objects
* Ogg/Vorbis:: Perl extension for Ogg Vorbis streams
* Opcode:: Disable named opcodes when compiling perl code
* OpenCA/CRL:: CRL Management module.
* OpenCA/CRR:: Perl extention to handle CRR objects.
* OpenCA/Configuration:: Perl extention to deal with config files.
* OpenCA/DB:: Perl Certificates DB Extention.
* OpenCA/OpenSSL:: Perl Crypto Extention to OpenSSL
* OpenCA/PKCS7:: Perl extension for basic handling PKCS#7 Signatures.
* OpenCA/REQ:: Perl extension to easily manage Cert REQUESTs
* OpenCA/TRIStateCGI:: Perl extension for implementing 3-state Input Objs.
* OpenCA/Tools:: Misc Utilities PERL Extention.
* OpenCA/X509:: Perl extension for basic handling x509 Certificates.
* OpenInteract:: A robust web application framework built to run under Apache and mod_perl
* OpenInteract/ApacheStartup:: Central module to call for initializing an OpenInteract website
* OpenInteract/Config:: centralized configuration information
* OpenInteract/Config/PerlFile:: subclass of OpenInteract::Config for reading information from a perl file
* OpenInteract/DBI:: Centralized connection location to DBI databases
* OpenInteract/Error:: Provide central holding location for Interact errors
* OpenInteract/Package:: Perform actions on individual packages
* OpenInteract/PackageRepository:: Operations to represent, install, remove and otherwise manipulate package repositories.
* OpenInteract/Request:: container for request info and output
* OpenInteract/SPOPS:: Define common behaviors for all SPOPS objects in the OpenInteract Framework
* OpenInteract/SQLInstall:: Dispatcher for installing various SQL data from packages to database
* OpenInteract/Startup:: Bootstrapper that reads in modules, manipulates @INC, etc.
* OurNet:: Interface to BBS-based groupware platforms
* OurNet/BBS:: Component Object Model for BBS systems
* OurNet/BBSAgent:: Scriptable telnet-based virtual users
* OurNet/Cell:: Interface-based RPC with relay & locating
* OurNet/ChatBot:: Context-free interactive Q&A engine
* OurNet/FuzzyIndex:: Inverted index for double-byte characters
* OurNet/Query:: Perform scriptable queries via LWP
* OurNet/Site:: Extract web pages via templates
* OurNet/WebBuilder:: Web rendering for BBS-based services
* P4/Client:: Perl extension for the Perforce API
* P4/UI:: User interface object for Perforce API
* PApp/SQL:: absolutely easy yet fast and powerful sql access
* PDF:: Library for PDF access and manipulation in Perl
* PDF/Core:: Core Library for PDF library
* PDF/Create:: create PDF files
* PDF/Labels:: Routines to produce formatted pages of mailing labels in PDF
* PDF/Pages:: Library for parsing the PDF tree structure in Perl
* PDF/Parse:: Library with parsing functions for PDF library
* PDL:: Main loader of PDL default modules
* PDL/Audio:: Some PDL functions intended for audio processing.
* PDL/Audio/Pitches:: All the standard musical pitch names.
* PDL/Audio/Scales:: Over 1200 musical scales in PDL format.
* PDL/AutoLoader:: MatLab style AutoLoader for PDL
* PDL/Bad:: PDL does not process bad values
* PDL/BadValues:: Discussion of bad value support in PDL
* PDL/Basic:: Basic utility functions for PDL
* PDL/CallExt:: call functions in external shared libraries
* PDL/Char:: PDL subclass which allows reading and writing of fixed-length character strings as byte PDLs
* PDL/Complex:: handle complex numbers
* PDL/Core:: fundamental PDL functionality
* PDL/Core/Dev:: PDL development module
* PDL/Dataflow:: description of the dataflow philosophy
* PDL/Dbg:: functions to support debugging of PDL scripts
* PDL/Delta:: PDL changes between V1.0 and V2.0
* PDL/Doc:: support for PDL online documentation
* PDL/Doc/Perldl:: commands for accessing PDL doc database from 'perldl' shell
* PDL/Exporter:: PDL export control
* PDL/FAQ:: Frequently asked questions about PDL
* PDL/FFT:: FFTs for PDL
* PDL/Filter/LinPred:: Linear predictive filtering
* PDL/Filter/Linear:: linear filtering for PDL
* PDL/Fit/Gaussian:: routines for fitting gaussians
* PDL/Fit/LM:: Levenber-Marquardt fitting routine for PDL
* PDL/Fit/Linfit:: routines for fitting data with linear combinations of functions.
* PDL/Fit/Polynomial:: routines for fitting with polynomials
* PDL/Func:: useful functions
* PDL/Gaussian:: Gaussian distributions.
* PDL/Graphics2D:: An object oriented interface to PDL graphics
* PDL/Graphics/IIS:: Display PDL images on IIS devices (saoimage/ximtool)
* PDL/Graphics/LUT:: provides access to a number of look-up tables
* PDL/Graphics/OpenGL:: a PDL interface to the OpenGL graphics library. PDL::Graphics::OpenGLOO - an Object Oriented interface to the interface.
* PDL/Graphics/OpenGLQ:: quick routines to plot lots of stuff from piddles.
* PDL/Graphics/PGPLOT:: PGPLOT enhanced interface for PDL
* PDL/Graphics/PGPLOT/Window:: A OO interface to PGPLOT windows
* PDL/Graphics/PGPLOTOptions:: Setting PGPLOT options
* PDL/Graphics/TriD:: PDL 3D interface
* PDL/Graphics/TriD/ButtonControl:: default event handler subroutines
* PDL/Graphics/TriD/Contours:: 3D Surface contours for TriD
* PDL/Graphics/TriD/Geomview:: MISSING SHORT DESCRIPTION
* PDL/Graphics/TriD/Labels:: Text tools
* PDL/Graphics/TriD/MathGraph:: Mathematical Graph objects for PDL
* PDL/Graphics/TriD/Objects:: Simple Graph Objects for TriD
* PDL/Graphics/TriD/Rout:: Helper routines for Three-dimensional graphics
* PDL/Graphics/TriD/Tk:: A Tk widget interface to the PDL::Graphics::TriD.
* PDL/Graphics/TriD/VRML:: TriD VRML backend
* PDL/IO/Browser:: 2D data browser for PDL
* PDL/IO/FastRaw:: A simple, fast and convenient io format for PerlDL.
* PDL/IO/FlexRaw:: A flexible binary i/o format for PerlDL.
* PDL/IO/Grib:: Grib file utilities for perl
* PDL/IO/Grib/Field:: Field tools for Grib files
* PDL/IO/Grib/Wgrib:: shamelessly stolen code
* PDL/IO/Misc:: misc IO routines for PDL
* PDL/IO/NDF:: PDL Module for reading and writing Starlink N-dimensional data structures as PDLs.
* PDL/IO/Pic:: image I/O for PDL
* PDL/IO/Pnm:: pnm format I/O for PDL
* PDL/Image2D:: Miscellaneous 2D image processing functions
* PDL/ImageND:: useful image processing routines which work in N-dimensions
* PDL/ImageRGB:: some utility functions for RGB image data handling
* PDL/Impatient:: PDL for the impatient (quick overview)
* PDL/Index:: an index of PDL documentation
* PDL/Indexing:: how to index piddles.
* PDL/Internals:: description of the current internals
* PDL/Intro:: Introduction to the Perl Data Language
* PDL/Lite:: minimum PDL module OO loader
* PDL/LiteF:: minimum PDL module function loader
* PDL/Math:: extended mathematical operations and special functions
* PDL/Objects:: Object-Orientation, what is it and how to exploit it
* PDL/Ops:: Fundamental mathematical operators
* PDL/Opt/Simplex:: Simplex optimization routines
* PDL/Options:: simplifies option passing by hash in PerlDL
* PDL/PP:: Generate PDL routines from concise descriptions
* PDL/PP/Dump:: dump pp_xxx calls to stdout
* PDL/PP/Signature:: Internal module to handle signatures
* PDL/Philosophy:: what's behind PDL?
* PDL/Pod/Html:: module to convert pod files to HTML
* PDL/Pod/Parser:: base class for creating pod filters and translators
* PDL/Pod/Select:: function to extract selected sections of pod documentation
* PDL/Pod/Usage:: print a usage message using a script's embedded pod documentation
* PDL/Primitive:: primitive operations for pdl
* PDL/Reduce:: a reduce function for PDL
* PDL/Slatec:: PDL interface to the slatec numerical programming library
* PDL/Slices:: Stupid index tricks
* PDL/Tests:: tests for some PP features
* PDL/Tips:: Small tidbits of useful arcana. Programming tidbits and such.
* PDL/Types:: define fundamental PDL Datatypes
* PDL/Ufunc:: primitive ufunc operations for pdl
* PDL/pdldoc:: MISSING SHORT DESCRIPTION
* PGP/Sign:: Create detached PGP signatures for data, securely
* PGPLOT:: allow subroutines in the PGPLOT graphics library to be called from Perl.
* PML:: PML (PML Markup Lanuage)
* PML/File:: MISSING SHORT DESCRIPTION
* PML/Headers:: =head1 SYNOPSIS Quick Usage
* PML/Storable:: MISSING SHORT DESCRIPTION
* PNGgraph:: Graph Plotting Module for Perl 5
* PNGgraph/colour:: Colour manipulation routines for use with PNGgraph
* POE:: event driven state machines
* POE/Component:: POE Stand-Alone Sessions
* POE/Component/IRC:: a fully event-driven IRC client module.
* POE/Component/IRC/Onjoin:: Provides IRC moved message & onjoin services
* POE/Component/Pcap:: POE Interface to Net::Pcap
* POE/Component/RSS:: Event based RSS parsing
* POE/Component/Server/TCP:: simplified TCP server
* POE/Component/SubWrapper:: event based wrapper for subs
* POE/Component/UserBase:: a component to manage user authentication
* POE/Driver:: POE Read/Write Abstraction
* POE/Driver/SysRW:: POE sysread/syswrite Abstraction
* POE/Filter:: POE Protocol Abstraction
* POE/Filter/Block:: POE Block Protocol Abstraction
* POE/Filter/CTCP:: A POE-based parser for the IRC protocol.
* POE/Filter/HTTPD:: POE HTTP 1.0 (Server Side) Protocol Abstraction
* POE/Filter/IRC:: A POE-based parser for the IRC protocol.
* POE/Filter/Line:: POE Line Protocol Abstraction
* POE/Filter/Reference:: POE Freeze/Thaw Protocol Abstraction
* POE/Filter/Stream:: POE Stream (Null) Protocol Abstraction
* POE/Kernel:: an event dispatcher and resource watcher
* POE/NFA:: a Nondeterministic Finite Automaton session
* POE/Preprocessor:: A Macro Preprocessor
* POE/Session:: a POE thread of execution
* POE/Wheel:: high-level protocol logic
* POE/Wheel/FollowTail:: POE FollowTail Protocol Logic
* POE/Wheel/ListenAccept:: POE Listen/Accept Logic Abstraction
* POE/Wheel/ReadWrite:: POE Read/Write Logic Abstraction
* POE/Wheel/SocketFactory:: POE Socket Creation Logic Abstraction
* POSIX:: Perl interface to IEEE Std 1003.1
* PPM:: PPM (Perl Package Management)
* PPM/SOAPClient:: SOAP client for PPM repository
* PPM/SOAPServer:: SOAP server for PPM repository
* Palm/Address:: Handler for Palm AddressBook databases.
* Palm/Datebook:: Handler for Palm DateBook databases.
* Palm/Mail:: Handler for Palm Mail databases.
* Palm/Memo:: Handler for Palm Memo databases.
* Palm/PDB:: Parse Palm database files.
* Palm/PunchClock:: Perl extension for parsing PunchClock pdb files
* Palm/Raw:: Handler for "raw" Palm databases.
* Palm/StdAppInfo:: Handles standard AppInfo block
* Palm/ToDo:: Handler for Palm ToDo databases.
* Parallel/ForkManager:: A simple parallel processing fork manager
* Parallel/MPI:: Perl interface to the MPI message passing system
* Params/Validate:: Validate method/function parameters
* Parse/CLex:: Generator of lexical analyzers
* Parse/FixedLength:: MISSING SHORT DESCRIPTION
* Parse/Lex:: Generator of lexical analyzers
* Parse/LexEvent:: Generator of event-oriented lexical analyzers (1.00 ALPHA)
* Parse/PerlConfig:: parse a configuration file written in Perl
* Parse/RecDescent:: Generate Recursive-Descent Parsers
* Parse/RecDescent/Consumer:: Perl extension for blah blah blah
* Parse/Template:: Processor for templates containing Perl expressions
* Parse/Text:: Perl module for parsing plain text files
* Parse/Token:: Definition of tokens used by `Parse::Lex'
* Parse/Tokens:: class for parsing text with embedded tokens
* Parse/Vipar:: Visual LALR parser debugger
* Parse/YALALR/Run:: Yet Another LALR parser
* Parse/YYLex:: version of Parse::Lex to be used by a byacc parser.
* Parse/Yapp:: Perl extension for generating and using LALR parsers.
* Parse/iPerl:: engine for bringing any text documents alive with bits of embedded Perl
* Passwd/DB:: Perl module for manipulating a password file stored in a BerkeleyDB hash
* Passwd/Linux:: Perl module for manipulating the passwd and shadow files
* Passwd/Solaris:: Perl module for manipulating the passwd and shadow files
* Paw:: MISSING SHORT DESCRIPTION
* Paw/Box:: MISSING SHORT DESCRIPTION
* Paw/Box-de:: MISSING SHORT DESCRIPTION
* Paw/Button:: MISSING SHORT DESCRIPTION
* Paw/Button-de:: MISSING SHORT DESCRIPTION
* Paw/Filedialog:: MISSING SHORT DESCRIPTION
* Paw/Filedialog-de:: MISSING SHORT DESCRIPTION
* Paw/Label:: MISSING SHORT DESCRIPTION
* Paw/Label-de:: MISSING SHORT DESCRIPTION
* Paw/Line:: MISSING SHORT DESCRIPTION
* Paw/Line-de:: MISSING SHORT DESCRIPTION
* Paw/Listbox:: MISSING SHORT DESCRIPTION
* Paw/Listbox-de:: MISSING SHORT DESCRIPTION
* Paw/Menu:: MISSING SHORT DESCRIPTION
* Paw/Menu-de:: MISSING SHORT DESCRIPTION
* Paw/Paw-de:: MISSING SHORT DESCRIPTION
* Paw/Popup:: MISSING SHORT DESCRIPTION
* Paw/Popup-de:: MISSING SHORT DESCRIPTION
* Paw/Popup_menu:: MISSING SHORT DESCRIPTION
* Paw/Progressbar:: MISSING SHORT DESCRIPTION
* Paw/Progressbar-de:: MISSING SHORT DESCRIPTION
* Paw/Radiobutton:: MISSING SHORT DESCRIPTION
* Paw/Radiobutton-de:: MISSING SHORT DESCRIPTION
* Paw/Scrollbar:: MISSING SHORT DESCRIPTION
* Paw/Scrollbar-de:: MISSING SHORT DESCRIPTION
* Paw/Text_entry:: MISSING SHORT DESCRIPTION
* Paw/Text_entry-de:: MISSING SHORT DESCRIPTION
* Paw/Textbox:: MISSING SHORT DESCRIPTION
* Paw/Textbox-de:: MISSING SHORT DESCRIPTION
* Paw/Window:: MISSING SHORT DESCRIPTION
* Paw/Window-de:: MISSING SHORT DESCRIPTION
* Penguin/Easy:: provides easy access to Penguin module.
* Perf/ARM:: Perl extension wrapper for the ARM 2.0 implementation
* PerlPoint/Backend:: frame class to transform PerlPoint::Parser output
* PerlPoint/Constants:: public PerlPoint::... module constants
* PerlPoint/Parser:: a PerlPoint Parser
* Perlbug:: PerlBug DataBase
* Perlbug/Base:: Module for bringing together Config, Log, Format, Do, TM, Mysql etc.
* Perlbug/Cmd:: Command line interface to perlbug database.
* Perlbug/Config:: Perlbug Configuration data handler
* Perlbug/Do:: Commands (switches) for generic interface to perlbug database.
* Perlbug/Email:: Email interface to perlbug database.
* Perlbug/Fix:: Command line interface to fixing perlbug database.
* Perlbug/Format:: Formats for email interface to perlbug database.
* Perlbug/Log:: Module for generic logging/debugging functions to all Perlbug.
* Perlbug/Note:: Perlbug test module placeholder
* Perlbug/Patch:: Perlbug test module placeholder
* Perlbug/TM:: Bug support functions for Perlbug
* Perlbug/Table:: Table access
* Perlbug/Test:: Perlbug test module placeholder
* Perlbug/Testing:: Perlbug testing module
* Perlbug/Web:: Web interface to perlbug database.
* Persistence/Database/SQL:: Object Persistence in SQL Databases.
* Persistence/Object/Postgres:: Object Persistence with PostgreSQL.
* Persistence/Object/Simple:: Object Persistence with Data::Dumper.
* Persistent:: A framework of classes that provides persistence for Perl objects
* Persistent/Base:: An Abstract Persistent Base Class
* Persistent/DBM:: A Persistent Class implemented using a DBM File
* Persistent/DataType/Base:: An Abstract DataType Base Class
* Persistent/DataType/Char:: A Fixed Length Character String Class
* Persistent/DataType/DateTime:: A Date and Time Class
* Persistent/DataType/Number:: A Floating Point and Integer Class
* Persistent/DataType/String:: A Character String Class
* Persistent/DataType/VarChar:: A Variable Length Character String Class
* Persistent/File:: A Persistent Class implemented using a Text File
* Persistent/LDAP:: A Persistent Class implemented using a LDAP Directory
* Persistent/Memory:: A Persistent Class implemented using Memory (RAM)
* Ph:: provide a perl API for talking to CSO ph servers.
* PlotCalendar/DateDesc:: Perl extension for interpreting a file of                          periodic (like weekly) events and assigning                          actual dates to them. Used to feed the                          calendar plotting software.
* PlotCalendar/DateTools:: This is an all perl replacement for parts of                           Date::Calc. I'd love to use it, but I ran into                           trouble installing the compiled C onto my                            hosting service account, since I can't                           do a compile over there (it'd cost $$)                           So I have reproduced those functions I needed                           in perl. Oh well.
* PlotCalendar/Day:: Generate ascii or html for a single day in a calendar
* PlotCalendar/Month:: Plot an ASCII or HTML calendar
* PlusPlus:: [Delphi|VB|Java]-like Perl preprocessor
* Pod/Checker:: check pod documents for syntax errors
* Pod/Compiler:: compile POD into an object tree
* Pod/DocBook:: module to convert pod files to DocBook SGML
* Pod/Dsr:: Convert POD data to formatted DSR input
* Pod/Find:: find POD documents in directory trees
* Pod/GroveBuilder:: MISSING SHORT DESCRIPTION
* Pod/HTML2Pod:: translate HTML into POD
* Pod/HTML_Elements:: Convert POD to tree of LWP's HTML::Element and hence HTML or PostScript
* Pod/Hlp:: convert POD data to formatted VMS HLP Help module text.
* Pod/Html:: module to convert pod files to HTML
* Pod/HtmlPsPdf:: documentation projects builder in HTML, PS and PDF formats
* Pod/HtmlPsPdf/Html:: module to convert pod files to HTML
* Pod/InputObjects:: objects representing POD input paragraphs, commands, etc.
* Pod/LaTeX:: Convert Pod data to formatted Latex
* Pod/Man:: Convert POD data to formatted *roff input
* Pod/POM:: POD Object Model
* Pod/POM/Node:: base class for a POM node
* Pod/ParseUtils:: helpers for POD parsing and conversion
* Pod/Parser:: base class for creating POD filters and translators
* Pod/Pdf:: A POD to PDF translator
* Pod/PlainText:: Convert POD data to formatted ASCII text
* Pod/Plainer:: Perl extension for converting Pod to old style Pod.
* Pod/Rtf:: Pod::Rtf
* Pod/Select:: extract selected sections of POD from input
* Pod/Tests:: Extracts embedded tests and code examples from POD
* Pod/Text:: Convert POD data to formatted ASCII text
* Pod/Text/Color:: Convert POD data to formatted color ASCII text
* Pod/Text/Overstrike:: Convert POD data to formatted overstrike text
* Pod/Text/Termcap:: Convert POD data to ASCII text with format escapes
* Pod/Tree:: Create a static syntax tree for a POD
* Pod/Tree/HTML:: Generate HTML from a Pod::Tree
* Pod/Tree/Node:: nodes in a Pod::Tree
* Pod/Tree/PerlBin:: translate program PODs to HTML
* Pod/Tree/PerlDist:: translate Perl distribution documentation to HTML
* Pod/Tree/PerlFunc:: translate `perlfunc.pod' to HTML
* Pod/Tree/PerlLib:: translate module PODs to HTML
* Pod/Tree/PerlMap:: map names to URLs
* Pod/Tree/PerlPod:: translate Perl PODs to HTML
* Pod/Tree/PerlTop:: generate a top-level index for Perl PODs
* Pod/Tree/Pod:: Convert a Pod::Tree back to a POD
* Pod/Usage:: print a usage message from embedded pod documentation
* Pod/XML:: Module to convert POD to XML
* Pod/foo:: MISSING SHORT DESCRIPTION
* Pod/newrun:: how to execute the Perl interpreter
* Pod/newvar:: Perl predefined variables
* Pod/newvar2:: Perl predefined variables
* Pod/objects:: package with objects for representing POD documents
* Pod/test:: MISSING SHORT DESCRIPTION
* Pogo:: Perl GOODS interface
* Pogo.jp:: Perl GOODS interface
* PogoLink:: Bidirectional relationship class for objects in a Pogo database
* PogoLink.jp:: MISSING SHORT DESCRIPTION
* PostScript/Columns:: Squeeze a text file into multiple columns.
* PostScript/Elements:: Generate PostScript code for circles, boxes, lines
* PostScript/Font:: module to fetch data from PostScript fonts
* PostScript/FontInfo:: module to fetch data from PostScript font `.inf' files
* PostScript/FontMetrics:: module to fetch data from Adobe Font Metrics file
* PostScript/MailLabels:: Modules for creating PostScript(tm) files of mailing address labels.
* PostScript/MailLabels/BasicData:: Basic data that is used by the MailLabels                                     module.
* PostScript/Metrics:: helper module for PostScript::TextBlock
* PostScript/Resources:: module to fetch data from Unix PostScript Resource '`.upr'' files
* PostScript/TextBlock:: An object that may be used to construct a block of                 text in PostScript.
* Postgres:: Perl interface to the Postgres95 SQL database engine
* Pquota:: a UNIX print quota module
* Pragmatic:: Adds pragmata to Exporter
* Proc/Application:: base class for all applications
* Proc/Application/Daemon:: daemon class based on Proc::Application;
* Proc/Background:: Generic interface to Unix and Win32 background process management
* Proc/Background/Unix:: Unix interface to process mangement
* Proc/Background/Win32:: Interface to process mangement on Win32 systems
* Proc/Daemon:: Run Perl program as a daemon process
* Proc/Forkfunc:: fork off a function
* Proc/Killall:: Kill all instances of a process by pattern matching the command-line
* Proc/Killfam:: kill a list of pids, and all their sub-children
* Proc/Lock:: lock interface module
* Proc/Lock/File:: lock interface module
* Proc/PID_File:: check whether a self process is already running
* Proc/ProcessTable:: Perl extension to access the unix process table
* Proc/ProcessTable/Process:: Perl process objects
* Proc/SafePipe:: popen() and " without calling the shell
* Proc/Scoreboard:: interface scoreboard class
* Proc/Scoreboard/Dir:: interface scoreboard class
* Proc/Short:: return short system calls with options
* Proc/Simple:: launch and control background processes
* Proc/SyncExec:: Spawn processes but report exec() errors
* Proc/WaitStat:: Interpret and act on wait() status values
* Project/Tree:: graphical filesystem / project tree for software developers and webmasters
* Psh/Builtins:: package for Psh builtins, possibly loading them as needed
* Psh/Completion:: containing the completion routines of psh. Currently works with Term::ReadLine::Gnu and Term::ReadLine::Perl.
* Psh/Job:: Data structure representing a shell job
* Psh/Joblist:: A data structure suitable for handling job lists like bash's
* Psh/Locale/Base:: containing base code for I18N
* Psh/Locale/Default:: containing translations for default locale
* Psh/Locale/French:: containing translations for French locale
* Psh/Locale/German:: containing translations for German locales
* Psh/Locale/Italian:: containing translations for Italian locale
* Psh/Locale/Portuguese:: containing translations for Portuguese locale
* Psh/Locale/Spanish:: containing translations for Spanish locale
* Psh/OS:: Wrapper class for OS dependant stuff
* Psh/OS/Mac:: Contains Mac specific code
* Psh/OS/Unix:: contains Unix specific code
* Psh/OS/Win:: Contains Windows specific code
* Psh/PCompletion:: containing the programmable completion routines of psh.
* Psh/Parser:: bla
* Psh/PerlEval:: package containing perl evaluation codes
* Psh/Util:: Containing certain Psh utility functions
* PubMed:: class for searching National Library of Medicine
* Puppet/Any:: Common base class for lab development tools
* Puppet/Body:: Utility class to handle has-a relations and logs
* Puppet/Log:: Log facility with an optional Tk display
* Puppet/LogBody:: Log facility
* Puppet/Show:: Optional Tk Gui for Puppet::Body
* Puppet/Storage:: Utility class to handle permanent data
* Puppet/VcsTools/File:: Tk GUI for VCS file management
* Puppet/VcsTools/GraphWidget:: TreeGraph and node list widget
* Puppet/VcsTools/History:: TK GUI for VcsTools::History
* Puppet/VcsTools/LogEdit:: Tk composite widget to edit a Vcs Log
* Puppet/VcsTools/Version:: Tk GUI to manage a VcsTools::Version object
* QAccel:: Interface to the Qt QAccel class
* QApplication:: Interface to the Qt QApplication class
* QBitmap:: Interface to the Qt QBitmap class
* QBrush:: Interface to the Qt QBrush class
* QButton:: Interface to the Qt QButton class
* QButtonGroup:: Interface to the Qt QButtonGroup class
* QCheckBox:: Interface to the Qt QCheckBox class
* QClipboard:: Interface to the Qt QClipboard class
* QColor:: Interface to the Qt QColor class
* QComboBox:: Interface to the Qt QComboBox class
* QCursor:: Interface to the Qt QCursor class
* QDialog:: Interface to the Qt QDialog class
* QEvent:: Interface to the Qt QEvent, QMouseEvent, QPaintEvent, QResizeEvent, and QTimerEvent classes
* QFileDialog:: Interface to the Qt QFileDialog class
* QFont:: Interface to the Qt QFont class
* QFontInfo:: Interface to the Qt QFontInfo class
* QFontMetrics:: Interface to the Qt QFontMetrics class
* QFrame:: Interface to the Qt QFrame class
* QGlobal:: Internal PerlQt class, required by all other classes
* QGroupBox:: Interface to the Qt QGroupBox class
* QImage:: Interface to the Qt QImage class
* QLCDNumber:: Interface to the Qt QLCDNumber class
* QLabel:: Interface to the Qt QLabel class
* QLayout:: Interface to the Qt QLayout, QBoxLayout and QGridLayout classes
* QLineEdit:: Interface to the Qt QLineEdit class
* QListBox:: Interface to the Qt QListBox, QListBoxItem, QListBoxPixmap and QListBoxText classes
* QMenuBar:: Interface to the Qt QMenuBar class
* QMenuData:: Interface to the Qt QMenuData class
* QMessageBox:: Interface to the Qt QMessageBox class
* QMultiLineEdit:: Interface to the Qt QMultiLineEdit class
* QObject:: Interface to the Qt QObject class
* QPaintDevice:: Interface to the Qt QPaintDevice class
* QPainter:: Interface to the Qt QPainter class
* QPalette:: Interface to the Qt QPalette and QColorGroup classes
* QPen:: Interface to the Qt QPen class
* QPicture:: Interface to the Qt QPicture class
* QPixmap:: Interface to the Qt QPixmap class
* QPoint:: Interface to the Qt QPoint class
* QPointArray:: Interface to the Qt QPointArray class
* QPopupMenu:: Interface to the Qt QPopupMenu class
* QPrinter:: Interface to the Qt QPrinter class
* QPushButton:: Interface to the Qt QPushButton class
* QRadioButton:: Interface to the Qt QRadioButton class
* QRangeControl:: Interface to the Qt QRangeControl class
* QRect:: Interface to the Qt QRect class
* QRegion:: Interface to the Qt QRegion class
* QScrollBar:: Interface to the Qt QScrollBar class
* QSize:: Interface to the Qt QSize class
* QSlider:: Interface to the Qt QSlider class
* QTabBar:: Interface to the Qt QTabBar class
* QTabDialog:: Interface to the Qt QTabDialog class
* QTableView:: Interface to the Qt QTableView class
* QTimer:: Interface to the Qt QTimer class
* QToolTip:: Interface to the Qt QToolTip and QToolTipGroup classes
* QWMatrix:: Interface to the Qt QWMatrix class
* QWidget:: Interface to the Qt QWidget class
* QWindow:: Interface to the Qt QWindow class
* Qt:: A Perl module interface to Qt
* Qtk/QuickTk:: A Simpler Syntax for Perl-Tk GUI Building
* Qtk/QuickTk/details:: precise definition of usage details
* Qtk/QuickTk/internals:: implementation details
* Qtk/QuickTk/scripts:: exhaustive description of the syntax
* Quantum/Entanglement:: QM entanglement of variables in perl
* Quantum/Superpositions:: QM-like superpositions in Perl
* Quine:: extension for creating quines
* Quota:: Perl interface to file system quotas
* R3:: Perl object oriented client interface to SAP R/3 using RFCSDK
* R3/conn:: Perl extension for handling connection to a SAP R/3 system
* R3/func:: Perl extension for calling remote functions in a R/3 system
* R3/itab:: Perl extension for handling ABAP internal tables
* RADIUS/Dictionary:: RADIUS dictionary parser
* RADIUS/Packet:: Object-oriented Perl interface to RADIUS packets
* RADIUS/UserFile:: Perl extension for manipulating a RADIUS users file.
* RAS/AS5200:: PERL Interface to Cisco AS5200 Access Router
* RAS/HiPerARC:: PERL Interface to 3Com/USR Total Control HiPerARC
* RAS/PortMaster:: PERL Interface to Livingston PortMaster 2
* RCGI:: Remote CGI distributed processing
* RCU:: Remote Control Unit Interface
* RCU/Context:: Remote Control Unit Interface
* RCU/Event:: Event-based RCU operation
* RCU/Irman:: RCU interface to libirman.
* RCU/Lirc:: RCU interface to linux-infrared-remote-control
* RCU/Receipts:: MISSING SHORT DESCRIPTION
* RDBAL:: Relational DataBase Abstraction Layer class (ReDBALl)
* RDBAL/Schema:: RDBAL Schema information object
* RDFStore:: This is a set of Perl modules that implement an object-oriented API to manipulate RDF models
* RDFStore/FindIndex:: implementation of the FindIndex RDF API
* RDFStore/Literal:: An implementation of the Literal RDF API
* RDFStore/Model:: An implementation of the Model RDF API
* RDFStore/NodeFactory:: implementation of the NodeFactory RDF API
* RDFStore/Parser/OpenHealth:: This module implements an RDF strawman parser for the syntax proposed by Jonathan Borden at http://www.openhealth.org/RDF/rdf_Syntax_and_Names.htm
* RDFStore/Parser/SiRPAC:: This module implements a streaming RDF Parser as a direct implementation of XML::Parser::Expat(3)
* RDFStore/Parser/Styles/MagicTie:: This module is an extension of RDFStore::Parser::SiRPAC(3) that actually use the RDFStore API modules to ingest records into an RDFStore database.
* RDFStore/RDFNode:: implementation of the RDFNode RDF API
* RDFStore/Resource:: implementation of the Resource RDF API
* RDFStore/SchemaModel:: implementation of the SchemaModel RDF API
* RDFStore/SetModel:: implementation of the SetModel RDF API
* RDFStore/Stanford/Digest:: implementation of the Digest RDF API
* RDFStore/Stanford/Digest/Abstract:: implementation of the AbstractDigest RDF API
* RDFStore/Stanford/Digest/Generic:: implementation of the GenericDigest RDF API
* RDFStore/Stanford/Digest/MD5:: implementation of the MD5Digest RDF API
* RDFStore/Stanford/Digest/SHA1:: implementation of the SHA1Digest RDF API
* RDFStore/Stanford/Digest/Util:: implementation of the DigestUtil RDF API
* RDFStore/Stanford/Literal:: definiton of the Literal RDF API
* RDFStore/Stanford/Model:: definiton of the Model RDF API
* RDFStore/Stanford/NodeFactory:: definiton of the NodeFactory RDF API
* RDFStore/Stanford/RDFNode:: definiton of the RDFNode RDF API
* RDFStore/Stanford/Resource:: definiton of the Resource RDF API
* RDFStore/Stanford/SetModel:: definiton of the SetModel RDF API
* RDFStore/Stanford/Statement:: definiton of the Statement RDF API
* RDFStore/Stanford/VirtualModel:: definiton of the VirtualModel RDF API
* RDFStore/Stanford/Vocabulary/Generator:: implementation of the Vocabulary Generator RDF API
* RDFStore/Statement:: implementation of the Statement RDF API from Sergey Melnik (see http://www-db.stanford.edu/~melnik/rdf/api.html)
* RDFStore/VirtualModel:: implementation of the VirtualModel RDF API
* RDFStore/Vocabulary/DC:: =head1 SYNOPSIS
* RDFStore/Vocabulary/RDF:: =head1 SYNOPSIS
* RDFStore/Vocabulary/RDFS:: =head1 SYNOPSIS
* RFC/RFC822/Address:: RFC 822 style address validation.
* RIPEMD160:: Perl extension for the RIPEMD-160 Hash function
* RIPEMD160/MAC:: Perl extension for RIPEMD-160 MAC function
* RPC/ONC:: Perl interface to ONC RPC
* RPC/PlClient:: Perl extension for writing PlRPC clients
* RPC/PlServer:: Perl extension for writing PlRPC servers
* RPC/Simple:: Perl classes to handle SRPC calls with call-back
* RPC/Simple/Agent:: Perl extension for an agent object for RPC
* RPC/Simple/AnyLocal:: Perl extension defining a virtual SRPC client class
* RPC/Simple/AnyRemote:: Perl base class for a remote object accessible by RPC
* RPC/Simple/AnyWhere:: extension defining a virtual SRPC client or server class
* RPC/Simple/CallHandler:: Perl class to handle RPC calls with call-back
* RPC/Simple/Factory:: Perl extension for creating RPC client
* RPC/Simple/ObjectHandler:: Perl class to handle a remote object
* RPC/Simple/Server:: Perl class to use in the RPC server script.
* RPC/pClient:: Perl extension for writing pRPC clients
* RPC/pServer:: Perl extension for writing pRPC servers
* RTF/Document:: Perl extension for generating Rich Text (RTF) Files
* Randomize:: Perl extension for randomizing things.
* Rc:: parser and backends for 'rc' shell
* Rcs:: Perl Object Class for Revision Control System (RCS).
* Regex/PreSuf:: create regular expressions from word lists
* Regexp:: Object Oriented interface to perl's regular expression code
* Regexp/Common:: Provide commonly requested regular expressions
* Regexp/Shellish:: Shell-like regular expressions
* Register:: simple implementation of the Win32 registry in Unix
* Register/Generic:: Implementation of the windows ini like structure
* Register/System:: Implementation of the Win32 registry in Unix
* Religion:: Generate tracebacks and create and install die() and  warn() handlers.
* Remedy/Ar:: Interface to Remedy's Action Request (Version 1.2)
* RenderMan:: A RenderMan binding as a Perl 5.6 module
* Resources:: handling application defaults in Perl.
* RevML/Doctype:: A subclass of XML::Doctype
* RevML/Writer:: Write RevML files using the RevML DTD
* Run:: Perl extension for to start programs in background
* SDBM_File:: Tied access to sdbm files
* SDL/App:: a SDL perl extension
* SDL/Cdrom:: a SDL perl extension
* SDL/Cursor:: a SDL perl extension
* SDL/Event:: a SDL perl extension
* SDL/Font:: a SDL perl extension
* SDL/Mixer:: a SDL perl extension
* SDL/OpenGL:: a SDL perl extension
* SDL/OpenGL/App:: Glut like wrapper for SDL OpenGL apps
* SDL/Rect:: a SDL perl extension
* SDL/Surface:: a SDL perl extension
* SDL/sdlpl:: Perl bindings for the SDL
* SETI/Stats:: gather local and remote SETI@home stats and manipulate them
* SGI/FAM:: Perl interface to SGI/Irix File Access Monitor
* SGML/Element:: an element of an SGML, XML, or HTML document
* SGML/Entity:: an entity defined in an SGML or XML document
* SGML/ExtEntity:: an external entity defined in an SGML or XML document
* SGML/Grove:: an SGML, XML, or HTML document
* SGML/Notation:: an data type defined in SGML or XML
* SGML/PI:: an SGML, XML, or HTML document processing instruction
* SGML/SData:: an SGML, XML, or HTML document SData replacement
* SGML/SPGroveBuilder:: load an SGML, XML, or HTML document
* SGML/Simple/BuilderBuilder:: build a simple transformation package
* SGML/Simple/Spec:: a simple transformation specification
* SGML/Simple/SpecBuilder:: build a SGML::Spec object
* SGML/SubDocEntity:: a SubDoc entity defined in an SGML or XML document
* SGML/Writer:: write an SGML or XML grove
* SHA:: Perl interface to the NIST Secure Hash Algorithm
* SNMP/MIB/Compiler:: a MIB Compiler supporting SMIv1 and SMIv2
* SNMP/Util:: Snmp modules to perform snmp set,get,walk,next,walk_hash etc.
* SOAP:: Library for SOAP clients and servers in Perl
* SOAP/Defs:: Spec-defined constants
* SOAP/Envelope:: Creates SOAP streams
* SOAP/EnvelopeMaker:: Creates SOAP envelopes
* SOAP/GenericHashSerializer:: Generic serializer for Perl hashes
* SOAP/GenericInputStream:: Default handler for SOAP::Parser output
* SOAP/GenericScalarSerializer:: Generic serializer for Perl scalar references
* SOAP/Lite:: Client and server side SOAP implementation
* SOAP/OutputStream:: Writes SOAP fragments
* SOAP/Packager:: SOAP internal helper class
* SOAP/Parser:: Parses SOAP documents
* SOAP/Serializer:: serialization utilities
* SOAP/SimpleTypeWrapper:: deprecated
* SOAP/Struct:: support for ordered hashes
* SOAP/StructSerializer:: (internal) serializer for SOAP structs
* SOAP/Test:: Test framework for SOAP::Lite
* SOAP/Transport/ACTIVEWORKS:: Server/Client side ActiveWorks support for SOAP::Lite for Perl
* SOAP/Transport/ActiveWorks/AutoInvoke/Client:: Automarshall methods for Perl SOAP
* SOAP/Transport/ActiveWorks/AutoInvoke/Server:: Automarshall methods for Perl SOAP
* SOAP/Transport/ActiveWorks/Client:: Client side ActiveWorks support for SOAP/Perl
* SOAP/Transport/ActiveWorks/Defs:: Spec-defined constants
* SOAP/Transport/ActiveWorks/HTTP/Apache:: Forward SOAP requests from Apache to an ActiveWorks broker
* SOAP/Transport/ActiveWorks/HTTP/Proxy:: Forward SOAP requests from an HTTP server to an ActiveWorks broker
* SOAP/Transport/ActiveWorks/Server:: Server side ActiveWorks support for SOAP/Perl
* SOAP/Transport/FTP:: Client side FTP support for SOAP::Lite
* SOAP/Transport/HTTP:: Server/Client side HTTP support for SOAP::Lite
* SOAP/Transport/HTTP/Apache:: SOAP mod_perl handler
* SOAP/Transport/HTTP/AutoInvoke/Client:: Automarshall methods for Perl SOAP
* SOAP/Transport/HTTP/AutoInvoke/Server:: Automarshall methods for Perl SOAP
* SOAP/Transport/HTTP/CGI:: Generic SOAP CGI handler
* SOAP/Transport/HTTP/Client:: Client side HTTP support for SOAP/Perl
* SOAP/Transport/HTTP/Server:: Server side HTTP support for SOAP/Perl
* SOAP/Transport/HTTPX:: Server/Client side HTTP Smart Proxy for SOAP::Lite
* SOAP/Transport/IO:: Server side IO support for SOAP::Lite
* SOAP/Transport/LOCAL:: Client side no-transport support for SOAP::Lite
* SOAP/Transport/MAILTO:: Client side SMTP/sendmail support for SOAP::Lite
* SOAP/Transport/POP3:: Server side POP3 support for SOAP::Lite
* SOAP/Transport/TCP:: Server/Client side TCP support for SOAP::Lite
* SOAP/TypeMapper:: Maps Perl types to their serializer/deserializer classes
* SOAP/TypedPrimitive:: Wrapper for xsd primitives that need explicit SOAP type attributes
* SOAP/TypedPrimitiveSerializer:: serializer for xsd scalars
* SOM:: Perl extension for access to SOM and DSOM objects.
* SPOPS:: Simple Perl Object Persistence with Security
* SPOPS/Configure:: read in configuration information for collections and create/configure
* SPOPS/Configure/DBI:: Define additional configuration methods
* SPOPS/Configure/Ruleset:: Install variables, subroutines and process inherited rulesets per class
* SPOPS/DBI:: Implement SPOPS class, serializing into a DBI database
* SPOPS/DBI/Keypool:: Retrieves ID field information from a pool
* SPOPS/DBI/MySQL:: MySQL-specific code for DBI collections
* SPOPS/DBI/RandomCode:: Creates a random code for the ID field
* SPOPS/DBI/Sybase:: Sybase-specific routines for the SPOPS::DBI
* SPOPS/Error:: Centralized error messages from all SPOPS objects.
* SPOPS/GDBM:: Store SPOPS objects in a GDBM database
* SPOPS/HashFile:: Implement as objects files containing perl hashrefs dumped to text
* SPOPS/Impl/SecurityObj:: Implement a security object and basic operations
* SPOPS/Impl/User:: Create and manipulate users.
* SPOPS/Key/DBI/Identity:: Retrieve IDENTITY values from a supported DBI database
* SPOPS/Key/DBI/Pool:: Retrieves ID field information from a pool
* SPOPS/Key/Random:: Creates a random alphanumeric code for the ID field
* SPOPS/SQLInterface:: Generic routines for DBI database interaction
* SPOPS/Secure:: Implement security across one or more classes of SPOPS objects
* SPOPS/Secure/Hierarchy:: Define hierarchical security
* SPOPS/Tie:: Simple class implementing tied hash with some goodies
* SPOPS/Tie/StrictField:: Enable field checking for SPOPS objects
* SPOPS/Utility:: Utility methods for SPOPS objects
* SQL/AnchoredWildcards:: add anchors ('^', '$') to SQL wildcards
* SQL/Eval:: Base for deriving evalution objects for SQL::Statement
* SQL/Schema:: Convert a data dictionary into SQL statements
* SQL/Schema/Constraint:: A constraint of a database table
* SQL/Schema/Function:: A function stored within the database
* SQL/Schema/Package:: A package stored within the database
* SQL/Schema/Package/Body:: A package's body stored within the database
* SQL/Schema/Procedure:: A procedure stored within the database
* SQL/Schema/Sequence:: An Oracle sequence
* SQL/Schema/Source:: A source stored within the database
* SQL/Schema/Table:: A database table
* SQL/Schema/Table/Column:: A column of a database table
* SQL/Schema/Trigger:: A database trigger
* SQL/Schema/View:: A database view
* SQL/Statement:: SQL parsing and processing engine
* SWISH:: Perl interface to the SWISH-E search engine.
* SWISH/Fork:: Perl extension for accessing the SWISH-E search engine via a fork/exec.
* SWISH/Stemmer:: Perl extension for stemming words using a modified version of the  Stem routine from the SWISH search engine.  (http://sunsite.berkeley.edu/SWISH-E/)
* Safe:: Compile and execute code in restricted compartments
* Safe/Hole:: make a hole to the original main compartment in the Safe compartment
* Scalar/Listify:: produces an array from a scalar value or array ref.
* Scalar/Util:: A selection of general-utility scalar subroutines
* Schedule/At:: OS independent interface to the Unix 'at' command
* Schedule/Cron:: cron-like scheduler for Perl subroutines
* Schedule/Load:: Load distribution and status across multiple host machines
* Schedule/Load/Chooser:: Distributed load choosing daemon
* Schedule/Load/Hosts:: Return host loading information across a network
* Schedule/Load/Hosts/Host:: Return information about a host
* Schedule/Load/Hosts/Proc:: Return process information
* Schedule/Load/Reporter:: Distributed load reporting daemon
* Schedule/Load/Schedule:: Functions for choosing a host among many
* Schedule/Match:: Handles and detects clash between pattern-based schedules
* Script:: (Win32) system administrator`s library - for login and application startup scripts, etc
* Search/Binary:: generic binary search
* Search/Dict:: search for key in dictionary file
* Search/InvertedIndex:: A manager for inverted index maps
* Search/InvertedIndex/AutoLoader:: A manager for autoloading Search::InvertedIndex modules
* Search/InvertedIndex/DB/DB_File_SplitHash:: A Berkeley database interface object for Search::InvertedIndex
* Search/InvertedIndex/DB/Mysql:: A MySQL database interface object for Search::InvertedIndex
* Search/InvertedIndex/Query:: A query for an inverted index search.
* Search/InvertedIndex/Query/Leaf:: A query leaf item for an inverted index search.
* Search/InvertedIndex/Result:: A list of result entries from a inverted index search.
* Search/InvertedIndex/Update:: A container for a mass data update for a -group/-index.
* SecurID/ACEdb:: Perl extension to use the ACE/Server Administration Toolkit API
* Secure/File:: A module to open or create files within suid/sgid files
* SelectSaver:: save and restore selected file handle
* SelfLoader:: load functions only on demand
* Semi/Semicolons:: writing perl code with the word 'Peterbilt' as statement terminator, rather than a semicolon.
* Server/FastPL:: Add client-server behavior to scripts.
* Server/FastPL/Client:: A Client to the Server::FastPL::Server module.
* Server/FastPL/Server:: Eliminate the compile-time of big scripts
* Seshat:: Perl Extension for writing modules
* Seshat/Parallel:: Perl extension for Seshat
* Set/Bag:: bag (multiset) class
* Set/Crontab:: Expand crontab(5)-style integer lists
* Set/IntRange:: Sets of Integers
* Set/IntSpan:: Manages sets of integers
* Set/NestedGroups:: grouped data eg ACL's, city/state/country etc
* Set/NestedGroups/Member:: Set of nested groups
* Set/Object:: set of objects
* Set/Scalar:: basic set operations
* Set/Scalar/Base:: base class for Set::Scalar
* Set/Scalar/Null:: internal class for Set::Scalar
* Set/Scalar/Real:: internal class for Set::Scalar
* Set/Scalar/Universe:: universes for set members
* Set/Scalar/Valued:: valued sets
* Set/Scalar/ValuedUniverse:: universes for valued set members
* Set/Scalar/Virtual:: internal class for Set::Scalar
* Set/Window:: Manages an interval on the integer line
* Sex:: Perl teaches the birds and the bees.
* Shell:: run shell commands transparently within perl
* Silly/StringMaths:: Perl extension for doing maths with strings
* Silly/Werder:: Meaningless gibberish generator
* SimpleCDB:: Perl-only Constant Database
* SimpleConfig:: Simple configuration file parser
* Simran/DB/Session:: Database Session
* Simran/Error/Error:: Error Module
* Simran/Log/Log:: Log Module
* Sirc/Chantrack:: Track information about the channels you're on
* Sirc/LimitMan:: simple channel limit management
* Sirc/Util:: Utility sirc functions
* Slay/Maker:: An perl make engine using perl code for rules
* Slay/MakerRule:: a class for making things with dependancies
* SlideShow:: Perl extension remote presentation
* Slinke:: module to control the Slink-e product produced by Nirvis - visit Nirvis at http://www.nirvis.com
* Smil:: Perl extension for dynamic generation of SMIL files.
* Socket:: load the C socket.h defines and structure manipulators
* Socket6:: load IPv6 related part of the C socket.h defines and structure manipulators
* Socket/PassAccessRights:: MISSING SHORT DESCRIPTION
* Softref:: Perl extension for blah blah blah
* Solaris/Contents:: Read /var/sadm/install/contents file
* Solaris/InstallDB:: Manages Solaris package information
* Solaris/Package:: Perl module to obtain basic Solaris Package Info
* Solaris/Patchdiag:: Patchdiag class file
* Sort/ArbBiLex:: make sort functions for arbitrary sort orders
* Sort/Fields:: Sort lines containing delimited fields
* Sort/PolySort:: general rules-based sorting of lists
* Sort/Versions:: a perl 5 module for sorting of revision-like numbers
* Spectrum/CLI:: wrapper class for the Spectrum Command Line Interface
* Speech/Audio/FileWave:: Simple waveform abstraction for use with Audio::TTS
* Speech/Speech/Festival:: Communicate with a festival server process.
* Speech/Speech/Festival/Synthesiser:: Simple text-to-speech using festival.
* Speech/Speech/Synthesiser:: Generic speech syntheiser interface
* Spread:: Perl extension for the Spread group communication system
* Spreadsheet/BIFFwriter:: Abstract base class for Excel workbooks and worksheets.
* Spreadsheet/Format:: Class for defining Excel formatting.
* Spreadsheet/OLEwriter:: Writes BIFF data into a OLE compound storage file.
* Spreadsheet/ParseExcel:: Get information from Excel file
* Spreadsheet/ParseExcel/Utility:: Utility function for Spreadsheet::ParseExcel
* Spreadsheet/Workbook:: A writer class for Excel Workbooks.
* Spreadsheet/Worksheet:: A writer class for Excel Worksheets.
* Spreadsheet/WriteExcel:: Write to a cross-platform Excel binary file.
* Spreadsheet/WriteExcel/BIFFwriter:: An abstract base class for Excel workbooks and worksheets.
* Spreadsheet/WriteExcel/Format:: A class for defining Excel formatting.
* Spreadsheet/WriteExcel/Formula:: A class for generating Excel formulas
* Spreadsheet/WriteExcel/OLEwriter:: A writer class to store BIFF data in a OLE compound storage file.
* Spreadsheet/WriteExcel/Workbook:: A writer class for Excel Workbooks.
* Spreadsheet/WriteExcel/Worksheet:: A writer class for Excel Worksheets.
* Spreadsheet/WriteExcel/examples/WorkbookBig:: A writer class for Excel Workbooks.
* Sprite:: Module to manipulate text delimited databases using SQL.
* Startup:: A program flow utility.
* Stat/lsMode:: format file modes like the `ls -l' command does
* Statistics/Candidates:: Perl5 module for manipulating candidate features (help module for `Statistics::MaxEntropy')
* Statistics/Descriptive:: Module of basic descriptive statistical functions.
* Statistics/Distributions:: Perl module for calculating critical values of common statistical distributions
* Statistics/LTU:: An implementation of Linear Threshold Units
* Statistics/MaxEntropy:: Perl5 module for Maximum Entropy Modeling and Feature Induction
* Statistics/OLS:: perform ordinary least squares and associated statistics, v 0.07.
* Statistics/SparseVector:: Perl5 extension for manipulating sparse bitvectors
* StatsView/Graph:: Solaris performance data collection and graphing package
* Stone:: In-memory storage for hierarchical tag/value data structures
* Stone/Cursor:: Traverse tags and values of a Stone
* Stone/GB_Sequence:: Specialized Access to GenBank Records
* Storable:: persistency for perl data structures
* String/Approx:: Perl extension for approximate matching (fuzzy matching)
* String/BitCount:: count number of "1" bits in string
* String/CRC:: Perl interface cyclic redundency check generation
* String/CRC32:: Perl interface for cyclic redundency check generation
* String/Checker:: An extensible string validation module (allowing commonly used checks on strings to be called more concisely and consistently).
* String/DiffLine:: find the character,line, and line position of the first difference
* String/Escape:: Registry of string functions, including backslash escapes
* String/Parity:: Parity (odd/even/mark/space) handling functions
* String/ParseWords:: Parse a string into logical words
* String/Pattern:: create / identify strings by pattern
* String/REPartition:: Generates a regex to partition a data set
* String/Random:: Perl module to generate random strings based on a pattern
* String/RexxParse:: Perl implementation of REXX parse command
* String/Scanf:: emulate the sscanf() of the C stdio library
* String/ShellQuote:: quote strings for passing through the shell
* String/Similarity:: calculate the similarity of two strings
* String/StringLib:: Perl extension for fast, commonly used, string operations
* String/Strip:: Perl extension for fast, commonly used, string operations
* Sub/Versive:: Subroutine pre- and post-handlers
* Switch:: A switch statement for Perl
* Sx:: front-end to all the Athena and Xlib garbage for Perl GUI progamming
* Sybase/Login:: A highly configurable Login widget for Sybperl and Perl/Tk
* Sybase/ObjectInfo:: Return Sybase Object information
* Sybase/Xfer:: transfer data between Sybase servers via bcp.
* Symbol:: manipulate Perl symbols and their names
* Symbol/Approx/Sub:: Perl module for calling subroutines by approximate names!
* Symphero/Data:: low-level data manipulation modules for Symphero E-Commerce suite.
* Symphero/MultiValueDB:: 3D database storage
* Symphero/MultiValueHash:: 3D extension of Symphero::SimpleHash
* Symphero/SimpleHash:: Simple 2D hash manipulations
* Symphero/Utils:: Utility functions widely used by Symphero modules
* Sys/CpuLoad:: a module to retrieve system load averages.
* Sys/HostIP:: Try really hard to get IP addr.
* Sys/Hostname:: Try every conceivable way to get hostname
* Sys/Lastlog:: Provide a moderately Object Oreiented Interface to lastlog                 files on some Unix-like systems.
* Sys/OutPut:: Perl module to help make output easier.
* Sys/Pushd:: change directory temporarily
* Sys/Signal:: Set signal handlers with restoration of existing C sighandler
* Sys/Syslog:: Perl interface to the UNIX syslog(3) calls
* Sys/UniqueID:: Get a guaranteed unique identifier.
* Sys/Utmp:: Object(ish) Interface to UTMP files.
* SyslogScan/ByGroup:: Organizes a Summary of mail statistics into Groups of related e-mail users
* SyslogScan/Delivery:: encapsulates a logged, successful delivery of mail from a sender to a list of recipients.
* SyslogScan/DeliveryIterator:: scans a syslog file for "deliveries", successful transfers of mail to mailboxes or to other machines.
* SyslogScan/SendmailLine:: Enhances basic SyslogEntry parsing by understanding sendmail to/from message syntax.
* SyslogScan/SendmailLineFrom:: encapsulates a 'From:' line in a syslog file
* SyslogScan/SendmailLineTo:: encapsulates a 'To:' line in a syslog file
* SyslogScan/SendmailUtil:: utilities for sendmail packages.
* SyslogScan/Summary:: encapsulates a tally of how many bytes people have sent and received through sendmail
* SyslogScan/SyslogEntry:: parses generic lines in syslog files.
* SyslogScan/Usage:: encapsulates the total volumes of mail broadcast, sent, and received through sendmail by a single user or group.
* SyslogScan/WhereIs:: return full path of syslog file where mail messages are logged
* TFTP:: TFTP Client class
* TableMap:: Maps relational tables into hashes
* Taco:: Dynamic web page system
* Taco/Arg:: Taco argument management
* Taco/Dispatcher:: Dispatches functionality in templates to modules
* Taco/Generic:: Generic Taco template functions
* Taco/LibLib:: keep Perl files fresh
* Taco/Module:: abstract base class for Taco modules
* Taco/ServiceRegistry:: Definitions of Taco services
* Taco/Template:: Taco templates
* Taint:: Perl utility extensions for tainted data
* Tar:: module for manipulation of tar archives.
* Tcl:: Tcl extension module for Perl
* Tcl/Tk:: Extension module for Perl giving access to Tk via the Tcl extension
* TeX/DVI:: write out TeX's DVI (DeVice Independent) file
* TeX/DVI/Parse:: parse TeX's DVI output file
* TeX/Hyphen:: hyphenate words using TeX's patterns
* Template:: a fast, flexible and extensible template processing system
* Template/Base:: base class module implementing common functionality
* Template/Cache:: object for loading, compiling and caching template documents
* Template/Config:: factory module for loading and instantiating other toolkit modules
* Template/Constants:: defines constants for the Template Toolkit
* Template/Context:: runtime context in which templates are processed
* Template/Document:: a compiled template document
* Template/Exception:: exception handling class for the Template Toolkit
* Template/Filters:: post-processing filters for template blocks
* Template/Iterator:: Base iterator class used by the FOREACH directive.
* Template/Parser:: LALR(1) parser for compiling template documents
* Template/Plugin:: base class for Template Toolkit plugins
* Template/Plugin/Autoformat:: interface to Text::Autoformat module
* Template/Plugin/CGI:: simple Template Plugin interface to CGI.pm module
* Template/Plugin/DBI:: Template Plugin interface to the DBI.pm module
* Template/Plugin/Datafile:: plugin to construct records from a simple data file
* Template/Plugin/Date:: generate formatted date strings
* Template/Plugin/Dumper:: simple Template Plugin interface to Data::Dumper
* Template/Plugin/Format:: simple Template Plugin interface to create formatting function
* Template/Plugin/Iterator:: plugin to create Template::Iterator objects
* Template/Plugin/Java:: Generate Java Classes from XML description files and templates.
* Template/Plugin/Java/Constants:: Constants for the Java Template plugin modules.
* Template/Plugin/Java/Utils:: Utility functions for Template::Plugin::Java.
* Template/Plugin/JavaSQL:: Help generate Java from database schemas.
* Template/Plugin/Table:: presents a data set as rows and columns
* Template/Plugin/URL:: constructs query URL's with parameters
* Template/Plugin/Wrap:: wrap text using the Text::Wrap module.
* Template/Plugin/XML/DOM:: simple Template Toolkit plugin interfacing to the XML::DOM module
* Template/Plugin/XML/RSS:: Template Toolkit plugin to the XML::RSS module
* Template/Plugin/XML/XPath:: Template Toolkit plugin to the XML::XPath module
* Template/Plugins:: provider module for loading and instantiating plugins
* Template/Provider:: repository for compiled templates, loaded from disk.
* Template/Service:: custom template processing service
* Template/Stash:: magical storage for template variables
* Template/Test:: module for automating test scripts for the Template Toolkit
* Template/Tutorial:: a tutorial on using and abusing the Perl Template Toolkit
* Template/Utils:: Various utility functions for the Template Tookit.
* Term/ANSIColor:: Color screen output using ANSI escape sequences
* Term/ANSIScreen:: Terminal control using ANSI escape sequences.
* Term/Cap:: Perl termcap interface
* Term/Complete:: Perl word completion module
* Term/Gnuplot:: lowlevel graphics using gnuplot drawing routines.
* Term/GnuplotTerminals:: documentation of gnuplot output devices
* Term/ProgressBar:: Perl extension to display a progress bar
* Term/Prompt:: Perl extension for prompting a user for information
* Term/Query:: Table-driven query routine.
* Term/ReadKey:: A perl module for simple terminal control
* Term/ReadLine:: Perl interface to various readline packages. If no real package is found, substitutes stubs instead of basic functions.
* Term/ReadLine/Gnu:: Perl extension for the GNU Readline/History Library
* Term/ReadPassword:: Asking the user for a password
* Term/Size:: Perl extension for retrieving terminal size
* Term/TUI:: simple tool for building text-based user interfaces
* Test:: provides a simple framework for writing test scripts
* Test/Cmd:: Perl module for portable testing of commands and scripts
* Test/Harness:: run perl standard test scripts with statistics
* Test/Helper:: easy creation of test scripts
* Test/Unit:: Procedural style unit testing interface
* Test/Unit/Assert:: unit testing framework assertion class
* Test/Unit/Exception:: unit testing framework exception class
* Test/Unit/ExceptionError:: unit testing framework exception class
* Test/Unit/ExceptionFailure:: unit testing framework exception class
* Test/Unit/HarnessUnit:: unit testing framework helper class
* Test/Unit/InnerClass:: unit testing framework helper class
* Test/Unit/Test:: unit testing framework abstract base class
* Test/Unit/TestCase:: unit testing framework base class
* Test/Unit/TestFailure:: unit testing framework helper class
* Test/Unit/TestListener:: unit testing framework abstract base class
* Test/Unit/TestLoader:: unit testing framework helper class
* Test/Unit/TestResult:: unit testing framework helper class
* Test/Unit/TestRunner:: unit testing framework helper class
* Test/Unit/TestSuite:: unit testing framework base class
* Test/Unit/TkTestRunner:: unit testing framework helper class
* Test/Unit/Tutorial:: Tutorial on unit testing
* Test/Unit/UnitHarness:: unit testing framework helper class
* Test/Unit/tests/AllTests:: unit testing framework self tests
* Text/Abbrev:: create an abbreviation table from a list
* Text/Annotated/Line:: strings with annotation about their origin
* Text/Annotated/Reader:: a filter for annotating lines coming from a file
* Text/Annotated/Writer:: filter for writing Text::Annotated lines
* Text/Autoformat:: Automatic and manual text wrapping and reformating formatting
* Text/Balanced:: Extract delimited text sequences from strings.
* Text/BasicTemplate:: Simple lexical text/html/etc template parser
* Text/Bastardize:: a corruptor of innocent text
* Text/Bind:: Bind Perl structures to text files
* Text/Boilerplate:: format a script's output without programming
* Text/CSV:: comma-separated values manipulation routines
* Text/CSV_XS:: comma-separated values manipulation routines
* Text/ConvertPlatform:: an object class for formatting text between  			different platforms.
* Text/Correct:: Module for implementing text wrapping
* Text/DelimMatch:: Perl extension to find regexp delimited strings with proper nesting
* Text/DoubleMetaphone:: Phonetic encoding of words.
* Text/EP3:: The Extensible Perl PreProcessor
* Text/EP3/Verilog:: Verilog extension for the EP3 preprocessor.
* Text/English:: Porter's stemming algorithm
* Text/FIGlet:: a perl module to provide FIGlet abilities, akin to banner
* Text/FillIn:: a class implementing a fill-in template
* Text/Filter:: base class for objects that can read and write text lines
* Text/Filter/Chain:: object for chaining Text::Filter objects and running them sequentially, feeding the output of each filter to the input of the  next one.
* Text/FixedLength:: Parse and create fixed length field records
* Text/FixedLength/Extra:: various niceties for Text::FixedLength lovers.
* Text/Flowchart:: ASCII Flowchart maker
* Text/Format:: Various subroutines to format text.
* Text/German:: German grundform reduction
* Text/Graphics:: A text graphics rendering toolkit
* Text/Header:: RFC 822/2068 header and `unheader' functions
* Text/Hyphenate:: Perl extension for blah blah blah
* Text/Iconv:: Perl interface to iconv() codeset conversion function
* Text/Ispell:: a module encapsulating access to the Ispell program.
* Text/LineEditor:: simple line  editor
* Text/MacroScript:: A macro pre-processor with embedded perl capability
* Text/Macros:: an object-oriented text macro engine
* Text/Merge:: v.0.33  General purpose text/data merging methods in Perl.
* Text/Merge/Lists:: v.0.30 Text/data merge with lists/table support
* Text/MetaText:: Perl extension implementing meta-language for processing  "template" text files.
* Text/MetaText/Directive:: MetaText Directive object class.
* Text/MetaText/Factory:: Factory class for instatiating Directive objects.
* Text/Metaphone:: A modern soundex.  Phonetic encoding of words.
* Text/Munge/Vowels:: removes vowels from words phrases
* Text/NWrap:: a simple text wrapping module
* Text/Number:: Overloaded class for printing numbers
* Text/PDF/AFont:: Embedding of Adobe PFB/PFA + AFM format fonts. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/API:: a wrapper api for the Text::PDF::* modules of Martin Hosken.
* Text/PDF/Array:: Corresponds to a PDF array. Inherits from `PDF::Objind' in this node
* Text/PDF/Bool:: A special form of `PDF::String' in this node which holds the strings *true* or false
* Text/PDF/Dict:: PDF Dictionaries and Streams. Inherits from `PDF::Objind' in this node
* Text/PDF/File:: Holds the trailers and cross-reference tables for a PDF file
* Text/PDF/Filter:: Abstract superclass for PDF stream filters
* Text/PDF/Filter:: Ascii85 filter for PDF streams. Inherits from *Note Text/PDF/Filter: Text/PDF/Filter,
* Text/PDF/Filter:: Run Length encoding filter for PDF streams. Inherits from *Note Text/PDF/Filter: Text/PDF/Filter,
* Text/PDF/Filter:: Ascii Hex encoding (very inefficient) for PDF streams. Inherits from *Note Text/PDF/Filter: Text/PDF/Filter,
* Text/PDF/Name:: Inherits from *Note Text/PDF/String: Text/PDF/String, and stores PDF names (things beginning with /)
* Text/PDF/Number:: Numbers in PDF. Inherits from *Note Text/PDF/String: Text/PDF/String,
* Text/PDF/Objind:: PDF indirect object reference. Also acts as an abstract superclass for all elements in a PDF file.
* Text/PDF/Page:: Represents a PDF page, inherits from *Note Text/PDF/Pages: Text/PDF/Pages,
* Text/PDF/Pages:: a PDF pages hierarchical element. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/SFont:: PDF Standard inbuilt font resource object. Inherits from *Note Text/PDF/Dict: Text/PDF/Dict,
* Text/PDF/String:: PDF String type objects and superclass for simple objects that are basically stringlike (Number, Name, etc.)
* Text/PDF/TTFont:: Inherits from *Note Text/PDF/Dict: Text/PDF/Dict, and represents a TrueType font within a PDF file.
* Text/PDF/TTFont0:: Inherits from `PDF::Dict' in this node and represents a TrueType Type 0 font within a PDF file.
* Text/PDF/Utils:: Utility functions for PDF library
* Text/ParseWords:: parse text into an array of tokens or array of arrays
* Text/Query:: Query processing framework
* Text/Query/Advanced:: Match text against Boolean expression
* Text/Query/Build:: Base class for query builders
* Text/Query/BuildAdvancedString:: Builder for Text::Query::ParseAdvanced to build regexps
* Text/Query/BuildSimpleString:: Builder for Text::Query::ParseSimple to build regexps
* Text/Query/Optimize:: Base class for query parsers
* Text/Query/Parse:: Base class for query parsers
* Text/Query/ParseAdvanced:: Parse AltaVista advanced query syntax
* Text/Query/ParseSimple:: Parse AltaVista simple query syntax
* Text/Query/Simple:: Match text against simple query expression and return relevance value for ranking
* Text/Query/Solve:: Base class for query resolution
* Text/Query/SolveAdvancedString:: Apply query expression on strings
* Text/Query/SolveSimpleString:: Apply query expression on strings
* Text/Refer:: parse Unix "refer" files
* Text/Reflow:: Perl module for reflowing text files using Knuth's paragraphing algorithm.
* Text/Roman:: Converts roman algarism in integer numbers and the contrary, recognize algarisms.
* Text/ScriptTemplate:: Lightweight processor for full-featured template
* Text/Search:: Perl module to allow quick searching of directories for given text.
* Text/Sentence:: module for splitting text into sentences
* Text/Shoebox:: read and write SIL Shoebox Standard Format (.sf) files
* Text/SimpleTemplate:: Yet another module for template processing
* Text/Soundex:: Implementation of the Soundex Algorithm as Described by Knuth
* Text/Striphigh:: Perl extension to strip the high bit off of ISO-8859-1 text.
* Text/Structured:: Manipulate fixed-format pages
* Text/StructuredBase:: Structured text base class
* Text/Tabs:: expand and unexpand tabs per the unix expand(1) and unexpand(1)
* Text/TagTemplate:: 	Text::TagTemplate
* Text/Template:: Expand template text with embedded Perl
* Text/Thesaurus/ISO:: A class to handle ISO thesaurii
* Text/Tmpl:: Templating system perl library
* Text/TreeFile:: Reads a tree of text strings into a data structure
* Text/TreeFile/details:: precise usage specifications
* Text/TreeFile/internals:: implementation details
* Text/Trie:: MISSING SHORT DESCRIPTION
* Text/Unaccent:: Remove accents from a string
* Text/Vpp:: Perl extension for a versatile text pre-processor
* Text/Wrap:: line wrapping to form simple paragraphs
* Text/WrapProp:: proportional line wrapping to form simple paragraphs
* Text/Wrapper:: Simple word wrapping routine
* Text/libtmpl:: Templating system C library
* Text/template_extend:: how to extend the Text::Tmpl template library (with C or Perl).
* Text/template_syntax:: description of the syntax of a Text::Tmpl template.
* Thesaurus:: David Rolsky (grimes@waste.org)
* Thesaurus/DBI:: Subclass of Thesaurus that creates data structure in a database.
* Thesaurus/DBM:: Subclass of Thesaurus that ties data structure to DBM file.
* Thesaurus/File:: Subclass of Thesaurus that implements persistence using CSV format text files.
* Thread/Pool:: worker thread pools to run Perl code asynchronously
* Tie/Array:: base class for tied arrays
* Tie/CArray:: Space-efficient, typed, external C Arrays (Alpha)
* Tie/CPHash:: Case preserving but case insensitive hash table
* Tie/Cache:: LRU Cache in Memory
* Tie/Cache/LRU:: A Least-Recently Used cache
* Tie/CacheHash:: Maintains sorted lists of top entries
* Tie/CharArray:: Access Perl scalars as arrays of characters
* Tie/Collection:: A trivial implementaion of Tie::Cache by using a tied handle of a hash for storage.
* Tie/Counter:: Have a counter in a scalar.
* Tie/Cycle:: Cycle through a list of values via a scalar.
* Tie/DBI:: Tie hashes to DBI relational databases
* Tie/DB_File/SplitHash:: A wrapper around the DB_File Berkeley database system
* Tie/DB_FileLock:: Locking access to Berkeley DB 1.x
* Tie/DB_Lock:: ties hashes to databases using shared and exclusive locks
* Tie/Dir:: class definition for reading directories via a tied hash
* Tie/Discovery:: Perl extension for `Discovery' hashes
* Tie/EncryptedHash:: Hashes (and objects based on hashes) with encrypting fields.
* Tie/FileLRUCache:: A lightweight but robust filesystem based persistent LRU cache
* Tie/FlipFlop:: Alternate between two values.
* Tie/Handle:: base class definitions for tied handles
* Tie/Hash:: base class definitions for tied hashes
* Tie/HashDefaults:: Let a hash have default values
* Tie/IntegerArray:: provides a tied array of packed integers of any bit length
* Tie/IxHash:: ordered associative arrays for Perl
* Tie/LDAP:: Tie LDAP database to Perl hash.
* Tie/LDAP/Entry:: Tie LDAP database entry to Perl hash.
* Tie/LLHash:: ordered hashes
* Tie/ListKeyedHash:: A system allowing the use of anonymous arrays as keys to a hash.
* Tie/Math:: Hashes which represent mathematical functions.
* Tie/MmapArray:: mmap a file as a tied array
* Tie/Multidim:: "tie"-like multidimensional data structures
* Tie/NetAddr/IP:: Implements a Hash where the key is a subnet
* Tie/NumRange:: Keeps a number within a range of values.
* Tie/OffsetArray:: Tie one array to another, with index offset
* Tie/PerFH:: creates scalars specific to a filehandle
* Tie/Persistent:: persistent data structures via tie
* Tie/Pick:: Randomly pick (and remove) an element from a set.
* Tie/RDBM:: Tie hashes to relational databases
* Tie/RangeHash:: Implements "range hashes" in Perl
* Tie/RefHash:: use references as hash keys
* Tie/RegexpHash:: Use regular expressions as hash keys
* Tie/STDERR:: Send output of your STDERR to a process or mail
* Tie/Scalar:: base class definitions for tied scalars
* Tie/Scalar/Timeout:: Scalar variables that time out
* Tie/SecureHash:: A tied hash that supports namespace-based encapsulation
* Tie/SentientHash:: Perl module implementing intelligent objects
* Tie/ShadowHash:: Merge multiple data sources into a hash
* Tie/SortHash:: Perl module to keep hashes in a sorted order
* Tie/SubstrHash:: Fixed-table-size, fixed-key-length hashing
* Tie/Syslog:: Perl extension for tie'ing a filehandle to Syslog
* Tie/TextDir:: interface to directory of files
* Tie/TieDict:: A Perl tie to a dictionary file
* Tie/Toggle:: False and true, alternately, ad infinitum.
* Tie/TransactHash:: Edit hash in transactions not changing order during trans.
* Tie/TwoLevelHash:: Tied interface to multi-dimensional (Two-Level) hash files
* Tie/VecArray:: An array interface to a bit vector.
* Tie/Watch:: place watchpoints on Perl variables.
* Tiger:: Perl interface to the Tiger Hash Algorithm
* Time/Avail:: A Perl module to calculate time availability.
* Time/Beat:: Module to convert from standard time to swatch 'beat' time.
* Time/CTime:: format times ala POSIX asctime
* Time/DaysInMonth:: simply report the number of days in a month
* Time/HiRes:: High resolution ualarm, usleep, and gettimeofday
* Time/JulianDay:: Julian calendar manipulations
* Time/Local:: efficiently compute time from local and GMT time
* Time/Object:: Object Oriented time objects
* Time/ParseDate:: date parsing both relative and absolute
* Time/Period:: A Perl module to deal with time periods.
* Time/Seconds:: a simple API to convert seconds to other date values
* Time/SoFar:: Perl module to calculate run time
* Time/Stopwatch:: Use tied scalars as timers
* Time/Storable:: Store times in a portable format
* Time/Timezone:: miscellaneous timezone manipulations routines
* Time/Unix:: Force time() to return seconds since UNIX epoch
* Time/Warp:: control over the flow of time
* Time/Zone:: miscellaneous timezone manipulations routines
* Time/gmtime:: by-name interface to Perl's built-in gmtime() function
* Time/localtime:: by-name interface to Perl's built-in localtime() function
* Time/tm:: internal object used by Time::gmtime and Time::localtime
* Tk:: a graphical user interface toolkit for Perl
* Tk/Adjuster:: Allow size of packed widgets to be adjusted by user
* Tk/After:: Execute a command after a time delay
* Tk/Animation:: Display sequence of Tk::Photo images
* Tk/Axis:: Canvas with Axes
* Tk/BLT/Table:: geometry manager
* Tk/Balloon:: pop up help balloons.
* Tk/Bitmap:: Images that display two colors
* Tk/BrowseEntry:: entry widget with popup choices.
* Tk/Button:: Create and manipulate Button widgets
* Tk/Canvas:: Create and manipulate Canvas widgets                      =for category  Tk Widget Classes
* Tk/CheckBox:: Another radio button style widget (with a check mark)
* Tk/Checkbutton:: Create and manipulate Checkbutton widgets
* Tk/Clipboard:: Manipulate Tk clipboard
* Tk/Clock:: Clock widget with analog and digital display
* Tk/Cloth:: An OO Tk Canvas
* Tk/CmdLine:: Process standard X11 command line options and set initial resources
* Tk/ColorEditor:: a general purpose Tk widget Color Editor
* Tk/ColourChooser:: Perl/Tk module providing a Colour selection dialogue box.
* Tk/Columns:: A multicolumn list widget with sortable & sizeable columns
* Tk/ComboEntry:: Drop down list entry widget
* Tk/Common:: private class used by Drag&Drop
* Tk/Compound:: Create multi-line compound images.
* Tk/ConfigSpecs:: Defining behaviour of 'configure' for composite widgets.
* Tk/ContextHelp:: context-sensitive help with perl/Tk
* Tk/CornerBox:: a geometry manager for scaling two subwidgets
* Tk/DItem:: Tix Display Items
* Tk/Date:: a date/time widget for perl/Tk
* Tk/DateEntry:: Drop down calendar widget for selecting dates.
* Tk/Derived:: Base class for widgets derived from others
* Tk/Dial:: an alternative to the scale widget
* Tk/Dialog:: Create modal dialog and wait for a response.
* Tk/DialogBox:: create and manipulate a dialog screen.
* Tk/DirTree:: Create and manipulate DirTree widgets
* Tk/DockFrame:: A multicolumn list widget with sortable & sizeable columns
* Tk/DragDrop/Common:: private class used by Drag&Drop
* Tk/DragDrop/SunConst:: Constants for Sun's Drag&Drop protocol
* Tk/DropSite:: Receive side of Drag & Drop abstraction
* Tk/Entry:: Create and manipulate Entry widgets
* Tk/Error:: Method invoked to process background errors
* Tk/EvenTk:: ToolKit for Events
* Tk/Eventloop:: ToolKit for Events
* Tk/FcyEntry:: Entry that reflects its state in the background color
* Tk/FileDialog:: A highly configurable File Dialog widget for Perl/Tk.
* Tk/FileEntry:: FileEntry widget with optional file selection box
* Tk/FileSelect:: a widget for choosing files
* Tk/FireButton:: Button that keeps invoking callback when pressed
* Tk/Font:: Create and inspect fonts.
* Tk/FontDialog:: a font dialog widget for perl/Tk
* Tk/Frame:: Create and manipulate Frame widgets
* Tk/Getopt:: User configuration window for Tk with interface to Getopt::Long
* Tk/Ghostscript:: Beginings of a lowlevel PostScript viewing widget
* Tk/HList:: Create and manipulate Tix Hierarchial List widgets
* Tk/HTML/IO:: Tk I/O routines for the LWP library
* Tk/HistEntry:: Entry widget with history capability
* Tk/IO:: high level interface to Tk's 'fileevent' mechanism
* Tk/IconCanvas:: Canvas with dragable icon management
* Tk/Image:: Create and manipulate images
* Tk/InputO:: Create and manipulate TIX InputO widgets
* Tk/Internals:: what is Perl Tk interface doing when you call Tk functions.
* Tk/Item:: Base class for Menu items
* Tk/JPEG:: JPEG loader for Tk::Photo
* Tk/LabFrame:: labeled frame.
* Tk/Label:: Create and manipulate Label widgets
* Tk/Listbox:: Create and manipulate Listbox widgets
* Tk/LockDisplay:: Create modal dialog and wait for a password response.
* Tk/MListbox:: Multicolumn Listbox.
* Tk/MainWindow:: Root widget of a widget tree
* Tk/Menu:: Create and manipulate Menu widgets
* Tk/MenuHash:: Ties a Tk::Menubutton widget to a hash object thingy
* Tk/Menubutton:: Create and manipulate Menubutton widgets
* Tk/Menustrip:: Another menubar with help menu support, etc
* Tk/MesgBox:: Perl/Tk module for message and button dialogue boxes.
* Tk/Message:: Create and manipulate Message widgets
* Tk/Month:: Calendar widget which shows one month at a time.
* Tk/More:: a 'more' or 'less' like text widget
* Tk/Multi/Any:: Do not use
* Tk/Multi/Canvas:: Tk composite widget with a scroll window and more
* Tk/Multi/Frame:: Tk composite widget with a scroll window and more
* Tk/Multi/Manager:: Tk composite widget managing Tk::Multi slaves
* Tk/Multi/Text:: Tk composite widget with a scroll window and more
* Tk/Multi/Toplevel:: Toplevel MultiManager
* Tk/Mwm:: Communicate with the Motif(tm) window manager.
* Tk/NoteBook:: display several windows in limited space with notebook metaphor.
* Tk/NumEntry:: A numeric Entry widget with inc. & dec. Buttons
* Tk/NumEntryPlain:: A numeric entry widget
* Tk/ObjEditor:: Tk composite widget Obj editor
* Tk/ObjEditorDialog:: Tk composite widget obj editor popup dialog
* Tk/ObjScanner:: Tk data scanner
* Tk/OlWm:: Interface to OpenLook properties of toplevel windows.
* Tk/Optionmenu:: Let the user select one of some predefined options values
* Tk/PNG:: PNG loader for Tk::Photo
* Tk/Pane:: A window panner
* Tk/Panel:: A collapsable frame with title.
* Tk/Parse:: Parse perl's pod files.
* Tk/Photo:: Full-color images
* Tk/Pixmap:: Create color images from XPM files.
* Tk/Pod:: POD browser toplevel widget
* Tk/Pod/Search:: Widget to access perlindex POD full text index
* Tk/Pod/Search_db:: dirty OO wrapper for `perlindex''s search functionality
* Tk/Pod/Text:: POD browser widget
* Tk/Pod_usage:: How to use the perl/Tk POD browser widget
* Tk/PopEntry:: An Entry widget with an automatic, configurable right-click menu built in, plus input masks.
* Tk/ProgressBar:: A graphical progress bar
* Tk/ProgressIndicator:: Another, simpler ProgressBar
* Tk/ROText:: 'readonly' perl/Tk Text widget
* Tk/ROTextANSIColor:: Read-only Tk::TextANSIColor
* Tk/Radiobutton:: Create and manipulate Radiobutton widgets
* Tk/Reindex:: change the base index of Text-like widgets
* Tk/RemoteFileSelect:: Browse directories with FTP.
* Tk/RotCanvas:: Canvas widget with arbitrary rotation support
* Tk/Scale:: Create and manipulate Scale widgets
* Tk/Scrollbar:: Create and manipulate Scrollbar widgets
* Tk/Scrolled:: Create a widget with attached scrollbar(s)
* Tk/SearchDialog:: Search Dialog Widget for Perl/Tk Text.
* Tk/SelFile:: a widget for choosing a file to read or write
* Tk/Shell:: Handlers for Tk::Workspace.pm shell clients.
* Tk/SlideShow:: a Tk Perl module for building slide-like presentations.
* Tk/SplitFrame:: a geometry manager for scaling two subwidgets
* Tk/StrfClock:: a X/TK digital clock widget based on strftime.
* Tk/Submethods:: add aliases for tk sub-commands
* Tk/SunConst:: Constants for Sun's Drag&Drop protocol
* Tk/TFrame:: A Titled Frame widget
* Tk/TList:: Create and manipulate Tix Tabular List widgets
* Tk/TM/Lib:: User interface for database applications. Tk::TM - Tk Transaction Manager - screen transactions with user.
* Tk/TM/Try:: Tk Transaction Manager Error processing functions. See Tk::TM::Lib for main descriptions and principles.
* Tk/TM/wApp:: Tk Transaction Manager Application Window. See Tk::TM::Lib for main descriptions and principles.
* Tk/TabFrame:: An alternative to the NoteBook widget : a tabbed geometry manager
* Tk/TabbedForm:: a form management arrangement using Tk::TabFrame
* Tk/Table:: Scrollable 2 dimensional table of Tk widgets
* Tk/TableEdit:: A simple flat-file DBMS editor using Tk::SplitFrame, Tk::TabbedForm, and Tk::Columns
* Tk/TableMatrix:: Create and manipulate tables
* Tk/Text:: Create and manipulate Text widgets
* Tk/Text/SuperText:: An improved text widget for perl/tk
* Tk/TextANSIColor:: Tk::Text widget with support for ANSI color escape codes
* Tk/TextUndo:: perl/tk text widget with bindings to undo changes.
* Tk/TiedListbox:: gang together Listboxes
* Tk/Tiler:: Scrollable frame with sub-widgets arranged into rows
* Tk/TixGrid:: Create and manipulate Tix Grid widgets
* Tk/TixWidget:: methods for Tix widgets
* Tk/Toplevel:: Create and manipulate Toplevel widgets
* Tk/Tree:: Create and manipulate Tree widgets
* Tk/TreeGraph:: Tk widget to draw a tree in a Canvas
* Tk/UserGuide:: Writing Tk applications in perl5.
* Tk/WaitBox:: An Object Oriented Wait Dialog for Perl/Tk, of the Please Wait variety.
* Tk/Widget:: Base class of all widgets
* Tk/WidgetDemo:: create a standard widget demonstration window.
* Tk/WinPhoto:: Load a Photo image from a window
* Tk/Wm:: Communicate with window manager
* Tk/Workspace:: Persistent, multi-purpose text processor.   (File browser, shell, editor) script.   Requires Perl/Tk; optionally Net::FTP.
* Tk/X:: Perl extension for Xlib constants.
* Tk/X11Font:: a class for finding X Fonts
* Tk/XFontSelect:: X11 Font Selection Dialog.
* Tk/XMLViewer:: Tk widget to display XML
* Tk/Xrm:: X Resource/Defaults/Options routines that obey the rules.
* Tk/after:: Execute a command after a time delay
* Tk/bind:: Arrange for X events to invoke callbacks
* Tk/bindtags:: Determine which bindings apply to a window, and order of evaluation
* Tk/callbacks:: Specifying code for Tk to call.
* Tk/chooseColor:: pops up a dialog box for the user to select a color.
* Tk/composite:: Defining a new composite widget class
* Tk/configspec:: Defining behaviour of 'configure' for composite widgets.
* Tk/demos/widget_lib/WidgetDemo:: create a standard widget demonstration window.
* Tk/event:: Miscellaneous event facilities: define virtual events and generate events
* Tk/exit:: End the application
* Tk/fileevent:: Execute a callback when a filehandle becomes readable or writable
* Tk/focus:: Manage the input focus
* Tk/form:: Geometry manager based on attachment rules
* Tk/getOpenFile:: pop up a dialog box for the user to select a file to open or save.
* Tk/grab:: Confine pointer and keyboard events to a window sub-tree
* Tk/grid:: Geometry manager that arranges widgets in a grid
* Tk/mega:: perl/Tk support to write widgets in perl
* Tk/messageBox:: pop up a message window and wait for user response.
* Tk/option:: Using the option database in Perl/Tk
* Tk/options:: Standard options supported by widgets and their manipulation
* Tk/overview:: An overview of an Object Oriented Tk8.0 extension for perl5
* Tk/pTk:: how to make your Tk source portable to other interpreted languages.
* Tk/pack:: Geometry manager that packs around edges of cavity
* Tk/palette:: Modify the Tk color palette
* Tk/place:: Geometry manager for fixed or rubber-sheet placement
* Tk/selection:: Manipulate the X selection
* Tk/send:: Execute a command in a different application
* Tk/tixWm:: Tix's addition to the standard TK wm command.
* Tk/tkvars:: Variables used or set by Tk
* Tk/widgets:: preload widget classes
* Tree/DAG_Node:: (super)class for representing nodes in a tree
* Tree/Fat:: Perl Extension to Implement Fat-Node Trees
* Tree/MultiNode:: a multi node tree object.  Most useful for  modeling heirarchial data structures.
* Tree/Nary:: Perl implementation of N-ary search trees.
* Tree/RedBlack:: Perl implementation of Red/Black tree, a type of balanced tree.
* Tree/RedBlack/Node:: Node class for Perl implementation of Red/Black tree
* Tree/Ternary:: Perl implementation of ternary search trees.
* Tree/Ternary_XS:: Perl extension implementing ternary search trees.
* Tree/Trie:: An implementation of the Trie data structure in Perl
* UDDI:: UDDI client interface
* UDDI/Lite:: Library for UDDI clients in Perl
* UNIVERSAL:: base class for ALL classes (blessed references)
* UNIVERSAL/exports:: Lightweight, universal exporting of variables
* UNIVERSAL/require:: require() modules from a variable
* URI:: Uniform Resource Identifiers (absolute and relative)
* URI2/Heuristic:: Expand URL using heuristics
* URI/Attr:: associate attributes with the URI name space
* URI/Bookmark:: Perl module class encapsulating an entry in a typical bookmark file.
* URI/Bookmark/Netscape:: Perl module containing routines for individual Netscape bookmarks
* URI/Bookmarks:: Perl module class encapsulating bookmark files
* URI/Bookmarks/Netscape:: Perl module containing routines for Netscape bookmark files
* URI/Escape:: Escape and unescape unsafe characters
* URI/Find:: Find URIs in arbitrary text
* URI/Heuristic:: Expand URI using heuristics
* URI/Sequin:: Extract information from the URLs of Search-Engines
* URI/URL:: Uniform Resource Locators
* URI/WithBase:: URI which remember their base
* URI/data:: URI that contain immediate data
* URI/file:: URI that map to local file names
* URI/ldap:: LDAP Uniform Resource Locators
* Unicode/CharName:: Look up Unicode character names
* Unicode/Map:: maps charsets from and to utf16 unicode
* Unicode/Map8:: Mapping table between 8-bit chars and Unicode
* Unicode/MapUTF8:: Conversions to and from arbitrary character sets and UTF8
* Unicode/String:: String of Unicode characters (UCS2/UTF16)
* Unix/AliasFile:: Perl interface to /etc/aliases format files
* Unix/AutomountFile:: Perl interface to automounter files
* Unix/ConfigFile:: Perl interface to various Unix configuration files
* Unix/GroupFile:: Perl interface to /etc/group format files
* Unix/PasswdFile:: Perl interface to /etc/passwd format files
* Unix/Processors:: Interface to processor (CPU) information
* Unix/Processors/Info:: Interface to processor (CPU) information
* Unix/Syslog:: Perl interface to the UNIX syslog(3) calls
* Untaint:: Module for laundering tainted data.
* User:: API for locating user information regardless of OS
* User/Utmp:: Perl access to utmp- and utmpx-style databases
* User/grent:: by-name interface to Perl's built-in getgr*() functions
* User/pwent:: by-name interface to Perl's built-in getpw*() functions
* VCP:: Versioned Copy, copying hierarchies of versioned files
* VCP/Debug:: debugging support for VCP
* VCP/Dest:: A base class for VCP destinations
* VCP/Dest/cvs:: cvs destination driver
* VCP/Dest/p4:: p4 destination driver
* VCP/Dest/revml:: Outputs versioned files to a revml file
* VCP/Plugin:: A base class for VCP::Source and VCP::Dest
* VCP/Rev:: VCP's concept of a revision
* VCP/Revs:: A collection of VCP::Rev objects.
* VCP/Source:: A base class for repository sources
* VCP/Source/cvs:: A CVS repository source
* VCP/Source/p4:: A Perforce p4 repository source
* VCP/Source/revml:: Outputs versioned files to a revml file
* VCS:: Library for generic Version Control System access in Perl
* VCS/CVS:: Provide a simple interface to CVS (the Concurrent Versions System).
* VCS/Cvs:: implementation notes for CVS implementation
* VCS/Dir:: module for access to a VCS directory
* VCS/File:: module for access to a file under version control
* VCS/PVCS:: Global configuration class for for VCS::PVCS::*.
* VCS/PVCS/Archive:: Archive class for for VCS::PVCS.
* VCS/PVCS/Attributes:: Attributes class for for VCS::PVCS
* VCS/PVCS/Commands:: Command class for for VCS::PVCS
* VCS/PVCS/Folder:: Folder class for for VCS::PVCS.
* VCS/PVCS/Project:: Standard PVCS Project class for for VCS::PVCS
* VCS/Version:: module for access to a VCS version
* VMS/FlatFile:: read and write hashes with VMS::IndexedFile.
* VRML:: Specification independent VRML methods (1.0, 2.0, 97)
* VRML/Base:: common basic methods for VRML in/output
* VRML/Browser:: perl module to implement a VRML97 browser
* VRML/Color:: color functions and X11 color names
* VRML/VRML1:: VRML methods with the VRML 1.0 standard
* VRML/VRML1/Standard:: implements the VRML 1.x standard nodes
* VRML/VRML2:: VRML methods with the VRML 2.0/97 standard
* VRML/VRML2/Standard:: implements VRML 2.0/97 standard nodes
* VRML/Viewer:: navigation modes of FreeWRL
* VcsTools/DataSpec/HpTnd:: Hp Tnd custom data for HMS logs
* VcsTools/DataSpec/Rcs:: Rcs data description
* VcsTools/File:: Perl class to manage a VCS file.
* VcsTools/FileAgent:: Perl class to handle a file
* VcsTools/History:: Perl class to manage a VCS history.
* VcsTools/HmsAgent:: Perl class to manage ONE HMS files..
* VcsTools/LogParser:: Perl class to translate RCS based log to info hash
* VcsTools/Process:: Perl functions to handle child process (blocking mode)
* VcsTools/RcsAgent:: Perl class to manage ONE RCS files..
* VcsTools/Source:: Perl base class for some VcsTools components
* VcsTools/Version:: Perl class to manage VCS revision.
* Verilog/Language:: Verilog language utilities
* Verilog/Parse:: parse Verilog language files
* Verilog/Parser:: Parse Verilog language files
* Verilog/SigParser:: Signal Parsing for Verilog language files
* Video/Capture/V4l:: Perl interface to the Video4linux framegrabber interface.
* Video/Capture/VBI:: Functions to manipulate vbi fields & lines.
* Video/Frequencies:: Many, many frequency constants and lists.
* Video/RTjpeg:: Real time, jpeg-like video compression.
* Video/XawTV:: read, create and edit .xawtvrc's.
* VoiceXML/Server:: An easy-to-use VoiceXML server class
* WDDX:: a module for reading and writing WDDX packets
* WML/Card:: Perl extension for builiding WML Cards according to the browser being used.
* WML/Deck:: Perl extension for builiding WML Decks.
* WWW/BBSWatch:: Send, via email, messages posted to a WWW bulletin board
* WWW/Babelfish:: Perl extension for translation via babelfish
* WWW/Poll:: Perl extension to build web polls
* WWW/Robot:: configurable web traversal engine (for web robots & agents)
* WWW/RobotRules:: Parse robots.txt files
* WWW/RobotRules/AnyDBM_File:: Persistent RobotRules
* WWW/Search:: Virtual base class for WWW searches
* WWW/Search/AOL/Classifieds/Employment:: class for searching Jobs Classifieds on AOL
* WWW/Search/AlltheWeb:: class for searching AlltheWeb
* WWW/Search/AltaVista:: class for searching Alta Vista
* WWW/Search/AltaVista/AdvancedNews:: class for advanced Alta Vista news searching
* WWW/Search/AltaVista/AdvancedWeb:: class for advanced Alta Vista web searching
* WWW/Search/AltaVista/Careers:: class for searching www.altavistacareers.com
* WWW/Search/AltaVista/Intranet:: class for searching via AltaVista Search Intranet 2.3
* WWW/Search/AltaVista/News:: class for Alta Vista news searching
* WWW/Search/AltaVista/Web:: class for Alta Vista web searching
* WWW/Search/Crawler:: class for searching Crawler
* WWW/Search/Dice:: class for searching Dice
* WWW/Search/Excite:: backend for searching www.excite.com
* WWW/Search/Excite/News:: class for searching ExciteNews
* WWW/Search/ExciteForWebServers:: class for searching ExciteforWeb engine
* WWW/Search/Fireball:: class for searching Fireball
* WWW/Search/FirstGov:: class for searching http://www.firstgov.gov
* WWW/Search/FolioViews:: class for searching Folio Views
* WWW/Search/Go:: backend class for searching with go.com
* WWW/Search/Gopher:: class for searching Gopher pages
* WWW/Search/HeadHunter:: class for searching HeadHunter
* WWW/Search/HotBot:: backend for searching hotbot.lycos.com
* WWW/Search/HotFiles:: class for searching ZDnet HotFiles
* WWW/Search/Infoseek:: class for searching Infoseek
* WWW/Search/Infoseek/Companies:: class for Infoseek Companies searching
* WWW/Search/Infoseek/Email:: class for searching for e-mail at Infoseek
* WWW/Search/Infoseek/News:: class for Infoseek News searching
* WWW/Search/Infoseek/Web:: class for Infoseek Web searching
* WWW/Search/Livelink:: class for searching Open Text Livelink Intranet search engine
* WWW/Search/MSIndexServer:: class for searching MSIndexServer search engine
* WWW/Search/MetaCrawler:: class for searching http://mc3.go2net.com!
* WWW/Search/Metapedia:: class for searching online Encyclopedias
* WWW/Search/Monster:: class for searching Monster
* WWW/Search/NetFind:: class for searching NetFind  Originally based on Google.pm. NetFind is the same as AOL search.
* WWW/Search/Nomade:: class for searching Nomade
* WWW/Search/Null:: class for searching any web site
* WWW/Search/PLweb:: class for searching PLS PLweb search engine
* WWW/Search/SFgate:: class for searching SFgate/Wais search engine
* WWW/Search/Search97:: class for searching Verity Search97 search engine
* WWW/Search/Simple:: class for searching any web site
* WWW/Search/Test:: utilities to aid in testing WWW::Search backends
* WWW/Search/Translator:: class for Translating languages
* WWW/Search/Verity:: class for searching Verity
* WWW/Search/VoilaFr:: class for searching voila.fr
* WWW/Search/WebCrawler:: class for searching WebCrawler
* WWW/Search/Yahoo/Classifieds/Employment:: class for searching employment classifieds on Yahoo!
* WWW/Search/YahooNews:: backend for searching Yahoo News
* WWW/SearchResult:: class for results returned from WWW::Search
* WWW/Sitemap:: functions for generating a site map for a given site URL.
* Watchdog/Base:: Watchdog base class
* Watchdog/HTTP:: Test status of HTTP service
* Watchdog/Mysql:: Test status of Mysql service
* Watchdog/Process:: Check for process in process table
* Watchdog/Util:: Watchdog utility functions
* WeakRef:: an API to the Perl weak references
* Weather/PIL:: * Weather/Product:: routines for parsing WMO-style weather products
* Weather/Product/NWS:: routines for parsing NWS weather products
* Weather/UGC:: routines for parsing Universal Generic Code (UGC) lines
* Weather/WMO:: routines for parsing WMO abbreviated header lines
* WebCache/Digest:: a Cache Digest implementation in Perl
* WebCache/ICP:: Internet Cache Protocol client and server
* WebFS/FileCopy:: Get, put, move, copy, and delete files located by URIs
* WebFS/FileCopy/Put:: Object for putting data to either file or ftp URI
* WebFetch:: Perl module to download and save information from the Web
* WebFetch/32BitsOnline:: download and save 32BitsOnline headlines
* WebFetch/CNETnews:: download and save c|net news.com headlines or news search
* WebFetch/CNNsearch:: search for stories at CNN Interactive
* WebFetch/COLA:: news from the comp.os.linux.announce ("cola") newsgroup
* WebFetch/DebianNews:: download and save Debian News headlines
* WebFetch/Freshmeat:: download and save Freshmeat headlines
* WebFetch/General:: download and save headlines from other WebFetch sites
* WebFetch/LinuxDevNet:: download and save Linux Dev.Net headlines
* WebFetch/LinuxTelephony:: download and save LinuxTelephony headlines
* WebFetch/LinuxToday:: download and save LinuxToday headlines
* WebFetch/ListSubs:: summarize mail list subscriptions
* WebFetch/PerlStruct:: accepts a Perl structure with pre-parsed news
* WebFetch/SiteNews:: download and save SiteNews headlines
* WebFetch/Slashdot:: download and save Slashdot (or any Slashdot-compatible) headlines
* WebFetch/YahooBiz:: download and save YahooBiz headlines
* Wharf/JDockApp:: Perl extension for doing Wharf or Window Maker dockapps.
* Wharf/JDockApp/jtools:: Perl extension for JDockApp.  It's the tools, man.
* Win32:: Interfaces to some Win32 API Functions
* Win32/ADO:: ADO Constants and a couple of helper functions
* Win32/API:: Perl Win32 API Import Facility
* Win32/ASP:: a Module for ASP (PerlScript) Programming
* Win32/ASP/DBRecord:: an abstract parent class for representing database records
* Win32/ASP/DBRecordGroup:: an abstract parent class for representing groups of database records
* Win32/ASP/Error:: an abstract parent class for implementing exceptions in Win32::ASP::DB
* Win32/ASP/Extras:: a extension to Win32::ASP that provides more methods
* Win32/ASP/Field:: an abstract parent class for representing database fields, used by Win32::ASP::DBRecord
* Win32/ASP/Profile:: provides quick and dirty profiling for web performance testing
* Win32/ChangeNotify:: Monitor events related to files and directories
* Win32/Console:: Win32 Console and Character Mode Functions
* Win32/DriveInfo:: drives on Win32 systems
* Win32/Event:: Use Win32 event objects from Perl
* Win32/EventLog:: Process Win32 Event Logs from Perl
* Win32/EventLog/Carp:: for carping in the Windows NT Event Log
* Win32/File:: manage file attributes in perl
* Win32/FileOp:: 0.10.3
* Win32/FileSecurity:: manage FileSecurity Discretionary Access Control Lists in perl
* Win32/GUI/BitmapInline:: Inline bitmap support for Win32::GUI
* Win32/GUI/GridLayout:: Grid layout support for Win32::GUI
* Win32/GuiTest:: Perl GUI Test Utilities
* Win32/IPC:: Base class for Win32 synchronization objects
* Win32/Internet:: Access to WININET.DLL functions
* Win32/Mutex:: Use Win32 mutex objects from Perl
* Win32/NetAdmin:: manage network groups and users in perl
* Win32/NetResource:: manage network resources in perl
* Win32/PerfLib:: accessing the Windows NT Performance Counter
* Win32/ProcFarm/Parent:: stand-in for child process in ProcFarm RPC system
* Win32/ProcFarm/PerpetualPool:: manages a pool of child processes for perpetual jobs
* Win32/ProcFarm/Pool:: manages a pool of child processes
* Win32/ProcFarm/Port:: manages access to the TCP port for ProcFarm system
* Win32/RASE:: managing dialup entries and network connections on Win32
* Win32/Semaphore:: Use Win32 semaphore objects from Perl
* Win32/Service:: manage system services in perl
* Win32/Sound:: An extension to play with Windows sounds
* Win32/SystemInfo:: Memory and Processor information on Win32 systems
* Win32/TieRegistry:: Powerful and easy ways to manipulate a registry [on Win32 for now].
* Win32API/Const:: Access Win32 constants such as WM_CLOSE, HELP_CONTENTS, etc.
* Win32API/File:: Low-level access to Win32 system API calls for files/dirs.
* Win32API/Net:: Perl interface to the Windows NT LanManager API account management functions.
* Win32API/Registry:: Low-level access to Win32 system API calls from WINREG.H
* Wizard:: A framework for building wizard-style applications.
* Wizard/Examples/Apache:: MISSING SHORT DESCRIPTION
* Wizard/Examples/Apache/Directory:: MISSING SHORT DESCRIPTION
* Wizard/Examples/Apache/Host:: MISSING SHORT DESCRIPTION
* Wizard/Examples/Apache/Server:: MISSING SHORT DESCRIPTION
* Wizard/Examples/Apache/VirtualServer:: MISSING SHORT DESCRIPTION
* Wizard/HTML:: A subclass for running Wizard applications in HTML::EP.
* Wizard/LDAP:: Administration interface for your LDAP server
* Wizard/LDAP/User:: A base class for implementing users in the LDAP wizard
* Wizard/SaveAble:: A package for automatically saved objects.
* Wizard/SaveAble/LDAP:: A package for automatically saved objects,     that are stored in a LDAP server's directory structure.
* Wizard/SaveAble/ShellVars:: MISSING SHORT DESCRIPTION
* Wizard/Shell:: A subclass for running Wizard applications in a shell.
* Wizard/State:: A class for storing the Wizard state.
* WordNet/Query:: perl interface for noun relations of WordNet
* WordNet/QueryData:: direct perl interface to WordNet database
* X11/Auth:: Perl module to read X11 authority files
* X11/Keysyms:: Perl module for names of X11 keysyms
* X11/Protocol:: Perl module for the X Window System Protocol, version 11
* X11/Protocol/Connection:: Perl module abstract base class for X11 client to server connections
* X11/Protocol/Connection/FileHandle:: Perl module base class for FileHandle-based X11 connections
* X11/Protocol/Connection/INETFH:: Perl module for FileHandle-based TCP/IP X11 connections
* X11/Protocol/Connection/INETSocket:: Perl module for IO::Socket::INET-based X11 connections
* X11/Protocol/Connection/Socket:: Perl module base class for IO::Socket-based X11 connections
* X11/Protocol/Connection/UNIXFH:: Perl module for FileHandle-based Unix-domain X11 connections
* X11/Protocol/Connection/UNIXSocket:: Perl module for IO::Socket::UNIX-based X11 connections
* X11/Protocol/Ext/BIG_REQUESTS:: Perl module for the X11 protocol Big Requests extension
* X11/Protocol/Ext/SHAPE:: Perl module for the X11 Protocol Nonrectangular Window Shape Extension
* X500/DN/Parser:: Parse X500 Distinguished Names
* XBase:: Perl module for reading and writing the dbf files
* XBase/Base:: Base input output module for XBase suite
* XBase/FAQ:: Frequently asked questions about the XBase.pm/DBD::XBase modules
* XBase/Index:: base class for the index files for dbf
* XBase/Memo:: Generic support for various memo formats
* XBase/SDBM:: SDBM nonportable index support for dbf
* XML/AutoWriter:: DOCTYPE based XML output
* XML/Catalog:: Resolve public identifiers and remap system identifiers
* XML/Checker:: A perl module for validating XML
* XML/Checker/Parser:: an XML::Parser that validates at parse time
* XML/Config:: MISSING SHORT DESCRIPTION
* XML/DOM:: A perl module for building DOM Level 1 compliant document structures
* XML/DOM-ecmascript:: MISSING SHORT DESCRIPTION
* XML/DOM/AttDef:: A single XML attribute definition in an ATTLIST in XML::DOM
* XML/DOM/AttlistDecl:: An XML ATTLIST declaration in XML::DOM
* XML/DOM/Attr:: An XML attribute in XML::DOM
* XML/DOM/CDATASection:: Escaping XML text blocks in XML::DOM
* XML/DOM/CharacterData:: Common interface for Text, CDATASections and Comments
* XML/DOM/Comment:: An XML comment in XML::DOM
* XML/DOM/DOMImplementation:: Information about XML::DOM implementation
* XML/DOM/Document:: An XML document node in XML::DOM
* XML/DOM/DocumentFragment:: Facilitates cut & paste in XML::DOM documents
* XML/DOM/DocumentType:: An XML document type (DTD) in XML::DOM
* XML/DOM/Element:: An XML element node in XML::DOM
* XML/DOM/ElementDecl:: An XML ELEMENT declaration in XML::DOM
* XML/DOM/Entity:: An XML ENTITY in XML::DOM
* XML/DOM/EntityReference:: An XML ENTITY reference in XML::DOM
* XML/DOM/NamedNodeMap:: A hash table interface for XML::DOM
* XML/DOM/Node:: Super class of all nodes in XML::DOM
* XML/DOM/NodeList:: A node list as used by XML::DOM
* XML/DOM/Notation:: An XML NOTATION in XML::DOM
* XML/DOM/Parser:: An XML::Parser that builds XML::DOM document structures
* XML/DOM/PerlSAX:: Old name of *Note XML/Handler/BuildDOM: XML/Handler/BuildDOM,
* XML/DOM/ProcessingInstruction:: An XML processing instruction in XML::DOM
* XML/DOM/Text:: A piece of XML text in XML::DOM
* XML/DOM/ValParser:: an XML::DOM::Parser that validates at parse time
* XML/DOM/XMLDecl:: XML declaration in XML::DOM
* XML/DT:: a package for down translation of XML to strings
* XML/DT:: module for unicode utf8 to latin1 translation
* XML/Doctype:: A DTD object class
* XML/Doctype/AttDef:: A class representing a definition in an <!ATTLIST> tag
* XML/Doctype/ElementDecl:: A class representing an <!ELEMENT> tag
* XML/Driver/HTML:: SAX Driver for non wellformed HTML.
* XML/Dumper:: Perl module for dumping Perl objects from/to XML
* XML/EP:: A framework for embedding XML into a web server
* XML/ESISParser:: Perl SAX parser using nsgmls
* XML/Edifact:: Perl module to handle XML::Edifact messages.
* XML/Element:: XML elements with the same interface as HTML::Element
* XML/Encoding:: A perl module for parsing XML encoding maps.
* XML/Filter/DetectWS:: A PerlSAX filter that detects ignorable whitespace
* XML/Filter/Digest:: XML::Filter::Digest
* XML/Filter/Hekeln:: a SAX stream editor
* XML/Filter/Reindent:: Reformats whitespace for pretty printing XML
* XML/Filter/SAXT:: Replicates SAX events to several SAX event handlers
* XML/Generator:: Perl extension for generating XML
* XML/Generator/DOM:: XML::Generator subclass for producing DOM trees instead of strings.
* XML/Grove:: Perl-style XML objects
* XML/Grove/AsCanonXML:: output XML objects in canonical XML
* XML/Grove/AsString:: output content of XML objects as a string
* XML/Grove/Builder:: PerlSAX handler for building an XML::Grove
* XML/Grove/Factory:: simplify creation of XML::Grove objects
* XML/Grove/IDs:: return an index of `id' attributes in a grove
* XML/Grove/Iter:: add tree iteration methods to XML objects
* XML/Grove/Path:: return the object at a path
* XML/Grove/PerlSAX:: an PerlSAX event interface for XML objects
* XML/Grove/Sub:: run a filter sub over a grove
* XML/Grove/Subst:: substitute values into a template
* XML/Grove/Visitor:: add visitor/callback methods to XML objects
* XML/Grove/XPointer:: deprecated module once intended for XPointer
* XML/Handler/BuildDOM:: PerlSAX handler that creates XML::DOM document structures
* XML/Handler/CanonXMLWriter:: output XML in canonical XML format
* XML/Handler/Composer:: Another XML printer/writer/generator
* XML/Handler/PrintEvents:: Prints PerlSAX events (for debugging)
* XML/Handler/PyxWriter:: convert Perl SAX events to ESIS of Nsgmls or Pyxie.
* XML/Handler/Sample:: a trivial PerlSAX handler
* XML/Handler/Subs:: a PerlSAX handler base class for calling user-defined subs
* XML/Handler/XMLWriter:: a PerlSAX handler for writing readable XML
* XML/Handler/YAWriter:: Yet another Perl SAX XML Writer
* XML/MetaGenerator:: Collects user input, validates input and generates output in a number of ways based on the defined grammar.
* XML/Node:: Node-based XML parsing: an simplified interface to XML::Parser
* XML/PPD:: PPD file format and XML parsing elements
* XML/PPMConfig:: PPMConfig file format and XML parsing elements
* XML/PYX:: XML to PYX generator
* XML/Parser:: A perl module for parsing XML documents
* XML/Parser/EasyTree:: Easier tree style for XML::Parser
* XML/Parser/Expat:: Lowlevel access to James Clark's expat XML parser
* XML/Parser/PerlSAX:: Perl SAX parser using XML::Parser
* XML/Parser/PyxParser:: convert ESIS of Nsgmls or Pyxie to Perl SAX events.
* XML/PatAct/ActionTempl:: An action module for
* XML/PatAct/Amsterdam:: An action module for simplistic style-sheets
* XML/PatAct/MatchName:: A pattern module for matching element names
* XML/PatAct/PatternTempl:: A pattern module for
* XML/PatAct/ToObjects:: An action module for creating Perl objects
* XML/Perl2SAX:: translate Perl SAX methods to Java/CORBA style methods
* XML/QL:: An XML query language
* XML/RSS:: creates and updates RSS files
* XML/Records:: Perlish record-oriented interface to XML
* XML/RegExp:: Regular expressions for XML tokens
* XML/Registry:: Perl module for loading and saving an XML registry.
* XML/SAX2Perl:: translate Java/CORBA style SAX methods to Perl methods
* XML/Schematron:: Perl implementation of the Schematron.
* XML/Schematron/Sablotron:: Perl extension for validating XML with XPath/XSLT expressions.
* XML/Schematron/XPath:: Perl extension for validating XML with XPath expressions.
* XML/Simple:: Trivial API for reading and writing XML (esp config files)
* XML/SimpleObject:: Perl extension allowing a simple object representation of a parsed XML::Parser tree.
* XML/Stream:: Creates and XML Stream connection and parses return data
* XML/Stream/Namespace:: Object to make defining Namespaces easier in                           XML::Stream.
* XML/Stream/Parser:: SAX XML Parser for XML Streams
* XML/Stream/Parser/DTD:: XML DTD Parser and Verifier
* XML/TiePYX:: Read or write XML data in PYX format via tied filehandle
* XML/TokeParser:: Simplified interface to XML::Parser
* XML/TreeBuilder:: Parser that builds a tree of XML::Element objects
* XML/Twig:: A perl module for processing huge XML documents in tree mode.
* XML/UM:: Convert UTF-8 strings to any encoding supported by XML::Encoding
* XML/ValidWriter:: DOCTYPE driven valid XML output
* XML/Writer:: Perl extension for writing XML documents.
* XML/XPath:: a set of modules for parsing and evaluating XPath statements
* XML/XPath/Boolean:: Boolean true/false values
* XML/XPath/Builder:: SAX handler for building an XPath tree
* XML/XPath/Literal:: Simple string values.
* XML/XPath/Node:: internal representation of a node
* XML/XPath/Node/Attribute:: a single attribute
* XML/XPath/Node/Comment:: an XML comment: <!-comment->
* XML/XPath/Node/Element:: an <element>
* XML/XPath/Node/Namespace:: an XML namespace node
* XML/XPath/Node/PI:: an XML processing instruction node
* XML/XPath/Node/Text:: an XML text node
* XML/XPath/NodeSet:: a list of XML document nodes
* XML/XPath/Number:: Simple numeric values.
* XML/XPath/PerlSAX:: A PerlSAX event generator for my wierd node structure
* XML/XPath/XMLParser:: The default XML parsing class that produces a node tree
* XML/XPathScript:: Stand alone XPathScript
* XML/XQL:: A perl module for querying XML tree structures with XQL
* XML/XQL/DOM:: Adds XQL support to XML::DOM nodes
* XML/XQL/Date:: Adds an XQL::Node type for representing and comparing dates and times
* XML/XQL/Query:: Creates an XQL query evaluater from a XQL expression
* XML/XQL/Tutorial:: Describes the XQL query syntax
* XML/XSLT:: A perl module for processing XSLT
* XML/miniXQL:: Module for doing stream based XML queries
* XMLNews/HTMLTemplate:: A module for converting NITF to HTML.
* XMLNews/Meta:: A module for reading and writing XMLNews metadata files.
* XSLoader:: Dynamically load C libraries into Perl code
* XTM:: Topic Map management
* XTM/Log:: Topic Map Logger
* XTM/Memory:: Topic Map management, in-memory data structure.
* XTM/XML:: Topic Map management, syncing with XML data
* XTM/XML/Grove2TM:: XTM XML parser
* XTM/XML/Latin1Parser:: XTM generic XML first pass parser.
* XTM/XML/PSI:: Topic Map management, published subject identifiers
* XTM/XML/UTF8:: XTM backwards compatible UTF support
* XTM/association:: trivial class definition
* XTM/baseName:: trivial class definition
* XTM/baseNameString:: trivial class definition
* XTM/generic:: XTM generic accessor
* XTM/instanceOf:: trivial class definition
* XTM/member:: trivial class definition
* XTM/mergeMap:: trivial class definition
* XTM/occurrence:: trivial class definition
* XTM/parameters:: trivial class definition
* XTM/resourceData:: trivial class definition
* XTM/resourceRef:: trivial class definition
* XTM/roleSpec:: trivial class definition
* XTM/scope:: trivial class definition
* XTM/subjectIdentity:: trivial class definition
* XTM/subjectIndicatorRef:: trivial class definition
* XTM/topic:: Topic Map management, Topic
* XTM/topicRef:: trivial class definition
* XTM/variant:: trivial class definition
* XTM/variantName:: trivial class definition
* Xbase:: Perl Module to Read Xbase DBF Files and Foxpro IDX indexes
* Xmms:: Interactive remote control shell for xmms
* Xmms/Config:: Perl Interface to xmms_cfg API
* Xmms/Remote:: Perl Interface to xmms_remote API
* Xmms/SongChange:: Take actions based on song track/time change
* YAPE/HTML:: Yet Another Parser/Extractor for HTML
* YAPE/HTML/Element:: sub-classes for YAPE::HTML elements
* YAPE/Regex:: Yet Another Parser/Extractor for Regular Expressions
* YAPE/Regex/Element:: sub-classes for YAPE::Regex elements
* YAPE/Regex/Explain:: explanation of a regular expression
* attributes:: get/set subroutine or variable attributes
* attrs:: set/get attributes of a subroutine (deprecated)
* autoload:: only load modules when they're used
* autouse:: postpone load of modules until a function is used
* base:: Establish IS-A relationship with base class at compile time
* bioback:: how to customise bioperl for your site
* biodesign:: Design Documentation
* biostart:: Getting Started
* bitflags:: Perl module for generating bit flags
* blib:: Use MakeMaker's uninstalled version of a package
* build:: the equivalent of "make" of "Build'n'Play" (BnP)
* bytes:: Perl pragma to force byte semantics rather than character semantics
* charnames:: define character names for `\N{named}' string literal escape.
* constant:: Perl pragma to declare constants
* cyrillic:: Library for fast and easy cyrillic text manipulation
* dTemplate:: A powerful template handling logic with advanced features.
* diagnostics:: Perl compiler pragma to force verbose warning diagnostics
* enum:: C style enumerated types and bitmask flags in Perl
* ex/constant/vars:: Perl pragma to create readonly variables
* ex/lib/zip:: Perl extension to let you use things direct from zip files.
* ex/override:: Perl pragma to override core functions
* fields:: compile-time class fields
* filetest:: Perl pragma to control the filetest permission operators
* foundation:: Inheritance without objects
* genopt:: *GEN*erate access layer for *OPT*ional software
* gettext:: message handling functions
* import:: import all modules with a package prefix, aliasing it away.
* integer:: Perl pragma to compute arithmetic in integer instead of double
* iodbc:: Perl extension for the iODBC API
* less:: perl pragma to request less of something from the compiler
* lib:: manipulate @INC at compile time
* libapreq:: Apache Request C Library
* locale:: Perl pragma to use and avoid POSIX locales for built-in operations
* loose:: Perl pragma to allow unsafe constructs
* lwpcook:: libwww-perl cookbook
* mods:: easy one-stop module shopping
* open:: perl pragma to set default disciplines for input and output
* ops:: Perl pragma to restrict unsafe operations when compiling
* overload:: Package for overloading perl operations
* perlrpcgen/Fstream:: a class to encapsulate a filehandle as a stream;
* pod/Win32:: Interfaces to some Win32 API Functions
* pqedit:: Web-based database table editor.
* private:: Add private data members to Perl classes
* protect:: allows the declaration of protected subs
* protected:: "private" data fields which are inherited by child classes
* ptkFAQ:: ptkFAQ
* public:: Add public data members to Perl classes
* re:: Perl pragma to alter regular expression behaviour
* rlib:: manipulate @INC at compile time with relative paths
* savevars:: Perl pragma to auto-load and save global variables
* sigtrap:: Perl pragma to enable simple signal handling
* strict:: Perl pragma to restrict unsafe constructs
* subs:: Perl pragma to predeclare sub names
* uny2k:: Removes y2k fixes
* utf8:: Perl pragma to enable/disable UTF-8 in source code
* variable:: Perl pragma to declare (scalar) variables without a leading `$'.
* vars:: Perl pragma to predeclare global variable names (obsolete)
* vga:: Perl extension for svgalib-1.2.11
* vpopmail:: Perl extension for the vpopmail package
* warnings:: Perl pragma to control optional warnings
* web:: A set of useful routines for many webworking purposes
* wwwAdmin:: A system for configuring virtual Apache web servers
* y2k:: A simple module to detect y2k bugs


