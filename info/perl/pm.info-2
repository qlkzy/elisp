This is Info file pm.info, produced by Makeinfo version 1.68 from the
input file bigpm.texi.


File: pm.info,  Node: AI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AI Menu
*******

   This is the documentation for modules associated with the main module
AI.

* Menu:

* AI/Fuzzy:: Perl extension for Fuzzy Logic
* AI/Gene/AI/Gene/Sequence::  AI::Gene::Sequence
* AI/Gene/AI/Gene/Simple::  AI::Gene::Simple
* AI/Perceptron:: An implementation of a Perceptron


File: pm.info,  Node: AOL-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AOL Menu
********

   This is the documentation for modules associated with the main module
AOL.

* Menu:

* AOL/TOC:: Perl extension for interfacing with AOL's AIM service


File: pm.info,  Node: ASP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

ASP Menu
********

   This is the documentation for modules associated with the main module
ASP.

* Menu:

* ASP Itself: ASP. a Module for ASP (PerlScript) Programming
* ASP/NextLink:: Perl implementation of the NextLink ASP component


File: pm.info,  Node: Ace-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Ace Menu
********

   This is the documentation for modules associated with the main module
Ace.

* Menu:

* Ace Itself: Ace. Object-Oriented Access to ACEDB Databases
* Ace/Browser/AceSubs:: Subroutines for AceBrowser
* Ace/Graphics/Fk:: A dummy feature object used for generating panel key tracks
* Ace/Graphics/Glyph:: Base class for Ace::Graphics::Glyph objects
* Ace/Graphics/Glyph/anchored_arrow:: The "anchored_arrow" glyph
* Ace/Graphics/Glyph/arrow:: The "arrow" glyph
* Ace/Graphics/Glyph/group:: The group glyph
* Ace/Graphics/Glyph/line:: The "line" glyph
* Ace/Graphics/Glyph/primers:: The "STS primers" glyph
* Ace/Graphics/Glyph/segments:: The "discontinuous segments" glyph
* Ace/Graphics/Glyph/transcript:: The "gene" glyph
* Ace/Graphics/GlyphFactory:: Create Ace::Graphics::Glyphs
* Ace/Graphics/Panel:: PNG graphics of Ace::Sequence::Feature objects
* Ace/Graphics/Track:: PNG graphics of Ace::Sequence::Feature objects
* Ace/Iterator:: Iterate Across an ACEDB Query
* Ace/Local:: use giface, tace or gifaceclient to open a local connection to an Ace database
* Ace/Model:: Get information about AceDB models
* Ace/Object:: Manipulate  Ace Data Objects
* Ace/Sequence:: Examine ACeDB Sequence Objects
* Ace/Sequence/Feature:: Examine Sequence Feature Tables
* Ace/Sequence/FeatureList:: Lightweight Access to Features
* Ace/Sequence/GappedAlignment:: Gapped alignment object
* Ace/Sequence/Homol:: Temporary Sequence Homology Class
* Ace/Sequence/Multi:: Combine Feature Tables from Multiple Databases
* Ace/Sequence/Transcript:: Simple "Gene" Object


File: pm.info,  Node: AddressBook-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AddressBook Menu
****************

   This is the documentation for modules associated with the main module
AddressBook.

* Menu:

* AddressBook Itself: AddressBook. Abstract class for using AddressBooks
* AddressBook/Config:: AddressBook configuration object
* AddressBook/DB/BBDB:: Perl extension for reading and writing bbdb files
* AddressBook/DB/DBI:: Backend for AddressBook to use in databases
* AddressBook/DB/HTML:: Backend for AddressBook to print entries in HTML format
* AddressBook/DB/LDAP:: Backend for AddressBook to use LDAP.
* AddressBook/DB/LDIF:: Backend for AddressBook to use LDIF files.
* AddressBook/DB/PDB:: Backend for AddressBook to use PDB (PalmOS) Databases.
* AddressBook/DB/Text:: Backend for AddressBook to print entries in a simple text format
* AddressBook/Entry:: An entry in the AddressBook


File: pm.info,  Node: Affix-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Affix Menu
**********

   This is the documentation for modules associated with the main module
Affix.

* Menu:

* Affix/Infix2Postfix:: Perl extension for converting from infix notation to postfix notation.


File: pm.info,  Node: Agent-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Agent Menu
**********

   This is the documentation for modules associated with the main module
Agent.

* Menu:

* Agent Itself: Agent. the Transportable Agent Perl module
* Agent/Message:: the Transportable Agent Perl module
* Agent/Transport:: the Transportable Agent Perl module
* Agent/Transport/TCP:: the Transportable Agent Perl module


File: pm.info,  Node: Algorithm-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Algorithm Menu
**************

   This is the documentation for modules associated with the main module
Algorithm.

* Menu:

* Algorithm/Diff:: Compute `intelligent' differences between two files / lists
* Algorithm/DiffOld:: Compute `intelligent' differences between two files / lists but use the old (<=0.59) interface.
* Algorithm/Graphs/TransitiveClosure:: Calculate the transitive closure.
* Algorithm/MDiff:: Perl extension for m-differece detection.
* Algorithm/MarkovChain:: Object oriented Markov chain generator
* Algorithm/Numerical/Sample:: Draw samples from a set
* Algorithm/Numerical/Shuffle:: Shuffle a list.
* Algorithm/Permute:: Handy and fast permutation with object oriented interface
* Algorithm/SISort:: Implementation of Select And Insert sorting algorithm in C


File: pm.info,  Node: AltaVista-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AltaVista Menu
**************

   This is the documentation for modules associated with the main module
AltaVista.

* Menu:

* AltaVista/SearchSDK:: Perl extension for AltaVista Search Software Development Kit


File: pm.info,  Node: Apache-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Apache Menu
***********

   This is the documentation for modules associated with the main module
Apache.

* Menu:

* Apache Itself: Apache. Perl interface to the Apache server API
* Apache/ASP:: Active Server Pages for Apache with mod_perl
* Apache/AddHostPath:: Adds some or all of the hostname and port to the URI
* Apache/Album:: Simple mod_perl Photo Album
* Apache/Archive:: Expose archive files through the Apache web server.
* Apache/AuthCookie:: Perl Authentication and Authorization via cookies
* Apache/AuthCookieDBI:: An AuthCookie module backed by a DBI database.
* Apache/AuthCookieURL:: Perl Authentication and Authorization or session management via cookies or URL munging
* Apache/AuthDBI:: Authentication and Authorization via Perl's DBI
* Apache/AuthLDAP:: mod_perl LDAP Access Control and Authentication Module
* Apache/AuthNetLDAP:: mod_perl module that uses the Net::LDAP module for user authentication for Apache
* Apache/AuthPerLDAP:: mod_perl PerLDAP Authentication Module
* Apache/AuthTicket:: Cookie based access module.
* Apache/AuthenCache:: Authentication caching used in conjuction with a primary authentication module (Apache::AuthenDBI, Apache::AuthenLDAP, etc.)
* Apache/AuthenDBI:: Authentication via Perl's DBI
* Apache/AuthenLDAP:: mod_perl LDAP Authentication Module
* Apache/AuthenNIS:: mod_perl NIS Authentication module
* Apache/AuthenPasswd:: mod_perl passwd Authentication module
* Apache/AuthenPasswdSrv:: mod_perl Authen Handler
* Apache/AuthenRadius:: Authentication via a Radius server
* Apache/AuthenSecurID:: Authentication via a SecurID server
* Apache/AuthenSmb:: mod_perl NT Authentication module
* Apache/AuthenURL:: authenticates via another URL
* Apache/AuthzCache:: mod_perl Cache Authorization Module
* Apache/AuthzDBI:: Authorization via Perl's DBI
* Apache/AuthzLDAP:: mod_perl LDAP Authorization Module
* Apache/AuthzNIS:: mod_perl NIS Group Authorization module
* Apache/AutoIndex:: Perl replacment for mod_autoindex and mod_dir Apache module
* Apache/AxKit/Language:: base class for all processors
* Apache/AxKit/Language/NotXSLT:: Matt's non-xslt template processor
* Apache/AxKit/Language/XPathScript:: An XML Stylesheet Language
* Apache/AxKit/Language/XSP:: eXtensible Server Pages
* Apache/AxKit/Language/XSP/Util:: XSP util: taglib.
* Apache/AxKit/Plugins/Fragment:: Fragment plugin
* Apache/AxKit/Plugins/Passthru:: allow passthru=1 in querystring
* Apache/AxKit/Provider:: base Provider class
* Apache/AxKit/StyleChooser/Cookie:: Choose stylesheets based on a browser cookie
* Apache/AxKit/StyleChooser/FileSuffix:: Choose stylesheet using file suffix
* Apache/AxKit/StyleChooser/PathInfo:: Choose stylesheet using PATH_INFO
* Apache/AxKit/StyleChooser/QueryString:: Choose stylesheet using querystring
* Apache/AxKit/StyleChooser/UserAgent:: Choose stylesheets based on the user agent.
* Apache/AxKit/StyleFinder:: Execute module based on <?xml-stylesheet?>
* Apache/AxKit/StyleProvider:: DEPRECATED!!!
* Apache/AxKit/XMLFinder:: Detects XML files
* Apache/CIPP:: Use CIPP embedded HTML Pages with mod_perl
* Apache/Clean:: mod_perl interface into HTML::Clean
* Apache/Compress:: Auto-compress web files with Gzip
* Apache/Constants:: Constants defined in apache header files
* Apache/ContentHandler:: mod_perl extension for uniform application generation.
* Apache/Cookie:: HTTP Cookies Class
* Apache/DB:: Run the interactive Perl debugger under mod_perl
* Apache/DBI:: Initiate a persistent database connection
* Apache/DBILogConfig:: Logs access information in a DBI database
* Apache/DBILogger:: Tracks what's being transferred in a DBI database
* Apache/DBILogin:: authenticates and authorizes via a DBI connection
* Apache/DProf:: Hook Devel::DProf into mod_perl
* Apache/Debug:: Utilities for debugging embedded perl code
* Apache/DebugDBI:: Debug Apache::DBI modules
* Apache/DebugInfo:: log various bits of per-request data
* Apache/Dispatch:: call PerlHandlers with the ease of Registry scripts
* Apache/DumpHeaders:: Watch HTTP transaction via headers
* Apache/EmbperlChain:: process embedded perl in HTML in the OutputChain
* Apache/ExtUtils:: Utils for Apache:C/Perl glue
* Apache/FakeRequest:: fake request object for debugging
* Apache/File:: advanced functions for manipulating files at the server side
* Apache/Filter:: Alter the output of previous handlers
* Apache/GD/Graph:: Generate Graphs in an Apache handler.
* Apache/GTopLimit:: Limit Apache httpd processes
* Apache/Gateway:: A Bloated Gateway Module
* Apache/GzipChain:: compress HTML (or anything) in the OutputChain
* Apache/HeavyCGI:: Framework to run complex CGI tasks on an Apache server
* Apache/HeavyCGI/Date:: represent a date as both unix time and HTTP time
* Apache/HeavyCGI/Debug:: inspect the Pseudohash as Hash with Data::Dumper
* Apache/HeavyCGI/Exception:: exception class for Apache::HeavyCGI
* Apache/HeavyCGI/ExePlan:: Creates an execution plan for Apache::HeavyCGI
* Apache/HeavyCGI/IfModified:: Within Apache::HeavyCGI return 304
* Apache/HeavyCGI/Layout:: Represent a page layout in an array
* Apache/HeavyCGI/SquidRemoteAddr:: Pass X-Forwarded-For Header through as remote_ip
* Apache/HeavyCGI/UnmaskQuery:: Allow queries without a questionmark
* Apache/Htaccess:: Create and modify Apache .htaccess files
* Apache/Htgroup:: Manage Apache authentication group files
* Apache/Htpasswd:: Manage Unix crypt-style password file.
* Apache/Icon:: Lookup icon images
* Apache/Include:: Utilities for mod_perl/mod_include integration
* Apache/Keywords:: Store keywords as a personal profile in a cookie.
* Apache/Language:: Perl transparent language support for Apache modules and mod_perl scripts
* Apache/Language/Constants:: Apache::Language constants for use by LanguageHandlers
* Apache/Language/DBI:: DBI interface for Apache::Language
* Apache/Language/PlainFile:: Default LanguageHandler under Apache::Language
* Apache/Language/SW:: LanguageHandler for SmartWorker Applications
* Apache/Layer:: Layer content tree over one or more others.
* Apache/Leak:: Module for tracking memory leaks in mod_perl code
* Apache/Log:: Interface to Apache logging
* Apache/LogFile:: Interface to Apache's logging routines
* Apache/MP3:: Generate streamable directories of MP3 files
* Apache/MP3/Playlist:: Manage directories of MP3 files with sorting and persistent playlists
* Apache/MP3/Sorted:: Generate sorted streamable directories of MP3 files
* Apache/MakeCapital:: convert server output to uppercase
* Apache/MimeXML:: mod_perl mime encoding sniffer for XML files
* Apache/Mmap:: Associates a scalar with a mmap'd file
* Apache/Mmap/Handle:: Associates a file handle with a mmaped file
* Apache/Module:: Interface to Apache C module structures
* Apache/ModuleDoc:: Self documentation for Apache C modules
* Apache/Motd:: Provide motd (Message of the Day) functionality to a webserver
* Apache/MyConfig:: build options access
* Apache/Mysql:: Initiate a persistent database connection to Mysql
* Apache/NNTPGateway:: A NNTP interface for mod_perl enabled Apache web server.
* Apache/OWA:: Run OWA applications under Apache/mod_perl
* Apache/Options:: OPT_* defines from httpd_core.h
* Apache/OutputChain:: chain stacked Perl handlers
* Apache/PHLogin:: authenticates via a PH database
* Apache/PageKit:: Application framework using mod_perl and HTML::Template
* Apache/PageKit/Config:: Reads and provides configuration data.
* Apache/PageKit/Content:: Parses and stores content in XML files.
* Apache/PageKit/Edit:: Web based editing tools for View templates
* Apache/PageKit/Error:: Error Handling under mod_perl
* Apache/PageKit/Model:: Base Model Class
* Apache/PageKit/Session:: Session Handling
* Apache/PageKit/View:: Bridge between Apache::PageKit and HTML::Template
* Apache/ParseLog:: Object-oriented Perl extension for parsing Apache log files
* Apache/PassExec:: run CGI and catch its output
* Apache/PassFile:: print a file to STDOUT
* Apache/PassHtml:: print out the html file
* Apache/Peek:: A data debugging tool for the XS programmer
* Apache/PerlRun:: Run unaltered CGI scripts under mod_perl
* Apache/PerlRunFilter:: run Perl scripts in an Apache::Filter chain
* Apache/PerlRunXS:: XS implementation of Apache::PerlRun/Apache::Registry
* Apache/PerlSections:: Utilities for work with <Perl> sections
* Apache/PerlVINC:: Allows versioning of modules among directories or v-hosts.
* Apache/PrettyPerl:: Apache mod_perl PerlHandler for nicer output perl files in the client's browser.
* Apache/PrettyText:: A very simple apache mod_perl PerlHandler for text files
* Apache/Proxy:: Perl interface to mod_proxy
* Apache/Proxy/Info:: Small backend to get information from doc server to mod_perl server
* Apache/ProxyPass:: implement ProxyPass in perl
* Apache/ProxyPassThru:: Skeleton for vanilla proxy
* Apache/ProxyRewrite:: mod_perl URL-rewriting proxy
* Apache/ProxyStuff:: mod_perl header/footer/proxy module
* Apache/RandomLocation:: Perl extension for mod_perl to handle random locations.
* Apache/RedirectDBI:: Redirect requests to different directories based on the existence of a user in one or more database tables
* Apache/RedirectLogFix:: Properly set redirect status for loggers
* Apache/RefererBlock:: block request based upon referer header
* Apache/Registry:: Run unaltered CGI scrips under mod_perl
* Apache/RegistryFilter:: run Perl scripts in an Apache::Filter chain
* Apache/RegistryLexInfo:: Diff Apache::Registry script padlists
* Apache/RegistryLoader:: Compile Apache::Registry scripts at server startup
* Apache/Reload:: Reload changed modules
* Apache/Request:: Methods for dealing with client request data
* Apache/RequestNotes:: pass form and cookie data around in pnotes
* Apache/Resource:: Limit resources used by httpd children
* Apache/ReverseProxy:: An Apache mod_perl reverse proxy
* Apache/RewritingProxy:: proxy that works by rewriting requested documents with no client proxy config needed.
* Apache/SIG:: Override apache signal handlers with Perl's
* Apache/SOAP:: Provide SOAP server functionality with simple configuration
* Apache/SSI:: Implement Server Side Includes in Perl
* Apache/SSIChain:: do SSI on other modules' output
* Apache/Sandwich:: Layered document (sandwich) maker
* Apache/Scoreboard:: Perl interface to the Apache scoreboard structure
* Apache/Session:: A persistence framework for session data
* Apache/Session/Counted:: Session management via a File::CounterFile
* Apache/Session/DBI:: Session persistence via DBI
* Apache/Session/DBIBase64Store:: Session persistence via DBI with  ASCII  encoding of session data.
* Apache/Session/DBIStore:: Session persistence via DBI
* Apache/Session/DB_File:: An implementation of Apache::Session
* Apache/Session/Embperl:: works with HTML::Embperl
* Apache/Session/File:: An implementation of Apache::Session
* Apache/Session/Flex:: Specify everything at runtime
* Apache/Session/Generate/MD5:: Use MD5 to create random object IDs
* Apache/Session/IPC:: Store client sessions via IPC::Shareable
* Apache/Session/Lock/File:: Provides mutual exclusion using flock
* Apache/Session/Lock/MySQL:: Provides mutual exclusion using MySQL
* Apache/Session/Lock/Null:: Does not actually provides mutual exclusion
* Apache/Session/Lock/Semaphore:: Provides mutual exclusion through sempahores
* Apache/Session/MySQL:: An implementation of Apache::Session
* Apache/Session/Oracle:: An implementation of Apache::Session
* Apache/Session/Postgres:: An implementation of Apache::Session
* Apache/Session/Serialize/Base64:: Use Storable and MIME::Base64 to zip up persistent data
* Apache/Session/Serialize/Storable:: Use Storable to zip up persistent data
* Apache/Session/Serialize/Sybase:: Use Storable to zip up persistent data and unpack/pack to put into Sybase-compatible image field
* Apache/Session/Serialize/UUEncode:: Use Storable and pack() to zip up persistent data
* Apache/Session/Store/DB_File:: Use DB_File to store persistent objects
* Apache/Session/Store/File:: Store persistent data on the filesystem
* Apache/Session/Store/MySQL:: Store persistent data in a MySQL database
* Apache/Session/Store/Oracle:: Store persistent data in a Oracle database
* Apache/Session/Store/Postgres:: Store persistent data in a Postgres database
* Apache/Session/Store/Sybase:: Store persistent data in a Sybase database
* Apache/Session/Sybase:: An implementation of Apache::Session
* Apache/Session/Win32:: Store client sessions in a global hash
* Apache/SetWWWTheme:: Standard theme generation, including sidebars and navigation bars
* Apache/ShowRequest:: Show phases and module participation
* Apache/SimpleReplace:: a simple template framework
* Apache/SizeLimit:: Because size does matter.
* Apache/SmallProf:: Hook Devel::SmallProf into mod_perl
* Apache/Stage:: Manage A Staging Directory
* Apache/StatINC:: Reload %INC files when updated on disk
* Apache/Status:: Embedded interpreter status information
* Apache/Storage:: Storing data in Apache.
* Apache/Sybase/CTlib:: Perl extension for creating persistant database connections to sybase using Apache and Sybperl.
* Apache/Symbol:: Things for symbol things
* Apache/Symdump:: Symbol table snapshots
* Apache/Table:: Perl interface to the Apache table structure
* Apache/Taco:: mod_perl handler for Taco
* Apache/TempFile:: Allocate temporary filenames for the duration of a request
* Apache/Template:: Apache/mod_perl interface to the Template Toolkit
* Apache/Throttle:: Apache/Perl module for speed-based content negotiation
* Apache/Throttle/Log:: Apache/Perl module to determine average speed
* Apache/TimedRedirect:: an Apache (mod_perl) TransHandler
* Apache/Traffic:: Tracks hits and bytes transferred on a per-user basis
* Apache/TransLDAP:: An Apache+mod_perl Trans Handler
* Apache/URI:: URI component parsing and unparsing
* Apache/UploadSvr:: A Lightweight Publishing System for Apache
* Apache/UploadSvr/User:: Identify users and permissions Apache::UploadSvr
* Apache/Usertrack:: Emulate the mod_usertrack apache module
* Apache/Util:: Interface to Apache C util functions
* Apache/VMonitor:: Visual System and Apache Server Monitor
* Apache/Watchdog/RunAway:: a monitor for hanging processes
* Apache/WebSNMP:: Allows for SNMP calls to be embedded in HTML
* Apache/XPP:: MISSING SHORT DESCRIPTION
* Apache/XPP/Cache:: XPP Cache manegment module
* Apache/XPP/Cache/Expiry:: Cache expiry superclass
* Apache/XPP/Cache/Expiry/Duration:: Duration based cache expiry.
* Apache/XPP/Cache/Store:: Cache store superclass
* Apache/XPP/Cache/Store/File:: flatfile cache store
* Apache/XPP/PreParse:: XPP TAG Parser
* Apache/httpd_conf:: Generate an httpd.conf file
* Apache/iNcom:: An e-commerce framework.
* Apache/iNcom/CartManager:: Object responsible for managing the user shopping cart.
* Apache/iNcom/Localizer:: Object responsible for the localization of the generated request.
* Apache/iNcom/OrderManager:: Module responsible for order management.
* Apache/iNcom/Request:: Manages the Apache::iNcom request's informations.
* Apache/iNcom/Session:: Apache::Session implementation for Apache::iNcom
* Apache/iNcom/SessionLocker:: Manage locks for iNcom's sessions.
* Apache/iNcom/UserDBAuthen:: mod_perl authentication handler that use the UserDB.
* Apache/iNcom/UserDBAuthz:: mod_perl authorization handler that use the UserDB.
* Apache/libapreq:: Generate compiler and linker flags for libapreq
* Apache/src:: Methods for locating and parsing bits of Apache source code
* Apache/test:: Facilitates testing of Apache::* modules


File: pm.info,  Node: App-menu,  Next: Module List,  Prev: Module List,  Up: Module List

App Menu
********

   This is the documentation for modules associated with the main module
App.

* Menu:

* App/Config:: Perl5 extension for managing global application configuration information.
* App/Manager:: Perl module for installing, managing and uninstalling software packages.


File: pm.info,  Node: AppConfig-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AppConfig Menu
**************

   This is the documentation for modules associated with the main module
AppConfig.

* Menu:

* AppConfig Itself: AppConfig. Perl5 module for reading configuration files and parsing command line arguments.
* AppConfig/Args:: Perl5 module for reading command line arguments.
* AppConfig/File:: Perl5 module for reading configuration files.
* AppConfig/Getopt:: Perl5 module for processing command line arguments via delegation to Getopt::Long.
* AppConfig/MyFile:: Perl5 module for reading configuration files.
* AppConfig/State:: Perl5 module for maintaining the state of an application configuration.
* AppConfig/Std:: subclass of AppConfig which provides standard options
* AppConfig/Sys:: Perl5 module defining platform-specific information and methods for other AppConfig::* modules.


File: pm.info,  Node: AppleII-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AppleII Menu
************

   This is the documentation for modules associated with the main module
AppleII.

* Menu:

* AppleII/Disk:: Block-level access to Apple II disk image files
* AppleII/ProDOS:: Access files on Apple II ProDOS disk images


File: pm.info,  Node: Archive-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Archive Menu
************

   This is the documentation for modules associated with the main module
Archive.

* Menu:

* Archive/Tar:: module for manipulation of tar archives.
* Archive/Zip:: Provide an interface to ZIP archive files.
* Archive/Zip/Tree:: methods for adding/extracting trees using Archive::Zip


File: pm.info,  Node: Array-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Array Menu
**********

   This is the documentation for modules associated with the main module
Array.

* Menu:

* Array/Compare:: Perl extension for comparing arrays.
* Array/FileReader:: Lazily tie files to arrays for reading
* Array/IntSpan:: a Module for handling arrays using IntSpan techniques
* Array/IntSpan/IP:: a Module for arrays using IP addresses as indices
* Array/Lookup:: Lookup strings in arrays or hash tables with abbreviation.
* Array/PrintCols:: Print or format array elements in vertically sorted columns.
* Array/RefElem:: Set up array elements as aliases
* Array/Reform:: Convert an array into N-sized array of arrays


File: pm.info,  Node: AsciiDB-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AsciiDB Menu
************

   This is the documentation for modules associated with the main module
AsciiDB.

* Menu:

* AsciiDB/TagFile:: Tie class for a simple ASCII database


File: pm.info,  Node: Astro-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Astro Menu
**********

   This is the documentation for modules associated with the main module
Astro.

* Menu:

* Astro/Coord:: Astronomical coordinate transformations
* Astro/Misc:: Miscellaneous astronomical routines
* Astro/MoonPhase:: Information about the phase of the moon
* Astro/SLA:: perl interface to SLAlib positional astronomy library
* Astro/Time:: Time based astronomical routines


File: pm.info,  Node: Async-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Async Menu
**********

   This is the documentation for modules associated with the main module
Async.

* Menu:

* Async Itself: Async. Asynchronous evaluation of Perl code (with optional timeouts)
* Async/Group:: Perl class to deal with simultaneous asynchronous calls


File: pm.info,  Node: Audio-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Audio Menu
**********

   This is the documentation for modules associated with the main module
Audio.

* Menu:

* Audio/CD:: Perl interface to libcdaudio (cd + cddb)
* Audio/CoolEdit:: Modules for reading & writing Syntrillium CoolEdit Pro .ses files.
* Audio/CoolEdit/Read:: Methods for reading Syntrillium CoolEdit Pro .ses files.
* Audio/CoolEdit/Write:: Methods for writing Syntrillium CoolEdit Pro .ses files.
* Audio/DSP:: Perl interface to *NIX digital audio device.
* Audio/MikMod:: Perl extension for libmikmod.
* Audio/Mix:: Module for fading cross-fading wav audio files.
* Audio/Play/MPG123:: a frontend to mpg123 version 0.59r and beyond.
* Audio/SoundFile:: Perl interface to libsndfile, a sound I/O library
* Audio/SoundFile/Header:: Interface to handle sound format information
* Audio/SoundFile/Reader:: Reader class for various sound formats
* Audio/SoundFile/Writer:: Writer class for various sound formats
* Audio/Tools:: Common Tools for Audio::Wav, Audio::Mix & Audio::CoolEdit
* Audio/Tools/ByteOrder:: Unpacking rules for little endian machines.
* Audio/Tools/Fades:: Fading in & out algorithms.
* Audio/Tools/Time:: time / sample / byte conversion tools.
* Audio/Wav:: Modules for reading & writing Microsoft Wav files.
* Audio/Wav/Read:: Module for reading Microsoft Wav files.
* Audio/Wav/Write:: Module for writing Microsoft Wav files.


File: pm.info,  Node: AudioCD-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AudioCD Menu
************

   This is the documentation for modules associated with the main module
AudioCD.

* Menu:

* AudioCD Itself: AudioCD. Module for basic Audio CD control
* AudioCD/Mac:: MacPerl extension for controlling Audio CDs


File: pm.info,  Node: Authen-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Authen Menu
***********

   This is the documentation for modules associated with the main module
Authen.

* Menu:

* Authen/ACE:: Perl extension for accessing a SecurID ACE server
* Authen/Challenge/Basic:: A Basic challenge/response authentication scheme.
* Authen/FAQ:: Frequently-Asked Questions about Authen::PAM.
* Authen/Krb4:: Perl extension for Kerberos 4
* Authen/Krb5:: Perl extension for Kerberos 5
* Authen/Libwrap:: access to Wietse Venema's TCP Wrappers library
* Authen/PAM:: Perl interface to PAM library
* Authen/PIN:: Create and verify strong PIN numbers
* Authen/Prot:: Perl extension for accessing protected password database
* Authen/SASL:: SASL Authentication base class
* Authen/Smb:: Perl extension to authenticate against an SMB server
* Authen/TacacsPlus:: Perl extension for authentication using tacacs+ server
* Authen/Ticket:: Perl extension for implementing ticket authentication
* Authen/Ticket/Client:: Authentication code for the client website
* Authen/Ticket/Server:: Perl extension for implementing ticket authentication.
* Authen/Ticket/Signature:: MISSING SHORT DESCRIPTION


File: pm.info,  Node: Aviation-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Aviation Menu
*************

   This is the documentation for modules associated with the main module
Aviation.

* Menu:

* Aviation/Report:: Perl extension for translating U.S. METAR, TAF and PIREP textual reports into plain English.


File: pm.info,  Node: Aw-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Aw Menu
*******

   This is the documentation for modules associated with the main module
Aw.

* Menu:

* Aw Itself: Aw. Perl extension for the ActiveWorks C Application Development Kit
* Aw/Adapter:: ActiveWorks Adapter Module.
* Aw/Client:: ActiveWorks Client Module.
* Aw/ClientX:: ActiveWorks Client Module.
* Aw/ConnectionDescriptor:: ActiveWorks Connection Descriptor Module.
* Aw/Event:: ActiveWorks Event Module.
* Aw/License:: ActiveWorks License Module.
* Aw/Log:: ActiveWorks Log Module.
* Aw/TypeDef:: ActiveWorks TypeDef Module.
* Aw/Util:: ActiveWorks Connection Descriptor Module.


File: pm.info,  Node: AxKit-menu,  Next: Module List,  Prev: Module List,  Up: Module List

AxKit Menu
**********

   This is the documentation for modules associated with the main module
AxKit.

* Menu:

* AxKit Itself: AxKit. an XML Delivery Toolkit for Apache
* AxKit/XSP/ESQL:: An Extended SQL taglib for AxKit eXtensible Server Pages
* AxKit/XSP/Exception:: Exceptions taglib for eXtensible Server Pages
* AxKit/XSP/Param:: A namespace wrapper for accessing HTTP request paramaters.
* AxKit/XSP/Sendmail:: Simple SMTP mailer tag library for AxKit eXtesible Server Pages.
* AxKit/XSP/Util:: XSP util: taglib.


File: pm.info,  Node: B-menu,  Next: Module List,  Prev: Module List,  Up: Module List

B Menu
******

   This is the documentation for modules associated with the main module B.

* Menu:

* B Itself: B. The Perl Compiler
* B/Asmdata:: Autogenerated data about Perl ops, used to generate bytecode
* B/Assembler:: Assemble Perl bytecode
* B/Bblock:: Walk basic blocks
* B/Bytecode:: Perl compiler's bytecode backend
* B/C:: Perl compiler's C backend
* B/CC:: Perl compiler's optimized C translation backend
* B/Debug:: Walk Perl syntax tree, printing debug info about ops
* B/Deparse:: Perl compiler backend to produce perl code
* B/Disassembler:: Disassemble Perl bytecode
* B/Fathom:: a module to evaluate the readability of Perl code
* B/FindAmpersand:: A compiler backend to find variables that set sawampersand
* B/Generate:: Create your own op trees.
* B/Graph:: Perl compiler backend to produce graphs of OP trees
* B/JVM/Emit:: Package used by B::JVM to emit Java Bytecode
* B/JVM/Jasmin:: Perl Backend module for generating JVM code via Jasmin Assembler
* B/JVM/Jasmin/CompileState:: Internal package used by B::JVM::Jasmin to keep state of compilation
* B/JVM/Jasmin/Emit:: Package used by B::JVM::Jasmin to emit Jasmin syntaxed                         file
* B/JVM/Utils:: Utility functions for B::JVM
* B/LexInfo:: Show information about subroutine lexical variables
* B/Lint:: Perl lint
* B/Showlex:: Show lexical variables used in functions or files
* B/Size:: Measure size of Perl OPs and SVs
* B/Stackobj:: Helper module for CC backend
* B/Terse:: Walk Perl syntax tree, printing terse info about ops
* B/TerseSize:: Printing info about ops and their (estimated) size
* B/Tree:: Simplified version of B::Graph for demonstration
* B/Xref:: Generates cross reference reports for Perl programs


File: pm.info,  Node: BIND-menu,  Next: Module List,  Prev: Module List,  Up: Module List

BIND Menu
*********

   This is the documentation for modules associated with the main module
BIND.

* Menu:

* BIND/Conf_Parser:: Parser class for BIND configuration files


File: pm.info,  Node: BSD-menu,  Next: Module List,  Prev: Module List,  Up: Module List

BSD Menu
********

   This is the documentation for modules associated with the main module
BSD.

* Menu:

* BSD/Ipfwgen:: Module to aid in the creation of ipfw-based firewalls
* BSD/Itimer:: Perl extension for accessing interval timers
* BSD/Resource:: BSD process resource limit and priority functions


File: pm.info,  Node: BTRIEVE-menu,  Next: Module List,  Prev: Module List,  Up: Module List

BTRIEVE Menu
************

   This is the documentation for modules associated with the main module
BTRIEVE.

* Menu:

* BTRIEVE/SAVE:: Perl extension to manipulate BTRIEVE SAVE records.


File: pm.info,  Node: Barcode-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Barcode Menu
************

   This is the documentation for modules associated with the main module
Barcode.

* Menu:

* Barcode/Code128:: Generate CODE 128 bar codes
* Barcode/Cuecat:: Perl extension for decoding :CueCat(tm) scans


File: pm.info,  Node: Be-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Be Menu
*******

   This is the documentation for modules associated with the main module
Be.

* Menu:

* Be/Attribute:: get and set MIME file attributes
* Be/Query:: do a Query for a given filesystem.


File: pm.info,  Node: Befunge-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Befunge Menu
************

   This is the documentation for modules associated with the main module
Befunge.

* Menu:

* Befunge/Interpreter:: Perl extension for interpreting befunge.


File: pm.info,  Node: BingoX-menu,  Next: Module List,  Prev: Module List,  Up: Module List

BingoX Menu
***********

   This is the documentation for modules associated with the main module
BingoX.

* Menu:

* BingoX/Argon:: Common methods used by many application classes.
* BingoX/Carbon:: An object oriented database abstraction superclass
* BingoX/Chromium:: Generic BingoX Admin module
* BingoX/Cobalt:: Cobalt display parent class containing generic methods
* BingoX/Time:: Time display parent class containing generic methods


File: pm.info,  Node: Bio-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Bio Menu
********

   This is the documentation for modules associated with the main module
Bio.

* Menu:

* Bio/AlignIO:: Handler for AlignIO Formats
* Bio/AlignIO/bl2seq:: bl2seq sequence input/output stream
* Bio/AlignIO/clustalw:: clustalw sequence input/output stream
* Bio/AlignIO/fasta:: fasta sequence input/output stream
* Bio/AlignIO/mase:: mase sequence input/output stream
* Bio/AlignIO/msf:: msf sequence input/output stream
* Bio/AlignIO/pfam:: pfam sequence input/output stream
* Bio/AlignIO/prodom:: prodom sequence input/output stream
* Bio/AlignIO/selex:: selex sequence input/output stream
* Bio/AlignIO/stockholm:: stockholm sequence input/output stream
* Bio/Annotation:: A generic object for annotations
* Bio/Annotation/Comment:: A comment object, holding text
* Bio/Annotation/DBLink:: DESCRIPTION of Object
* Bio/Annotation/Reference:: Specialised DBLink object for Literature References
* Bio/DB/Ace:: Database object interface to ACeDB servers
* Bio/DB/BioSeqI:: Abstract interface for a sequence database
* Bio/DB/GDB:: Database object interface to GDB HTTP query
* Bio/DB/GenBank:: Database object interface to GenBank
* Bio/DB/GenPept:: Database object interface to GenPept
* Bio/DB/NCBIHelper:: A collection of routines useful for queries to NCBI databases.
* Bio/DB/RandomAccessI:: Abstract interface for a sequence database
* Bio/DB/SeqI:: Abstract Interface for Sequence databases
* Bio/DB/SwissProt:: Database object interface to SwissProt retrieval
* Bio/DB/UpdateableSeqI:: An interface for writing to a database of sequences.
* Bio/DB/WebDBSeqI:: Object Interface to generalize Web Databases for   retrieving sequences
* Bio/DBLinkContainerI:: Abstract interface for any object wanting to use                           database cross references
* Bio/Factory/DriverFactory:: Base class for factory classes loading drivers
* Bio/Factory/SeqAnalysisParserFactory:: class capable of               creating SeqAnalysisParserI compliant parsers
* Bio/Factory/SeqAnalysisParserFactoryI:: interface describing objects capable               of creating SeqAnalysisParserI compliant parsers
* Bio/Index/Abstract:: Abstract interface for indexing a flat file
* Bio/Index/AbstractSeq:: Base class for AbstractSeq s
* Bio/Index/EMBL:: Interface for indexing (multiple) EMBL/Swissprot .dat files (ie flat file embl/swissprot format).
* Bio/Index/Fasta:: Interface for indexing (multiple) fasta files
* Bio/Index/GenBank:: Interface for indexing (multiple) GenBank .seq files (ie flat file GenBank format).
* Bio/Index/SwissPfam:: Interface for indexing swisspfam files
* Bio/Index/Swissprot:: Interface for indexing (multiple) Swissprot .dat files (ie flat file swissprot format).
* Bio/LiveSeq/AARange:: AARange abstract class for LiveSeq
* Bio/LiveSeq/Chain:: DoubleChain DataStructure for Perl
* Bio/LiveSeq/ChainI:: Double linked chain data structure
* Bio/LiveSeq/DNA:: DNA object for LiveSeq
* Bio/LiveSeq/Exon:: Range abstract class for LiveSeq
* Bio/LiveSeq/Gene:: Range abstract class for LiveSeq
* Bio/LiveSeq/IO/BioPerl:: Loader for LiveSeq from EMBL entries with BioPerl
* Bio/LiveSeq/IO/Loader:: Parent Loader for LiveSeq
* Bio/LiveSeq/IO/SRS:: Loader for LiveSeq from EMBL entries with SRS
* Bio/LiveSeq/Intron:: Range abstract class for LiveSeq
* Bio/LiveSeq/Mutation:: Mutation event descriptor class
* Bio/LiveSeq/Mutator:: Package mutating LiveSequences
* Bio/LiveSeq/Prim_Transcript:: Prim_Transcript class for LiveSeq
* Bio/LiveSeq/Range:: Range abstract class for LiveSeq
* Bio/LiveSeq/Repeat_Region:: Repeat_Region class for LiveSeq
* Bio/LiveSeq/Repeat_Unit:: Repeat_Unit class for LiveSeq
* Bio/LiveSeq/SeqI:: Abstract sequence interface class for LiveSeq
* Bio/LiveSeq/Transcript:: Transcript class for LiveSeq
* Bio/LiveSeq/Translation:: Translation class for LiveSeq
* Bio/LocatableSeq:: A Sequence object with start/end points on it
* Bio/Location/AvWithinCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the average for WITHIN and the widest possible and reasonable range otherwise
* Bio/Location/CoordinatePolicyI:: Abstract interface for objects implementing a certain policy of computing integer-valued coordinates of a Location
* Bio/Location/Fuzzy:: Implementation of a Location on a Sequence which has unclear start and/or end locations
* Bio/Location/FuzzyLocationI:: Abstract interface of a Location on a Sequence which has unclear start/end location
* Bio/Location/NarrowestCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the narrowest possible and reasonable range
* Bio/Location/Simple:: Implementation of a Simple Location on a Sequence
* Bio/Location/Split:: Implementation of a Location on a Sequence which has multiple locations (start/end points)
* Bio/Location/SplitLocationI:: Abstract interface of a Location on a Sequence which has multiple locations (start/end points)
* Bio/Location/WidestCoordPolicy:: class implementing  Bio::Location::CoordinatePolicy as the widest possible and reasonable range
* Bio/LocationI:: Abstract interface of a Location on a Sequence
* Bio/Parse:: The Bioperl ReadSeq interface
* Bio/PrimarySeq:: Bioperl lightweight Sequence Object
* Bio/PrimarySeqI:: Interface definition for a Bio::PrimarySeq
* Bio/Range:: Pure perl RangeI implementation
* Bio/RangeI:: Range interface
* Bio/Root/Err:: Exception class for Perl 5 objects
* Bio/Root/Global:: Global variables and utility functions
* Bio/Root/IO:: module providing several methods often needed when dealing with file IO
* Bio/Root/IOManager:: Input and output manager for Perl5 objects.
* Bio/Root/Object:: A core Perl 5 object.
* Bio/Root/RootI:: Abstract interface to root object code
* Bio/Root/Utilities:: General-purpose utility module
* Bio/Root/Vector:: Interface for managing linked lists of Perl5 objects.
* Bio/Root/Xref:: A generic cross-reference object.
* Bio/Search/Hit/Fasta:: Hit object specific for Fasta-generated hits
* Bio/Search/Hit/HitI:: Abstract interface for Hit objects
* Bio/Search/Processor:: DESCRIPTION of Object
* Bio/Search/Processor/Fasta:: Processor of Fasta-generated data streams
* Bio/Search/Processor/ProcessorI:: Abstract Interface for Processor Objects
* Bio/Search/Result/Fasta:: Result object for FASTA-generated data sources
* Bio/Search/Result/ResultI:: Abstract interface to Result objects
* Bio/SearchDist:: A perl wrapper around Sean Eddy's histogram object
* Bio/Seq:: Sequence object, with features
* Bio/Seq/LargePrimarySeq:: PrimarySeq object that stores sequence as files in the tempdir (as found by File::Temp) or the default method in Bio::Root::RootI
* Bio/Seq/LargeSeq:: SeqI compliant object that stores sequence as files in /tmp
* Bio/Seq/RichSeq:: Module implementing a sequence created from a rich sequence database entry
* Bio/Seq/RichSeqI:: RichSeq interface, mainly for database orientated sequences
* Bio/SeqAnalysisParserI:: Sequence analysis output parser interface
* Bio/SeqFeature/FeaturePair:: hold pair feature information e.g. blast hits
* Bio/SeqFeature/Gene/Exon:: a feature representing an exon
* Bio/SeqFeature/Gene/ExonI:: Interface for a feature representing an exon
* Bio/SeqFeature/Gene/GeneStructure:: A feature representing an arbitrarily            complex structure of a gene
* Bio/SeqFeature/Gene/GeneStructureI:: A feature representing an arbitrarily            complex structure of a gene
* Bio/SeqFeature/Gene/Transcript:: A feature representing a transcript
* Bio/SeqFeature/Gene/TranscriptI:: Interface for a feature representing a          transcript of exons, promoter(s), UTR, and a poly-adenylation site.
* Bio/SeqFeature/Generic:: Generic SeqFeature
* Bio/SeqFeature/Similarity:: A sequence feature based on similarity
* Bio/SeqFeature/SimilarityPair:: Sequence feature based on the similarity                   of two sequences.
* Bio/SeqFeatureI:: Abstract interface of a Sequence Feature
* Bio/SeqI:: Abstract Interface of Sequence (with features)
* Bio/SeqIO:: Handler for SeqIO Formats
* Bio/SeqIO/EMBL:: EMBL sequence input/output stream
* Bio/SeqIO/FTHelper:: Helper class for Embl/Genbank feature tables
* Bio/SeqIO/Fasta:: Fasta sequence input/output stream
* Bio/SeqIO/GCG:: Raw sequence input/output stream
* Bio/SeqIO/Handler:: Handler of the SeqIO classes for tieing to filehandles
* Bio/SeqIO/MultiFile:: Treating a set of files as a single input stream
* Bio/SeqIO/Raw:: Raw sequence input/output stream
* Bio/SeqIO/ace:: ace sequence input/output stream
* Bio/SeqIO/embl:: EMBL sequence input/output stream
* Bio/SeqIO/fasta:: fasta sequence input/output stream
* Bio/SeqIO/game:: Parses GAME XML 0.1 and higher into and out of Bio::Seq objects.
* Bio/SeqIO/gcg:: GCG sequence input/output stream
* Bio/SeqIO/genbank:: GenBank sequence input/output stream
* Bio/SeqIO/largefasta:: method i/o on very large fasta sequence files
* Bio/SeqIO/pir:: PIR sequence input/output stream
* Bio/SeqIO/raw:: raw sequence file input/output stream
* Bio/SeqIO/scf:: SCF sequence input/output stream
* Bio/SeqIO/swiss:: Swissprot sequence input/output stream
* Bio/SeqUtils:: Additional methods for PrimarySeq objects
* Bio/SimpleAlign:: Multiple alignments held as a set of sequences
* Bio/Species:: Generic species object
* Bio/Tk/GO_Browser:: MISSING SHORT DESCRIPTION
* Bio/Tk/HitDisplay:: Frame-based widget for displaying Fasta or Blast hits/HSPs with optional text annotation
* Bio/Tk/SeqCanvas:: MISSING SHORT DESCRIPTION
* Bio/Tools/AlignFactory:: Base object for alignment factories
* Bio/Tools/AnalysisResult:: Base class for analysis result objects and parsers
* Bio/Tools/BPbl2seq:: Lightweight BLAST parser for pair-wise sequence  alignment using the BLAST algorithm.
* Bio/Tools/BPlite:: Lightweight BLAST parser
* Bio/Tools/BPlite/HSP:: MISSING SHORT DESCRIPTION
* Bio/Tools/BPlite/Iteration:: object for parsing single iteration of a PSIBLAST report
* Bio/Tools/BPlite/Sbjct:: MISSING SHORT DESCRIPTION
* Bio/Tools/BPpsilite:: Lightweight BLAST parser for (iterated) psiblast reports
* Bio/Tools/Blast:: Bioperl BLAST sequence analysis object
* Bio/Tools/Blast/HSP:: Bioperl BLAST High-Scoring Segment Pair object
* Bio/Tools/Blast/HTML:: Bioperl Utility module for HTML formatting Blast reports
* Bio/Tools/Blast/Run/LocalBlast:: Bioperl module for running Blast analyses locally.
* Bio/Tools/Blast/Run/Webblast:: Bioperl module for running Blast analyses using a HTTP interface.
* Bio/Tools/Blast/Sbjct:: Bioperl BLAST "Hit" object
* Bio/Tools/CodonTable:: Bioperl codon table object
* Bio/Tools/ESTScan:: Results of one ESTScan run
* Bio/Tools/Fasta:: Bioperl Fasta utility object
* Bio/Tools/GFF:: A Bio::SeqAnalysisParserI compliant GFF format parser
* Bio/Tools/Genscan:: Results of one Genscan run
* Bio/Tools/HMMER/Domain:: One particular domain hit from HMMER
* Bio/Tools/HMMER/Results:: Object representing HMMER output results
* Bio/Tools/HMMER/Set:: Set of identical domains from HMMER matches
* Bio/Tools/IUPAC:: Generates unique Seq objects from an ambiguous Seq object
* Bio/Tools/MZEF:: Results of one MZEF run
* Bio/Tools/OddCodes:: Object holding alternative alphabet coding for  one protein sequence
* Bio/Tools/Prediction/Exon:: A predicted exon feature
* Bio/Tools/Prediction/Gene:: a predicted gene structure feature
* Bio/Tools/RestrictionEnzyme:: Bioperl object for a restriction endonuclease object.
* Bio/Tools/Run/Alignment/Clustalw:: Object for the calculation of a multiple sequence alignment from a set of unaligned sequences or alignments using the Clustalw program
* Bio/Tools/Run/Alignment/TCoffee:: Object for the calculation of a multiple sequence alignment from a set of unaligned sequences or alignments using the TCoffee program
* Bio/Tools/Run/StandAloneBlast:: Object for the local execution of the NCBI Blast program suite (blastall, blastpgp, bl2seq)
* Bio/Tools/SeqAnal:: Bioperl sequence analysis base class.
* Bio/Tools/SeqPattern:: Bioperl object for a sequence pattern or motif
* Bio/Tools/SeqStats:: Object holding statistics for one particular sequence
* Bio/Tools/SeqWords:: Object holding n-mer statistics for one sequence
* Bio/Tools/Sigcleave:: Bioperl object for sigcleave analysis
* Bio/Tools/Sim4/Exon:: A single exon determined by an alignment
* Bio/Tools/Sim4/Results:: Results of one Sim4 run
* Bio/Tools/WWW:: Bioperl manager for web resources related to biology.
* Bio/Tools/pSW:: pairwise Smith Waterman object
* Bio/UnivAln:: Bioperl alignment object
* Bio/Variation/AAChange:: Sequence change class for polypeptides
* Bio/Variation/AAReverseMutate:: point mutation and codon   information from single amino acid changes
* Bio/Variation/Allele:: Sequence object with allele-specific attributes
* Bio/Variation/DNAMutation:: DNA level mutation class
* Bio/Variation/IO:: Handler for sequence variation IO Formats
* Bio/Variation/IO/flat:: flat file sequence variation input/output stream
* Bio/Variation/IO/xml:: XML sequence variation input/output stream
* Bio/Variation/RNAChange:: Sequence change class for RNA level
* Bio/Variation/SeqDiff:: Container class for mutation/variant descriptions
* Bio/Variation/VariantI:: Sequence Change SeqFeature abstract class


File: pm.info,  Node: Bit-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Bit Menu
********

   This is the documentation for modules associated with the main module
Bit.

* Menu:

* Bit/ShiftReg:: Bit Shift Registers with Rotate / Shift Operations
* Bit/Vector:: Efficient bit vector, set of integers and "big int" math library
* Bit/Vector/Overload:: Overloaded operators add-on for Bit::Vector


File: pm.info,  Node: Bone-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Bone Menu
*********

   This is the documentation for modules associated with the main module
Bone.

* Menu:

* Bone/Easy:: Perl module for generating pickup lines.
* Bone/Easy/Rules:: Default ruleset for Bone::Easy


File: pm.info,  Node: Boulder-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Boulder Menu
************

   This is the documentation for modules associated with the main module
Boulder.

* Menu:

* Boulder Itself: Boulder. An API for hierarchical tag/value structures
* Boulder/Blast:: Parse and read BLAST files
* Boulder/Blast/NCBI:: Parse and read NCBI BLAST files
* Boulder/Blast/WU:: Parse and read WU-BLAST files
* Boulder/Genbank:: Fetch Genbank data records as parsed Boulder Stones
* Boulder/Medline:: Fetch Medline data records as parsed Boulder Stones
* Boulder/Omim:: Fetch Omim data records as parsed Boulder Stones
* Boulder/Store:: Simple persistent storage for Stone tag/value objects
* Boulder/Stream:: Read and write tag/value data from an input stream
* Boulder/Swissprot:: Fetch SwissProt data records as parsed Boulder Stones
* Boulder/Unigene:: Fetch Unigene data records as parsed Boulder Stones
* Boulder/XML:: XML format input/output for Boulder streams


File: pm.info,  Node: Bundle-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Bundle Menu
***********

   This is the documentation for modules associated with the main module
Bundle.

* Menu:

* Bundle/ABH:: A bundle to install all Ask's favorite modules
* Bundle/AO/Base:: libraries needed for AO servlet engine
* Bundle/AO/Standard:: libraries needed by standard AO interceptors
* Bundle/Apache:: Install Apache mod_perl and related modules
* Bundle/Apache/ASP:: Install Apache::ASP and related modules
* Bundle/BioPerl:: A bundle to install external CPAN modules used by BioPerl
* Bundle/Bugzilla:: A bundle of the modules required for Bugzilla.
* Bundle/Bundle-Expect:: Everything that Expect.pm needs
* Bundle/CPAN:: A bundle to play with all the other modules on CPAN
* Bundle/Cisco/Conf:: A bundle to install the Cisco::Conf module.
* Bundle/DBD/CSV:: A bundle to install the DBD::CSV driver
* Bundle/HTML/EP:: A bundle to install the HTML::EP package
* Bundle/HTML/Mason:: A bundle to install the HTML::Mason package
* Bundle/Interchange:: A bundle of the modules nice to have for Interchange.
* Bundle/IspMailGate:: A bundle to install the IspMailGate email filter.
* Bundle/LWP:: A bundle to install all libwww-perl related modules
* Bundle/MP3:: A bundle to install all MP3-related modules
* Bundle/Mail/IspMailGate:: A bundle to install the IspMailGate
* Bundle/Minivend:: A nice to have modules for MiniVend
* Bundle/Msql:: A bundle to install Perl drivers for mSQL or MySQL
* Bundle/Mysql:: A bundle to install Perl drivers for mSQL or MySQL
* Bundle/Net/LDAP:: A bundle for Net::LDAP
* Bundle/OpenInteract:: Bundle to install all the pre-requisites for OpenInteract
* Bundle/ParallelUA:: CPAN Bundle for the LWP Parallel User Agent extension
* Bundle/PlRPC:: A bundle to install PlRPC-Server, Client and prerequisites.
* Bundle/SNMP/MIB/Compiler:: A bundle to install all SNMP::MIB::Compiler related modules
* Bundle/SPOPS:: Bundle to install all the pre-requisites for SPOPS
* Bundle/Search/InvertedIndex:: A bundle to install all Search::InvertedIndex related modules
* Bundle/Slash:: A bundle to install all modules used for Slash
* Bundle/Tie/DB_File/SplitHash:: A bundle to install all Tie::DB_File::SplitHash related modules
* Bundle/Tie/FileLRUCache:: A bundle to install all Tie::FileLRUCache related modules
* Bundle/Tk:: CPAN Bundle for Tk and its dependencies
* Bundle/WWW/Search:: A bundle to install basic WWW::Search modules and prerequisites
* Bundle/WWW/Search/ALL:: A bundle to install all WWW::Search modules and backends
* Bundle/Weather:: a collection of modules for processing weather products
* Bundle/Wizard:: A bundle to install all the application Wizard
* Bundle/Wizard/LDAP:: A bundle to install all the LDAP Wizard
* Bundle/XML:: A bundle to install all XML-related modules
* Bundle/Xmms:: Bundle for xmms remote control shell
* Bundle/libnet:: A bundle to install all libnet related modules
* Bundle/pRPC-modules:: modules - A bundle to install pRPC-modules and prerequisites


