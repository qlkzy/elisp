This is Info file pm.info, produced by Makeinfo version 1.68 from the
input file bigpm.texi.


File: pm.info,  Node: Business-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Business Menu
*************

   This is the documentation for modules associated with the main module
Business.

* Menu:

* Business/CSI:: MISSING SHORT DESCRIPTION
* Business/Cashcow:: Perl wrapper for Cascow, a lib for making Dankort payment.
* Business/FedEx:: Win32 API Extension for FedEx ShipAPI
* Business/FedEx/Constants:: Constants used by Business::FedEx::ShipRequest;
* Business/FedEx/ShipAPI:: Interface to the FedEx API libraries (Win32 ONLY!!)
* Business/FedEx/ShipRequest:: Shipping/Tracking Interface to FedEx
* Business/ISBN:: work with International Standard Book Numbers
* Business/ISSN:: Perl extension for International Standard Serial Numbers
* Business/OnlinePayment:: Perl extension for online payment processing
* Business/OnlinePayment/AuthorizeNet:: AuthorizeNet backend for Business::OnlinePayment
* Business/OnlinePayment/Cardstream:: Cardstream Plugin for Business::OnlinePayment
* Business/UPC:: Perl extension for manipulating Universal Product Codes
* Business/UPS:: A UPS Interface Module
* Business/US_Amort:: class encapsulating US-style amortization


File: pm.info,  Node: C-menu,  Next: Module List,  Prev: Module List,  Up: Module List

C Menu
******

   This is the documentation for modules associated with the main module C.

* Menu:

* C/DynaLib:: Perl interface to C compiled code.
* C/DynaLib/Struct:: Tool for handling the C `struct' data type
* C/Scan:: scan C language files for easily recognized constructs.


File: pm.info,  Node: CGI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CGI Menu
********

   This is the documentation for modules associated with the main module
CGI.

* Menu:

* CGI Itself: CGI. Simple Common Gateway Interface Class
* CGI/ASP/Lite:: a Module for ASP emulation
* CGI/Apache:: Backward compatibility module for CGI.pm
* CGI/Application:: Framework for building reusable web-applications
* CGI/ArgChecker:: An extensible CGI parameter validation module (allowing commonly used checks on parameters to be called more concisely and consistently).
* CGI/Authent:: request a HTTP authentification under specified conditions
* CGI/Base:: HTTP Daemon Common Gateway Interface (CGI) Base Class
* CGI/BasePlus:: HTTP CGI Base Class with Handling of Multipart Forms
* CGI/CIPP:: Use CIPP embedded HTML Pages in a CGI environment
* CGI/Cache:: Perl extension to help cache output of time-intensive CGI scripts so that subsequent visits to such scripts will not cost as much time.
* CGI/Carp:: CGI routines for writing to the HTTPD (or other) error log
* CGI/ClientError:: send minimalistic error messages to the browser
* CGI/ConvertParam:: Decorator class which adds several hook to CGI::param().
* CGI/Cookie:: Interface to Netscape Cookies
* CGI/Debug:: module for CGI programs debugging
* CGI/EncryptForm:: Implement trusted stateful CGI Form Data using cryptography.
* CGI/Enurl:: module for URL-encoding strings and hashes
* CGI/Explorer:: A class to manage a tree of data, for use in CGI scripts
* CGI/FMBundle:: A bundle to install everything required for FormMagick
* CGI/Fast:: CGI Interface for Fast CGI
* CGI/FastTemplate:: Perl extension for managing templates, and performing variable interpolation.
* CGI/Form:: Build Smart HTML Forms on Top of the CGI:: Modules
* CGI/FormMagick:: easily create CGI form-based applications
* CGI/FormMagick/FAQ:: Frequently asked questions about FormMagick
* CGI/FormMagick/L10N:: MISSING SHORT DESCRIPTION
* CGI/FormMagick/TagMaker:: Perl module that can create any HTML tags, as well as groups of or just parts of them, and complete html headers or footers.
* CGI/FormMagick/Validator:: MISSING SHORT DESCRIPTION
* CGI/Formalware:: Convert an XML file into a suite of CGI forms.
* CGI/Imagemap:: imagemap behavior for CGI programs
* CGI/Lite:: Perl module to process and decode WWW forms and cookies.
* CGI/Log:: Perl extension for centralized logging of debug, error, status and success messages from scripts or other modules.
* CGI/LogCarp:: Error, log and debug streams, httpd style format
* CGI/MiniSvr:: Adds to CGI::Base the ability for a CGI script to become a mini http server.
* CGI/Minimal:: A lightweight CGI form processing pacakge
* CGI/MozSniff:: Sniff out various versions of browsers claming to be "Mozilla".
* CGI/Out:: buffer output when building CGI programs
* CGI/PathInfo:: A lightweight CGI processing package for using PATH_INFO like GET method form parameters
* CGI/Persistent:: Transparent state persistence for CGI applications.
* CGI/Pretty:: module to produce nicely formatted HTML code
* CGI/PrintWrapper:: CGI methods output to a print handle
* CGI/Push:: Simple Interface to Server Push
* CGI/QuickForm:: Perl module to provide quick CGI forms.
* CGI/Request:: Parse client request via a CGI interface
* CGI/Response:: Respond to CGI requests
* CGI/SSI:: Use SSI from CGI scripts
* CGI/SSI_Parser:: Implement SSI for Perl CGI
* CGI/Screen:: Perl extension for easy creation of multi screen CGI scripts
* CGI/State:: Converts CGI parameters into a multi-dimensional hash
* CGI/Switch:: Backward compatibility module for defunct CGI::Switch
* CGI/Util:: Internal utilities used by CGI module
* CGI/Validate:: Advanced CGI form parser and type validation
* CGI/WML:: Subclass LDS's "CGI.pm" for WML output and WML methods
* CGI/WeT:: Suite of modules to themeify a website
* CGI/WeT/Chooser:: Cookie setter for theme selection
* CGI/WeT/Engine:: Theme engine for the CGI::WeT package
* CGI/WeT/Modules/Basic:: Basic rendering engine extensions
* CGI/WeT/Modules/Calendar:: Extensions to engine to allow calendar management
* CGI/WeT/Modules/Documentation:: Extensions to engine to allow documentation management
* CGI/WeT/Modules/News:: Extensions to engine to allow article management
* CGI/WeT/Theme:: Theme loader for the CGI::WeT package
* CGI/WeT/Theme/Loader/HTML:: Module to load HTML theme definitions
* CGI/WeT/Theme/Loader/WeT:: Module to load pre-0.6 themes
* CGI/WeT/User:: User database interface for CGI::WeT
* CGI/WeT/User/DBI/LDAP:: interface between CGI::WeT::User and Net::LDAP
* CGI/Wrap:: buffer output when building CGI programs
* CGI/XML:: Perl extension for converting CGI.pm variables to/from XML
* CGI/XMLForm:: Extension of CGI.pm which reads/generates formated XML.


File: pm.info,  Node: CGI3-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CGI3 Menu
*********

   This is the documentation for modules associated with the main module
CGI3.

* Menu:

* CGI3 Itself: CGI3. Simple Common Gateway Interface Class
* CGI3/Fast:: CGI3 Interface for Fast CGI3
* CGI3/Pretty:: module to produce nicely formatted HTML code
* CGI3/Push:: Simple Interface to Server Push


File: pm.info,  Node: CIDR-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CIDR Menu
*********

   This is the documentation for modules associated with the main module
CIDR.

* Menu:

* CIDR/Assign:: Manage assignments out of a group of CIDR blocks


File: pm.info,  Node: CIPP-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CIPP Menu
*********

   This is the documentation for modules associated with the main module
CIPP.

* Menu:

* CIPP Itself: CIPP. Powerful preprocessor for embedding Perl and SQL in HTML
* CIPP/Manual:: Reference Manual


File: pm.info,  Node: CONFIG-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CONFIG Menu
***********

   This is the documentation for modules associated with the main module
CONFIG.

* Menu:

* CONFIG/Hash:: Class to read 2-column files into a hash
* CONFIG/Plain:: Base class for cached file reading


File: pm.info,  Node: CPAN-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CPAN Menu
*********

   This is the documentation for modules associated with the main module
CPAN.

* Menu:

* CPAN Itself: CPAN. query, download and build perl modules from CPAN sites
* CPAN/Admin:: A CPAN Shell for CPAN admins
* CPAN/Checksums:: Write a CHECKSUMS file for a directory as on CPAN
* CPAN/FirstTime:: Utility for CPAN::Config file Initialization
* CPAN/Nox:: Wrapper around CPAN.pm without using any XS module
* CPAN/Site:: CPAN.pm subclass for adding site local modules
* CPAN/WAIT:: adds commands to search a WAIT4CPAN server to the CPAN `shell()'


File: pm.info,  Node: CSS-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CSS Menu
********

   This is the documentation for modules associated with the main module
CSS.

* Menu:

* CSS/Parser:: parser for CSS-style syntax


File: pm.info,  Node: Cache-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Cache Menu
**********

   This is the documentation for modules associated with the main module
Cache.

* Menu:

* Cache/Mmap:: Shared data cache using memory mapped files


File: pm.info,  Node: Calendar-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Calendar Menu
*************

   This is the documentation for modules associated with the main module
Calendar.

* Menu:

* Calendar/CSA:: Perl extension to interface with CDE Calendar Manager


File: pm.info,  Node: Carp-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Carp Menu
*********

   This is the documentation for modules associated with the main module
Carp.

* Menu:

* Carp Itself: Carp. warn of errors (from perspective of caller)
* Carp/Assert:: executable comments
* Carp/Heavy:: Carp guts
* Carp/Notify:: Loudly complain in lots of places when things break badly


File: pm.info,  Node: CfgTie-menu,  Next: Module List,  Prev: Module List,  Up: Module List

CfgTie Menu
***********

   This is the documentation for modules associated with the main module
CfgTie.

* Menu:

* CfgTie/CfgArgs:: Configuration module for parsing commandline arguments
* CfgTie/Cfgfile:: An object to help interface to configuration files
* CfgTie/TieAliases:: an associative array of mail aliases to targets
* CfgTie/TieGeneric:: A generic hash that automatically binds others
* CfgTie/TieGroup:: an associative array of group names and ids to information
* CfgTie/TieHost:: This accesses the hosts tables.
* CfgTie/TieMTab:: an associative array of mount entries
* CfgTie/TieNamed:: A tool to help configure the name daemon (BIND DNS server)
* CfgTie/TieNet:: A module to tie in the net database
* CfgTie/TiePh:: a ph phonebook server configuration tool
* CfgTie/TieProto:: Ties the protocol number file to a  PERL hash
* CfgTie/TieRCService:: A module to manage Unix services
* CfgTie/TieRealm:: Ties configuration variables to various HTTP servers
* CfgTie/TieRsrc:: an associative array of resources and their usage limits
* CfgTie/TieServ:: A HASH tie that allows access the service port database
* CfgTie/TieShadow:: an associative array of user names to password information
* CfgTie/TieUser:: an associative array of user names and ids to information
* CfgTie/filever:: a simple module for substituting newer versions into a file system.


File: pm.info,  Node: Chart-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Chart Menu
**********

   This is the documentation for modules associated with the main module
Chart.

* Menu:

* Chart Itself: Chart. a series of charting modules
* Chart/Graph:: Perl extension for a front-end to gnuplot and XRT.
* Chart/PNGgraph:: Graph Plotting Module (deprecated)
* Chart/PNGgraph/colour:: Colour manipulation routines for use with Chart::PNGgraph
* Chart/Plot:: Plot two dimensional data in an image. Version 0.10.
* Chart/ThreeD/Pie:: 3D Piechart
* Chart/XMGR:: object for displaying data via XMGR


File: pm.info,  Node: Chatbot-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Chatbot Menu
************

   This is the documentation for modules associated with the main module
Chatbot.

* Menu:

* Chatbot/Eliza:: A clone of the classic Eliza program


File: pm.info,  Node: Chemistry-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Chemistry Menu
**************

   This is the documentation for modules associated with the main module
Chemistry.

* Menu:

* Chemistry/Elements:: Perl extension for working with Chemical Elements


File: pm.info,  Node: Chess-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Chess Menu
**********

   This is the documentation for modules associated with the main module
Chess.

* Menu:

* Chess/Pgn:: Perl extension for manipulation of chess PGN format. PGN is for  Portable Game Notation and follow the *Portable Game Notation Specification and Implementation Guide* revised 1994.03.12. You can find it at `http:' in this node.


File: pm.info,  Node: Circa-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Circa Menu
**********

   This is the documentation for modules associated with the main module
Circa.

* Menu:

* Circa/Indexer:: provide functions to administrate Circa,  a www search engine running with Mysql
* Circa/Search:: provide functions to perform search on Circa, a www search engine running with Mysql


File: pm.info,  Node: Cisco-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Cisco Menu
**********

   This is the documentation for modules associated with the main module
Cisco.

* Menu:

* Cisco/Conf:: Perl module for configuring Cisco routers via TFTP
* Cisco/Conf/Install:: Create a configuration file for the Cisco::Conf module


File: pm.info,  Node: Class-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Class Menu
**********

   This is the documentation for modules associated with the main module
Class.

* Menu:

* Class/Accessor:: Automated accessor generation
* Class/Accessor/Fast:: Faster, but less expandable, accessors
* Class/Autouse:: Defer loading ( 'use'ing ) of a class until run time
* Class/BlackHole:: base class to treat unhandled method calls as no-ops
* Class/Class:: Adds data members to Perl packages
* Class/Classgen/Attribute:: generates all get- and set-methods for new classes created by classgen.
* Class/Classgen/Classgen:: script that generates a class-module from a control file.
* Class/Classgen/Comments:: To keep some nasty errors from users of classgen.
* Class/Classgen/New:: Creates the new() method for classes generated by classgen.
* Class/Classgen/Section:: Identifies the diffferent sections from classgens control file.
* Class/Classless:: framework for classless OOP
* Class/Contract:: Design-by-Contract OO in Perl.
* Class/Contract/Production:: Design-by-Contract OO in Perl.
* Class/DBI:: Simple Object Persistance
* Class/Data/Inheritable:: Inheritable, overridable class data
* Class/Delegate:: easy-to-use implementation of object delegation.
* Class/Fields:: Inspect the fields of a class.
* Class/Fields/Attribs:: Attribute constants for use with data members
* Class/Fields/Fuxor:: Low level manipuation of object data members
* Class/Fields/Inherit:: Inheritance of %FIELDS
* Class/Generate:: Generate Perl class hierarchies
* Class/Handler:: Create Apache-like pseudoclass event handlers
* Class/ISA:: report the search path for a class's ISA tree
* Class/Iter:: Iterator superclass for Class::Visitor
* Class/MethodMaker:: a module for creating generic methods
* Class/Multimethods:: Support multimethods and function overloading in Perl
* Class/Mutator:: MISSING SHORT DESCRIPTION
* Class/NamedParms:: A lightweight named parameter handling system.
* Class/ObjectTemplate:: MISSING SHORT DESCRIPTION
* Class/ObjectTemplate/DB:: Perl extension for an optimized template builder base class with lookup capability.
* Class/ParamParser:: Provides complex parameter list parsing.
* Class/ParmList:: A collection of routines for processing named parameter lists for method calls.
* Class/Phrasebook:: Implements the Phrasebook pattern
* Class/Phrasebook/SQL:: Implements the Phrasebook pattern for SQL statements.
* Class/SelfMethods:: a Module for supporting instance-defined methods
* Class/Singleton:: Implementation of a "Singleton" class
* Class/Struct:: declare struct-like datatypes as Perl classes
* Class/Struct/FIELDS:: Combine Class::Struct, base and fields
* Class/Tom:: The Transportable Object Model for Perl
* Class/Translucent:: A base class for translucency
* Class/Tree:: Build and print hierarchical information such as directory trees and C++ classes.
* Class/Virtual:: Base class for virtual base classes.
* Class/Virtually/Abstract:: Compile-time enforcement of Class::Virtual
* Class/Visitor:: Visitor and Iterator extensions to Class::Template
* Class/WhiteHole:: base class to treat unhandled method calls as errors


File: pm.info,  Node: ClearCase-menu,  Next: Module List,  Prev: Module List,  Up: Module List

ClearCase Menu
**************

   This is the documentation for modules associated with the main module
ClearCase.

* Menu:

* ClearCase/Argv:: ClearCase-specific subclass of Argv
* ClearCase/ClearPrompt:: Handle clearprompt in a portable, convenient way
* ClearCase/SyncTree:: Synchronize a tree of files with a tree of elements
* ClearCase/Wrapper:: general-purpose wrapper for *cleartool*
* ClearCase/Wrapper/Site:: site-specific overrides for ClearCase::Wrapper


File: pm.info,  Node: Compress-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Compress Menu
*************

   This is the documentation for modules associated with the main module
Compress.

* Menu:

* Compress/Bzip2:: Interface to Bzip2 compression library
* Compress/LZF:: extremely leight-weight Lev-Zimpel-Free compression
* Compress/LZO:: Interface to LZO compression library
* Compress/LZV1:: extremely leight-weight Lev-Zimpel-Vogt compression
* Compress/Zlib:: Interface to zlib compression library


File: pm.info,  Node: Config-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Config Menu
***********

   This is the documentation for modules associated with the main module
Config.

* Menu:

* Config Itself: Config. access Perl configuration information
* Config/Access:: Perform simple access control
* Config/FreeForm:: Provide in-memory configuration data
* Config/General:: If you need multiple blocks of the same name, then you have to name every block. This works much like apache config. If the module finds a named block, it will create a hashref with the left part of the named block as the key containing one or more hashrefs with the right part of the block as key containing everything inside the block(which may again be nested!). As examples says more than words:
* Config/General/Extended:: Extended access to Config files
* Config/Ini:: Perl interface to MS-Windows registry files, Windows .ini     and Unreal style .ini files.
* Config/IniFiles:: A module for reading .ini-style configuration files.
* Config/Properties:: read Java-style properties files
* Config/User:: API for locating user information regardless of OS


File: pm.info,  Node: ConfigReader-menu,  Next: Module List,  Prev: Module List,  Up: Module List

ConfigReader Menu
*****************

   This is the documentation for modules associated with the main module
ConfigReader.

* Menu:

* ConfigReader/Simple:: Simple configuration file parser


File: pm.info,  Node: Conjury-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Conjury Menu
************

   This is the documentation for modules associated with the main module
Conjury.

* Menu:

* Conjury Itself: Conjury. Introduction to Perl Conjury
* Conjury/C:: Perl Conjury with C/C++ compilers, linkers and archivers
* Conjury/C/GNU:: Perl Conjury with the GNU C/C++ tools
* Conjury/C/Sun:: Perl Conjury with the Sun Workshop C/C++ tools
* Conjury/Core:: the foundation of Perl Conjury
* Conjury/Core/Prototype:: function prototype checking in Conjury


File: pm.info,  Node: ControlX10-menu,  Next: Module List,  Prev: Module List,  Up: Module List

ControlX10 Menu
***************

   This is the documentation for modules associated with the main module
ControlX10.

* Menu:

* ControlX10/CM11:: Perl extension for X10 'ActiveHome' Controller
* ControlX10/CM17:: Perl extension for 'FireCracker' RF Transmitter


File: pm.info,  Node: Convert-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Convert Menu
************

   This is the documentation for modules associated with the main module
Convert.

* Menu:

* Convert/ASN1:: ASN.1 Encode/Decode library
* Convert/BER:: ASN.1 Basic Encoding Rules
* Convert/Base32:: Encoding and decoding of base32 strings
* Convert/BinHex:: extract data from Macintosh BinHex files
* Convert/Context:: an Attributed Text data type
* Convert/Cyrillic:: Routines for converting from one cyrillic charset to another.
* Convert/EBCDIC:: Perl module for string conversion between EBCDIC and ASCII
* Convert/Ethiopic:: Perl extension for the Ethiopic information processing library.
* Convert/Ethiopic/Cstocs:: conversions of charset encodings for Ethiopic script
* Convert/Ethiopic/System:: conversions of charset encodings for Ethiopic script
* Convert/Ethiopic/Time:: conversions of calendar systems to/from Ethiopic and Gregorian.
* Convert/GeekCode:: Convert and generate geek code sequences.
* Convert/IBM390:: functions for manipulating mainframe data
* Convert/IBM390p:: OBSOLETE
* Convert/Morse:: Package to convert between ASCII text and MORSE alphabet.
* Convert/RACE:: Conversion between Unicode and RACE
* Convert/Recode:: make mapping functions between character sets
* Convert/Scalar:: convert between different representations of perl scalars
* Convert/SciEng:: Convert 'numbers' with scientific postfixes
* Convert/TNEF:: Perl module to read TNEF files
* Convert/Translit:: Perl module for string conversion among numerous character sets
* Convert/UU:: Perl module for uuencode and uudecode
* Convert/UUlib:: Perl interface to the uulib library (a.k.a. uudeview/uuenview).
* Convert/Units/Base:: base object for performing unit conversions


File: pm.info,  Node: Crypt-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Crypt Menu
**********

   This is the documentation for modules associated with the main module
Crypt.

* Menu:

* Crypt/Beowulf:: Beowulf encryption
* Crypt/Blowfish:: Perl Blowfish encryption module
* Crypt/Blowfish_PP:: Blowfish encryption algorithm implemented purely in Perl
* Crypt/CBC:: Encrypt Data with Cipher Block Chaining Mode
* Crypt/CBCeasy:: Easy things make really easy with Crypt::CBC
* Crypt/CipherSaber:: Perl module implementing CipherSaber encryption.
* Crypt/DES:: Perl interface to DES block cipher
* Crypt/DES_PP:: Perl extension for DES encryption
* Crypt/ECB:: Encrypt Data using ECB Mode
* Crypt/GPG:: A module for accessing GnuPG functionality.
* Crypt/HCE_MD5:: Perl extension implementing one way hash chaining encryption using MD5
* Crypt/HCE_SHA:: Perl extension implementing one way hash chaining encryption using SHA
* Crypt/IDEA:: Perl interface to IDEA block cipher
* Crypt/PGP2:: module for programmatic PGP 2.x on Unix
* Crypt/PGP5:: An Object Oriented Interface to PGP5.
* Crypt/Passwd:: Perl wrapper around the UFC Crypt
* Crypt/PasswdMD5:: Provides interoperable MD5-based crypt() function
* Crypt/Primes:: Provable Prime Number Generator suitable for Cryptographic Applications.
* Crypt/RC4:: Perl implementation of the RC4 encryption algorithm
* Crypt/RIPEMD160:: Perl extension for the RIPEMD-160 Hash function
* Crypt/RIPEMD160/MAC:: Perl extension for RIPEMD-160 MAC function
* Crypt/RSA:: RSA public-key cryptosystem.
* Crypt/RSA/DataFormat:: Data creation, conversion and reporting primitives.
* Crypt/RSA/Debug:: Debug routine for Crypt::RSA.
* Crypt/RSA/EME/OAEP:: Plaintext-aware encryption with RSA.
* Crypt/RSA/Errorhandler:: Parent class for Crypt::RSA::*, provides error handling capabilities.
* Crypt/RSA/Key:: RSA Key Pair Generator.
* Crypt/RSA/Key/Private:: RSA Private Key Management.
* Crypt/RSA/Key/Public:: RSA Public Key Management.
* Crypt/RSA/Primitives:: RSA encryption, decryption, signature and verification primitives.
* Crypt/RSA/SSA/PSS:: Probablistic Signature Scheme based on RSA.
* Crypt/RandPasswd:: random password generator based on FIPS-181
* Crypt/Random:: Cryptographically Secure, True Random Number Generator.
* Crypt/Rijndael:: Crypt::CBC compliant Rijndael encryption module
* Crypt/Rot13:: a rotational deviator
* Crypt/SSLeay:: OpenSSL glue that provides LWP https support
* Crypt/Solitaire:: Solitaire encryption
* Crypt/TripleDES:: Triple DES encyption.
* Crypt/Twofish2:: Crypt::CBC compliant Twofish encryption module
* Crypt/UnixCrypt:: perl-only implementation of the crypt function.
* Crypt/xDBM_File:: encrypt almost any kind of dbm file


File: pm.info,  Node: Curses-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Curses Menu
***********

   This is the documentation for modules associated with the main module
Curses.

* Menu:

* Curses Itself: Curses. terminal screen handling and optimization
* Curses/Forms:: Curses-based form handling for Curses::Widgets
* Curses/Widgets:: Curses-based widgets and functions


File: pm.info,  Node: Cz-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Cz Menu
*******

   This is the documentation for modules associated with the main module
Cz.

* Menu:

* Cz/Cstocs:: conversions of charset encodings for the Czech language
* Cz/Sort:: Czech sort
* Cz/Time:: Routines for printing dates in Czech


File: pm.info,  Node: D-menu,  Next: Module List,  Prev: Module List,  Up: Module List

D Menu
******

   This is the documentation for modules associated with the main module D.

* Menu:

* D/oh:: Debug module
* D/oh/Year:: Catch stupid mistakes when mucking with years, like Y2K bugs


File: pm.info,  Node: DBD-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DBD Menu
********

   This is the documentation for modules associated with the main module
DBD.

* Menu:

* DBD/CSV:: DBI driver for CSV files
* DBD/File:: Base class for writing DBI drivers for plain files
* DBD/JDBC:: JDBC proxy driver for the DBI module
* DBD/Ovrimos:: DBI Driver for Ovrimos (formerly Altera SQL Server)
* DBD/Recall:: Database fault tolerance through replication.
* DBD/XBase:: DBI driver for XBase compatible database files
* DBD/mSQL:: mSQL and mysql drivers for the Perl5 Database Interface (DBI)
* DBD/mysql:: mSQL and mysql drivers for the Perl5 Database Interface (DBI)


File: pm.info,  Node: DBI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DBI Menu
********

   This is the documentation for modules associated with the main module
DBI.

* Menu:

* DBI/FAQ:: The Frequently Asked Questions for the Perl5 Database Interface


File: pm.info,  Node: DBIx-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DBIx Menu
*********

   This is the documentation for modules associated with the main module
DBIx.

* Menu:

* DBIx/Abstract:: DBI SQL abstraction
* DBIx/AnyDBD:: DBD independant class
* DBIx/Broker:: a little layer somewhere between top-level code and raw DBI calls
* DBIx/CGITables:: Easy DB access from a CGI
* DBIx/CGITables/MakeTemplates:: creates templates for CGITables.
* DBIx/Copy:: For copying database content from one db to another
* DBIx/DBSchema:: Database-independent schema objects
* DBIx/DBSchema/ColGroup:: Column group objects
* DBIx/DBSchema/ColGroup/Index:: Index column group object
* DBIx/DBSchema/ColGroup/Unique:: Unique column group object
* DBIx/DBSchema/Column:: Column objects
* DBIx/DBSchema/DBD:: DBIx::DBSchema Driver Writer's Guide and Base Class
* DBIx/DBSchema/DBD/Pg:: PostgreSQL native driver for DBIx::DBSchema
* DBIx/DBSchema/DBD/mysql:: MySQL native driver for DBIx::DBSchema
* DBIx/DBSchema/Table:: Table objects
* DBIx/DataSource:: Database-independant create and drop functions
* DBIx/DataSource/Driver:: Driver Writer's Guide and base class
* DBIx/DataSource/Pg:: PostgreSQL driver for DBIx::DataSource
* DBIx/DataSource/mysql:: MySQL driver for DBIx::DataSource
* DBIx/Formatter:: Module to perform report generation via query DBI
* DBIx/FullTextSearch:: Indexing documents with MySQL as storage
* DBIx/FullTextSearch/StopList:: Stopwords for DBIx::FullTextSearch
* DBIx/HTMLView:: For handling DBI relation databases and web interfaces
* DBIx/HTMLView/Bool:: A boolean field
* DBIx/HTMLView/CGIGermanListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIQueryListView:: A List user interface for DBI databases
* DBIx/HTMLView/CGIReqEdit:: A simple CGI editor for single posts
* DBIx/HTMLView/CGIReqView:: A Requester viewer/editor for DBI databases
* DBIx/HTMLView/CGIView:: Common CGI functions for the viewers
* DBIx/HTMLView/DB:: A generic DBI databse with SQL interface
* DBIx/HTMLView/Date:: A simple date filed
* DBIx/HTMLView/Field:: Base class for field classes
* DBIx/HTMLView/Fld:: Base class for field and relation classes
* DBIx/HTMLView/Fmt:: Basic parser for fmt strings and files
* DBIx/HTMLView/Id:: A index field used to identify posts
* DBIx/HTMLView/Int:: An integer field
* DBIx/HTMLView/N2N:: A many to many relation between two tabels
* DBIx/HTMLView/N2One:: A many to one relation between two tabels
* DBIx/HTMLView/Post:: A post in a DBI database
* DBIx/HTMLView/PostSet:: A set posts as in a search result for example
* DBIx/HTMLView/Relation:: A relation base class
* DBIx/HTMLView/Selection:: A kriteria used to select posts
* DBIx/HTMLView/Str:: A single line string filed
* DBIx/HTMLView/Table:: A table within a generic DBI databse
* DBIx/HTMLView/Text:: A multi line string filed
* DBIx/HTMLView/Tree::   DBIx::HTMLView::Tree
* DBIx/HTMLView/msqlDB:: interface for msql databases through DBI
* DBIx/HTMLView/mysqlDB:: interface for mysql databases through DBI
* DBIx/HTMLinterface:: Class for creating a CGI interface to a database
* DBIx/KwIndex:: create and maintain keyword indices in DBI tables
* DBIx/Lookup/Field:: Create a lookup hash from a database table
* DBIx/MSSQLReporter:: An module to connect Perl to MS SQL Server and MS Data Engine
* DBIx/OracleSequence:: interface to Oracle sequences via DBI.
* DBIx/Password:: Allows you to create a global password file for DB passwords
* DBIx/Profile:: DBI query profiler   Version 1.0
* DBIx/Renderer:: talk SQL by using Perl data structures
* DBIx/Renderer/Base:: base class for DBI renderers
* DBIx/Renderer/Constants:: constants for the DBI rendering framework
* DBIx/Renderer/Postgres:: DBI renderer for the Postgres SQL variant
* DBIx/Schema:: An SQL Abstration layer for working with whole schemas
* DBIx/SearchBuilder:: Perl extension for easy SQL SELECT Statement generation
* DBIx/SearchBuilder/Handle:: Perl extension which is a generic DBI handle
* DBIx/SearchBuilder/Handle/Oracle:: an oracle specific Handle object
* DBIx/SearchBuilder/Handle/Pg:: MISSING SHORT DESCRIPTION
* DBIx/SearchBuilder/Handle/mysql:: a mysql specific Handle object
* DBIx/SearchBuilder/Record:: Perl extension for subclassing, so you can deal with a Record
* DBIx/SearchProfiles:: Access to SQL database via template query.
* DBIx/Table:: Class used to represent DBI database tables.
* DBIx/TextIndex:: Perl extension for full-text searching in SQL databases
* DBIx/Tree:: Perl module for generating a tree from a self-referential table
* DBIx/UserDB:: Module to manage a user database using DBIx::SearchProfiles
* DBIx/XMLMessage:: XML Message exchange between DBI data sources
* DBIx/XML_RDB:: Perl extension for creating XML from existing DBI datasources


File: pm.info,  Node: DBM-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DBM Menu
********

   This is the documentation for modules associated with the main module
DBM.

* Menu:

* DBM/DBass:: DBM with associative arrays, file locking and XML records


File: pm.info,  Node: DB_File-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DB_File Menu
************

   This is the documentation for modules associated with the main module
DB_File.

* Menu:

* DB_File Itself: DB_File. Perl5 access to Berkeley DB version 1.x
* DB_File/Lock:: Locking with flock wrapper for DB_File


File: pm.info,  Node: DCE-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DCE Menu
********

   This is the documentation for modules associated with the main module
DCE.

* Menu:

* DCE/ACL:: Perl interface to DCE ACL client API
* DCE/DFS:: Perl module interface to DFS internals
* DCE/Login:: Perl extension for interfacing to the DCE login API
* DCE/Registry:: Perl interface to DCE Registry API
* DCE/Status:: Make sense of DCE status codes
* DCE/UUID:: Misc UUID functions
* DCE/aclbase:: Constants from dce/aclbase.h
* DCE/attrbase:: Perl extension for blah blah blah
* DCE/login_base:: Constants from sec_login_*.h
* DCE/rgybase:: Constants from dce/rgybase.h
* DCE/rpcbase:: Perl extension for blah blah blah


File: pm.info,  Node: DDL-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DDL Menu
********

   This is the documentation for modules associated with the main module
DDL.

* Menu:

* DDL/Oracle:: a DDL generator for Oracle databases


File: pm.info,  Node: DFA-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DFA Menu
********

   This is the documentation for modules associated with the main module
DFA.

* Menu:

* DFA/ATN:: An augmented transition network object.
* DFA/Command:: A Discrete Finite Automata command processor.
* DFA/Kleene:: Kleene's Algorithm for Deterministic Finite Automata
* DFA/Simple:: A PERL module to implement simple Discrete Finite Automata


File: pm.info,  Node: DNS-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DNS Menu
********

   This is the documentation for modules associated with the main module
DNS.

* Menu:

* DNS/ZoneFile:: Object-Oriented Management of a Master File
* DNS/ZoneFile/Record:: single DNS record in a zone database


File: pm.info,  Node: Data-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Data Menu
*********

   This is the documentation for modules associated with the main module
Data.

* Menu:

* Data/Address/Standardize:: Standardize U.S. postal addresses.
* Data/Compare:: compare perl data structures
* Data/DRef:: Delimited-key access to complex data structures
* Data/Direct:: Perl module to emulate seqeuntial access to SQL tables.
* Data/Dump:: Pretty printing of data structures
* Data/DumpXML:: Dump arbitrary data structures as XML
* Data/DumpXML/Parser:: Restore data dumped by Data::DumpXML
* Data/Dumper:: stringified perl data structures, suitable for both printing and eval
* Data/FixedFormat:: converter between fixed-fields and hashes
* Data/Flow:: Perl extension for simple-minded recipe-controlled build of data.
* Data/Grove:: support for deeply nested structures
* Data/Grove/Parent:: provide parent properties to Data::Grove objects
* Data/Grove/Visitor:: add visitor/callback methods to Data::Grove objects
* Data/HexDump:: Hexadecial Dumper
* Data/Hexdumper:: A module for displaying binary data in a readable format
* Data/JavaScript:: Perl extension for dumping structures into JavaScript code
* Data/JavaScript/LiteObject:: Perl package to provide lightweight data dumping
* Data/Locations:: magic insertion points in your data
* Data/MagicTie:: This module implements a proxy like Perl TIE interface over local and remote Berkeley DB files containing BLOBs
* Data/MagicTie/BerkeleyDB:: This module is used by Data::MagicTie(3) to get a tied over SleepyCat BerkeleyDB files.
* Data/MagicTie/DBMS:: This module is used by Data::MagicTie(3) to get a tied remote interface over TCP/IP using DBMS(3) and DB_File(3)
* Data/MagicTie/DB_File:: This module is used by Data::MagicTie(3) to get a tied tied DB_File with locking support.
* Data/PropertyList:: Convert arbitrary objects to/from strings
* Data/Random:: Perl module to generate random data
* Data/Random/WordList:: Perl module to get random words from a word list
* Data/Reporter:: Report generator.
* Data/Reporter/Datasource:: Abstract base class for all the Reporter source data types
* Data/Reporter/Filesource:: Reporter handler for plain text information
* Data/Reporter/Orasource:: Reporter Handler for oracle connection
* Data/Reporter/RepFormat:: Allows text formatting with simple instructions, mapping to a user-defined grid (the sheet).
* Data/Reporter/Sybsource:: Reporter Handler for sybase connection
* Data/Reporter/VisSection:: handler to manipulate sections in VisRep.pl.
* Data/ShowTable:: routines to display tabular data in several formats.
* Data/Table:: Data type related to database tables, spreadsheets, CSV/TSV files, HTML table displays, etc.
* Data/Walker:: A tool for navigating through Perl data structures
* Data/Xtab:: Pivot (cross-tabulate) a table of data.


File: pm.info,  Node: Date-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Date Menu
*********

   This is the documentation for modules associated with the main module
Date.

* Menu:

* Date/Business:: fast calendar and business date calculations
* Date/Calc:: Gregorian calendar date calculations
* Date/Christmas:: Calculates the day of the week Christmas falls upon given the year.
* Date/Convert:: Convert Between any two Calendrical Formats
* Date/Discordian:: Calculate the Discordian date of a particular day
* Date/Easter:: Calculates Easter for any given year
* Date/Format:: Date formating subroutines
* Date/Horoscope:: Date operations based on the horoscope calendar
* Date/ISO:: Perl extension for converting dates between ISO and Gregorian formats.
* Date/Interval:: handling of temporal intervals based on Date::Manip
* Date/Lima:: MISSING SHORT DESCRIPTION
* Date/Manip:: date manipulation routines
* Date/Maya:: Translate between Julian days and Maya days.
* Date/Ordinal:: Conversion of dates to ordinal numbers and vice versa
* Date/Parse:: Parse date strings into time values
* Date/Tolkien/Shire:: Date::Tolkien::Shire.pm


File: pm.info,  Node: DateTime-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DateTime Menu
*************

   This is the documentation for modules associated with the main module
DateTime.

* Menu:

* DateTime/Precise:: Perform common time and date operations with additional GPS operations


File: pm.info,  Node: Db-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Db Menu
*******

   This is the documentation for modules associated with the main module
Db.

* Menu:

* Db/Ctree:: Perl extension to interface with Faircom's CTREE product
* Db/DFC:: Perl's Object-oriented interface to Documentum's DFC


File: pm.info,  Node: DbFramework-menu,  Next: Module List,  Prev: Module List,  Up: Module List

DbFramework Menu
****************

   This is the documentation for modules associated with the main module
DbFramework.

* Menu:

* DbFramework/Attribute:: Attribute class
* DbFramework/Catalog:: Catalog class
* DbFramework/DataModel:: Data Model class
* DbFramework/DataModelObject:: DataModelObject class
* DbFramework/DataType:: Data type class
* DbFramework/DataType/ANSII:: ANSII data type class
* DbFramework/DataType/Mysql:: Mysql data type class
* DbFramework/DefinitionObject:: DefinitionObject class
* DbFramework/ForeignKey:: Foreign Key class
* DbFramework/Key:: Key class
* DbFramework/Persistent:: Persistent Perl object base class
* DbFramework/PrimaryKey:: Primary key class
* DbFramework/Table:: Table class
* DbFramework/Template:: Fill template with database values
* DbFramework/Util:: DbFramework utility functions


File: pm.info,  Node: Decision-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Decision Menu
*************

   This is the documentation for modules associated with the main module
Decision.

* Menu:

* Decision/Markov:: Markov models for decision analysis
* Decision/Markov/State:: Markov state object for Decision::Markov


File: pm.info,  Node: Devel-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Devel Menu
**********

   This is the documentation for modules associated with the main module
Devel.

* Menu:

* Devel/Carp:: warn of errors (from perspective of caller)
* Devel/CoreStack:: try to generate a stack dump from a core file
* Devel/Coverage:: Perl module to perform coverage analysis
* Devel/DProf:: a Perl code profiler
* Devel/DebugInit:: Perl extension for creating a debugger initialization files from C header file macros
* Devel/DebugInit/GDB:: Perl extension for creating .gdbinit file from C header file macros
* Devel/FindAmpersand:: Report exactly where Perl sawampersand
* Devel/Leak:: Utility for looking for perl objects that are not reclaimed.
* Devel/Memo:: memoize function calls
* Devel/Modlist:: Perl extension to collect module use information
* Devel/OpProf:: Profile the internals of a Perl program
* Devel/Peek:: A data debugging tool for the XS programmer
* Devel/PreProcessor:: Module inlining and other Perl source manipulations
* Devel/SawAmpersand:: Perl extension querying sawampersand variable
* Devel/SelfStubber:: generate stubs for a SelfLoading module
* Devel/SmallProf:: per-line Perl profiler
* Devel/StackTrace:: Stack trace and stack trace frame objects
* Devel/Symdump:: dump symbol names or the symbol table
* Devel/Timer:: Track and report execution time for parts of code
* Devel/WeakRef:: weak references (not reference-counted)
* Devel/ptkdb:: Perl debugger using a Tk GUI


File: pm.info,  Node: Device-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Device Menu
***********

   This is the documentation for modules associated with the main module
Device.

* Menu:

* Device/ISDN/OCLM:: A perl module to control the 3com OfficeConnect LanModem
* Device/ISDN/OCLM/CurrentStatistics:: OCLM current call statistics
* Device/ISDN/OCLM/ISDNStatistics:: OCLM ISDN statistics
* Device/ISDN/OCLM/Last10Statistics:: OCLM Last10 call statistics
* Device/ISDN/OCLM/LastStatistics:: OCLM last call statistics
* Device/ISDN/OCLM/ManualStatistics:: OCLM manual call statistics
* Device/ISDN/OCLM/SPStatistics:: OCLM service provider statistics
* Device/ISDN/OCLM/Statistics:: OCLM statistics superclass
* Device/ISDN/OCLM/SystemStatistics:: OCLM system statistics


File: pm.info,  Node: Digest-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Digest Menu
***********

   This is the documentation for modules associated with the main module
Digest.

* Menu:

* Digest Itself: Digest. Modules that calculate message digests
* Digest/HMAC:: Keyed-Hashing for Message Authentication
* Digest/HMAC_MD5:: Keyed-Hashing for Message Authentication
* Digest/HMAC_SHA1:: Keyed-Hashing for Message Authentication
* Digest/MD2:: Perl interface to the MD2 Algorithm
* Digest/MD4:: Perl interface to the RSA Data Security Inc. MD4 Message-Digest Algorithm
* Digest/MD5:: Perl interface to the MD5 Algorithm
* Digest/Perl/MD5:: Perl implementation of Ron Rivests MD5 Algorithm
* Digest/SHA1:: Perl interface to the SHA-1 Algorithm
* Digest/Tiger:: a module that implements the tiger hash


File: pm.info,  Node: Dir-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Dir Menu
********

   This is the documentation for modules associated with the main module
Dir.

* Menu:

* Dir/Purge:: Purge directories to a given number of files.


File: pm.info,  Node: Document-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Document Menu
*************

   This is the documentation for modules associated with the main module
Document.

* Menu:

* Document/Info:: determine file type for Office documents


File: pm.info,  Node: Dunce-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Dunce Menu
**********

   This is the documentation for modules associated with the main module
Dunce.

* Menu:

* Dunce/Files:: Protects against sloppy use of files.


File: pm.info,  Node: Emacs-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Emacs Menu
**********

   This is the documentation for modules associated with the main module
Emacs.

* Menu:

* Emacs Itself: Emacs. Redefine Perl's system primitives to work inside of Emacs
* Emacs/EPL:: Protocol implementation and data conversions for Emacs Perl
* Emacs/EPL/Debug:: Demand-loaded protocol debugging support
* Emacs/Lisp:: Support for writing Emacs extensions in Perl


File: pm.info,  Node: Email-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Email Menu
**********

   This is the documentation for modules associated with the main module
Email.

* Menu:

* Email/Find:: Find RFC 822 email addresses in plain text
* Email/Valid:: Check validity of Internet email addresses


File: pm.info,  Node: Embedix-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Embedix Menu
************

   This is the documentation for modules associated with the main module
Embedix.

* Menu:

* Embedix/DB:: persistence for ECDs
* Embedix/DB/FileSystem:: FileSystem back-end for Embedix::DB
* Embedix/DB/Pg:: PostgreSQL back-end for Embedix::DB
* Embedix/DB/mysql:: MySQL back-end for Embedix::DB
* Embedix/ECD:: Embedix Component Descriptions as objects
* Embedix/ECD/Autovar:: an object for AUTOVAR nodes
* Embedix/ECD/Component:: an object for COMPONENT nodes
* Embedix/ECD/Group:: an object for GROUP nodes
* Embedix/ECD/Node:: a base class for ECD nodes
* Embedix/ECD/Option:: an object for OPTION nodes
* Embedix/ECD/Root:: a class for root nodes
* Embedix/ECD/Util:: miscellaneous stuff
* Embedix/ECD/XMLWriter:: adds a method to write ECD data as XML
* Embedix/ECD/XMLv1:: adds a method to write ECD data as XML


File: pm.info,  Node: English-menu,  Next: Module List,  Prev: Module List,  Up: Module List

English Menu
************

   This is the documentation for modules associated with the main module
English.

* Menu:

* English Itself: English. use nice English (or awk) names for ugly punctuation variables
* English/Reference:: use words to dereference things


File: pm.info,  Node: Env-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Env Menu
********

   This is the documentation for modules associated with the main module
Env.

* Menu:

* Env Itself: Env. perl module that imports environment variables as scalars or arrays
* Env/Array:: Perl module that "imports" environment variables as arrays
* Env/Path:: Advanced operations on path variables


File: pm.info,  Node: Envy-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Envy Menu
*********

   This is the documentation for modules associated with the main module
Envy.

* Menu:

* Envy/Load:: Load Envy Files


File: pm.info,  Node: Error-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Error Menu
**********

   This is the documentation for modules associated with the main module
Error.

* Menu:

* Error Itself: Error. Error/exception handling in an OO-ish way
* Error/Unhandled:: a Module for letting Errors do their own handling


File: pm.info,  Node: Event-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Event Menu
**********

   This is the documentation for modules associated with the main module
Event.

* Menu:

* Event Itself: Event. Event loop processing
* Event/MakeMaker:: MakeMaker glue for the C-level Event API
* Event/Stats:: Event loop statistics
* Event/tcpsession:: reliable bidirectional RPC session layer


File: pm.info,  Node: Exception-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Exception Menu
**************

   This is the documentation for modules associated with the main module
Exception.

* Menu:

* Exception/Class:: A module that allows you to declare real exception classes in Perl
* Exception/Cxx:: Switch to ANSI C++ exceptions


File: pm.info,  Node: Exporter-menu,  Next: Module List,  Prev: Module List,  Up: Module List

Exporter Menu
*************

   This is the documentation for modules associated with the main module
Exporter.

* Menu:

* Exporter Itself: Exporter. Implements default import method for modules
* Exporter/Heavy:: Exporter guts


File: pm.info,  Node: ExtUtils-menu,  Next: Module List,  Prev: Module List,  Up: Module List

ExtUtils Menu
*************

   This is the documentation for modules associated with the main module
ExtUtils.

* Menu:

* ExtUtils/Command:: utilities to replace common UNIX commands in Makefiles etc.
* ExtUtils/DynaGlue:: Methods for generating Perl extension files
* ExtUtils/Embed:: Utilities for embedding Perl in C/C++ applications
* ExtUtils/F77:: Simple interface to F77 libs
* ExtUtils/Install:: install files from here to there
* ExtUtils/Installed:: Inventory management of installed modules
* ExtUtils/Liblist:: determine libraries to use and how to use them
* ExtUtils/MM_Cygwin:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_OS2:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_Unix:: methods used by ExtUtils::MakeMaker
* ExtUtils/MM_VMS:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MM_Win32:: methods to override UN*X behaviour in ExtUtils::MakeMaker
* ExtUtils/MakeMaker:: create an extension Makefile
* ExtUtils/Manifest:: utilities to write and check a MANIFEST file
* ExtUtils/Miniperl:: write the C code for perlmain.c
* ExtUtils/Mkbootstrap:: make a bootstrap file for use by DynaLoader
* ExtUtils/Mksymlists:: write linker options files for dynamic extension
* ExtUtils/Packlist:: manage .packlist files
* ExtUtils/PerlPP:: A Perl Preprocessor
* ExtUtils/TBone:: a "skeleton" for writing "t/*.t" test files.
* ExtUtils/testlib:: add blib/* directories to @INC


File: pm.info,  Node: FAQ-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FAQ Menu
********

   This is the documentation for modules associated with the main module
FAQ.

* Menu:

* FAQ/OMatic/API:: a Perl API to manipulate FAQ-O-Matics


File: pm.info,  Node: FCGI-menu,  Next: Module List,  Prev: Module List,  Up: Module List

FCGI Menu
*********

   This is the documentation for modules associated with the main module
FCGI.

* Menu:

* FCGI Itself: FCGI. Fast CGI module
* FCGI/ProcManager:: functions for managing FastCGI applications.


