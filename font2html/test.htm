<html>
<body>
<pre>
<p style="color:#00FF00;background:#000000">
<span style="color:#FF4040;background:#000000">; This buffer is for notes you don't want to save, and for Lisp evaluation.(get-current-property face-foreground)
;; If you want to create a file, visit that file with C-x C-f,
;; then enter the text in that file's own buffer.
</span><span style="color:#00FF00;background:#000000">
(</span><span style="color:#C0F0FF;background:#000000">defun</span><span style="color:#00FF00;background:#000000"> </span><span style="color:#EEEE00;background:#000000">buffer-face-data</span><span style="color:#00FF00;background:#000000"> ()
  (</span><span style="color:#C0F0FF;background:#000000">save-excursion</span><span style="color:#00FF00;background:#000000">
    (</span><span style="color:#C0F0FF;background:#000000">let</span><span style="color:#00FF00;background:#000000"> ((text-with-colours nil)
          (current-foreground nil)
          (current-background nil)
          (current-text </span><span style="color:Wheat;background:#000000">""</span><span style="color:#00FF00;background:#000000">))
      (goto-char (point-min))
      (</span><span style="color:#C0F0FF;background:#000000">while</span><span style="color:#00FF00;background:#000000"> (not (equal 
                   (point)
                   (point-max)))
        (</span><span style="color:#C0F0FF;background:#000000">if</span><span style="color:#00FF00;background:#000000"> (and (equal current-foreground
                        (face-foreground (face-at-point)))
                 (equal current-background
                        (face-background (face-at-point))))
            (setq current-text (concat current-text
                                (drm-current-char)))
          (</span><span style="color:#C0F0FF;background:#000000">progn</span><span style="color:#00FF00;background:#000000">
            (setq text-with-colours
                  (cons
                   (list (cons current-foreground
                               current-background)
                         current-text)
                   text-with-colours))
            (setq current-foreground 
                  (face-foreground (face-at-point))
                  current-background
                  (face-background (face-at-point))
                  current-text (drm-current-char))))
        (forward-char))
      (cdr (reverse text-with-colours)))))


(face-background 'default)

(face-foreground (get-text-property 5 'face))

(buffer-face-data)

(get-current-property 'face-foreground)

</span><span style="color:black;background:white">(</span><span style="color:#00FF00;background:#000000">insert (buffer-to-html)</span><span style="color:black;background:white">)</span>
</pre>
</p>
</body>
</html>
